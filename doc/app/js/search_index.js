var search_data = {"index":{"searchIndex":["admin","dashboardcontroller","documentscontroller","lessonscontroller","mediaelementscontroller","messagescontroller","personificationscontroller","purchasescontroller","reportscontroller","settingscontroller","userscontroller","admincontroller","adminhelper","adminsearchform","applicationcontroller","applicationhelper","audio","audioeditorcontroller","bookmark","buttondestinations","buttons","dashboardcontroller","document","documentuploader","documentscontroller","documentsslide","dumpable","nomethoderror","envrelativepath","classmethods","export","assets","lesson","archive","assets","ebook","assets","view","helper","scorm","assets","view","helper","shared","ebookandebookview","renderer","view","faqscontroller","filenametoken","instancemethods","filters","galleriescontroller","image","imageeditorcontroller","imageuploader","lesson","lessoneditorcontroller","lessonexportcontroller","lessonviewercontroller","lessonscontroller","lessonsmediaelementsshared","like","location","mailinglistaddress","mailinglistgroup","mailinglistscontroller","maintainernotificationsmailer","media","audio","editing","cmd","avconv","concat","conversion","crop","sox","composer","job","concat","conversion","job","crop","parameters","uploader","validation","cmd","avconv","avprobe","error","image","editing","addtexttoimage","cmd","texttoimage","crop","resizetofill","intmpdir","info","logging","classmethods","instancemethods","queue","shared","instancemethods","similardurations","uploader","video","editing","cmd","audiostreamtofile","avconv","concat","mp4","webm","conversion","crop","extractframe","generatetransitionframes","imagetovideo","m4atowav","mergewebmvideostreams","replaceaudio","transition","trimaudiofile","videostreamtofile","composer","job","concat","conversion","job","crop","imagetovideo","parameters","replaceaudio","texttovideo","transition","uploader","validation","mediaelement","viewertypes","mediaelementscontroller","mediaelementsslide","notification","notificationscontroller","notificationsjob","notificationstest","prelogincontroller","purchase","report","reportscontroller","schoollevel","searchcontroller","searchorders","slide","mathimages","statistics","statuses","subject","tag","tagging","tagscontroller","threadproc","timeconvert","timeconverter","urltypes","instancemethods","user","authentication","classmethods","instancemethods","confirmation","classmethods","instancemethods","resetpassword","classmethods","instancemethods","usermailer","users","sessionscontroller","userscontroller","userssubject","valid","validness","video","videoeditorcontroller","virtualclassroomcontroller","virtualclassroomlesson","absolute_store_dir_pathname()","accept()","accept()","accept_policies()","accepted_media_element_sti_type()","account_confirmation()","achannels()","acodec()","acodec()","acodec()","acodec()","acodec()","action_html_class()","activate()","add()","add()","add_lesson()","add_lesson_to_playlist()","add_path_entry()","add_slide()","add_slide()","add_string_entry()","add_template()","add_text()","add_text()","add_to_playlist()","add_to_virtual_classroom()","address_to_s()","admin()","admin?()","admin_authenticate()","admin_quick_uploading_cache()","all_liked_lessons()","all_shared_elements()","all_shared_lessons()","all_users()","all_users_like()","allows_document?()","allows_text?()","allows_title?()","amap()","amap()","amap()","ancestry_with_me()","ar()","archive()","asset_path()","asset_path()","asset_path()","asset_path_upfolders()","assets()","assets()","assets_compiled?()","assets_compiled?()","assets_compiled?()","assets_files()","assets_files()","assets_files()","astreams()","astreams()","audio()","audio()","audio?()","audio_copy()","audio_editor_available()","audio_editor_cache()","audio_editor_cache!()","audio_for_audio_editor()","audio_for_audio_editor_new_block()","audio_for_lesson_editor()","audio_for_lesson_editor_new_block()","audio_for_video_editor()","audio_for_video_editor_new_block()","audio_streams()","audios_test()","authenticate()","available!()","available?()","background_position()","background_position()","background_size()","ban()","banned_pre_authenticate()","base_label()","base_location()","blank?()","bookmark()","bookmarked?()","bookmarked?()","browser_not_supported()","buttons()","buttons()","cache_dir()","cache_dir()","cache_folder_images()","cannot_destroy_while_converting()","change_position()","change_position()","change_position_in_playlist()","change_slide_position()","char_for_email?()","chart_colors()","check_and_destroy()","check_available_for_user()","check_available_for_user()","check_available_for_user()","check_available_for_user()","check_conversion()","check_conversion()","check_presence()","check_saas()","clean()","clear_password_and_password_confirmation()","cmd()","cmd!()","cmd!()","cmd!()","cmd!()","cmd!()","cmd!()","cmd!()","cmd!()","cmd!()","cmd!()","cmd!()","cmd_entry()","codecs()","column_changed?()","compile()","compile()","compiled?()","compiled?()","compose()","compose()","compose_audio()","compose_image()","compose_text()","compose_video()","composed?()","concat()","concat()","confirm()","confirm!()","confirmation_token!()","contact_us_link()","controller_html_class()","convert_audio_to_parameters()","convert_document_error_messages()","convert_in_chinese()","convert_in_english()","convert_in_italian()","convert_lesson_error_messages()","convert_media_element_error_messages()","convert_parameters()","convert_parameters()","convert_to()","convert_to()","convert_to()","convert_to_primitive_parameters()","convert_to_primitive_parameters()","convert_user_error_messages()","convert_video_to_parameters()","copy()","copy()","copy()","copy_first_inputs_to_outputs()","copy_first_inputs_to_outputs()","copy_math_images()","copy_to()","correct_integer?()","cover()","cover?()","cover_image_path()","cover_of?()","cover_output_path()","cover_url()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_address()","create_audio()","create_document()","create_fake()","create_fake()","create_fake_document()","create_fake_media_element()","create_group()","create_image()","create_lesson()","create_location()","create_log_folder()","create_log_folder()","create_log_folder()","create_or_update_cover()","create_token()","create_token()","create_uuid()","create_video()","crop()","crop()","crop()","current_editing_image()","current_threads_amount()","current_user()","current_user!()","current_user=()","dashboard_emptied?()","dashboard_emptied?()","data()","dc_date()","dcterms_modified()","decline()","decline()","default_output_options()","default_url_options()","delete_address()","delete_group()","delete_school_level()","delete_slide()","delete_subject()","delete_tag()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_fake()","destroy_notification_and_reload()","destroy_orphan_tags()","destroy_taggings()","destroy_virtual_classroom()","destroy_with_dependencies()","destroy_with_notifications()","destroy_with_notifications()","destroy_with_positions()","disable_lessons_containing_me()","dislike()","dislike()","document_fallback_filename()","document_fallbacks_relative_from_content_path()","document_for_lesson_editor()","document_for_lesson_editor_filter()","document_for_lesson_editor_new_block()","document_item_fallback_id()","document_item_id()","documents_files()","documents_type_color()","dont_notify_changes()","dont_notify_modification()","duration()","duration()","duration()","duration()","duration()","duration()","duration_keys()","durations()","durations?()","ebook()","ebook_resources_formats()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","editing_url()","email?()","empty_cache()","empty_cache()","empty_parameters()","empty_parameters()","empty_playlist()","empty_playlist()","empty_virtual_classroom()","empty_virtual_classroom()","enable_lessons_containing_me()","encode_with()","encrypt_password()","end_frame()","end_frame_extraction_start_seek()","english_day_suffix()","english_month()","enter_edit_mode()","entry()","env()","env()","env_relative_path()","env_relative_pathname()","error_message()","error_message()","error_message_for_converted_files()","error_message_for_converted_files()","error_message_for_file_to_convert()","error_message_for_file_to_convert()","exception()","exitstatus()","expired?()","extension()","extension()","extension_white_list()","extract()","extract_cache()","extract_cache()","extract_component()","extract_cover()","extract_cover()","extract_end_transition_frame()","extract_form_parameters()","extract_form_parameters()","extract_image_component()","extract_single_form_parameter()","extract_start_transition_frame()","extract_text_component()","extract_textareas_params()","extract_thumb()","extract_thumb()","extract_versions()","extract_versions()","extract_versions()","extract_video_component()","extract_with_cathegories()","failed_authentication_redirect_args()","filename()","filename()","filename()","filename_token()","filename_without_extension()","filetype()","fill_locations()","filter()","filter_users()","final_wav()","find_locations()","find_locations()","find_locations()","find_or_create()","find_or_create()","find_or_create()","folder()","folder()","folder()","folder()","folder()","folder()","folder_images()","folder_size()","folder_size()","folder_size()","folders_images()","following()","formats()","frame_rate()","frames_amount()","frames_format()","full_name()","full_url()","full_virtual_classroom()","gender()","generate_confirmation_token()","generate_password_token()","generate_token()","get()","get_association()","get_audios()","get_audios_and_videos_for_reload()","get_class_from_column_name()","get_documents()","get_friendly_tags()","get_from_chain_params()","get_full_names()","get_full_names()","get_images()","get_lessons()","get_lessons()","get_lessons_for_dashboard()","get_list()","get_locale()","get_media_element_from_hash()","get_media_element_from_hash()","get_media_elements()","get_media_elements_for_dashboard()","get_new_block()","get_own_documents()","get_own_lessons()","get_own_media_elements()","get_recursive_array_from_params()","get_result_lessons()","get_result_lessons_by_specific_tag()","get_result_media_elements()","get_result_media_elements_by_specific_tag()","get_tags_associated_to_lesson_search()","get_tags_associated_to_media_element_search()","get_tags_for_autocomplete()","get_tags_for_item()","get_videos()","global_options()","good_bookmarkable_type()","good_reportable_type()","good_taggable_type()","handle_expanded_lessons_in_dashboard()","handle_expanded_media_elements_in_dashboard()","hard_disk_chart()","has_been_seen()","hash()","height()","height()","height=()","home()","human_size()","icon_title()","icon_url()","ie()","image()","image?()","image_figure_classes()","image_for_image_editor()","image_for_image_editor_new_block()","image_for_lesson_editor()","image_for_lesson_editor_new_block()","image_path()","image_process()","image_style()","ims_duration()","in_edit_mode?()","in_playlist?()","in_tmp_dir()","in_virtual_classroom?()","included()","included()","included()","included()","included()","included()","included()","included()","increase_rpadding_depending_on_video_overflow()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","init_math_images_copy()","init_model()","init_model()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","init_validation()","initialize_and_authenticate_for_lesson_export()","initialize_audio_with_owner_or_public()","initialize_document()","initialize_documents_slides()","initialize_emails()","initialize_general_profile()","initialize_image_with_owner_and_private()","initialize_image_with_owner_or_public()","initialize_kind()","initialize_layout()","initialize_lesson()","initialize_lesson_destination()","initialize_lesson_for_sending_link()","initialize_lesson_with_owner()","initialize_lesson_with_owner_and_slide()","initialize_lesson_with_owner_or_public()","initialize_loaded_lessons()","initialize_location()","initialize_mailing_list_address()","initialize_mailing_list_address_with_owner()","initialize_mailing_list_group()","initialize_mailing_list_group_with_owner()","initialize_media_element()","initialize_media_element_creation()","initialize_media_element_destination()","initialize_media_element_with_owner()","initialize_media_element_with_owner_and_private()","initialize_media_element_with_owner_or_public()","initialize_metadata()","initialize_notification_offset()","initialize_notification_with_owner()","initialize_page()","initialize_page()","initialize_pagination()","initialize_paginator()","initialize_paginator()","initialize_paginator()","initialize_paginator()","initialize_paginator_and_filters()","initialize_paginator_and_filters_for_lessons()","initialize_paginator_and_filters_for_media_elements()","initialize_players_counter()","initialize_position()","initialize_registration_form()","initialize_subjects()","initialize_subjects_profile()","initialize_video_with_owner_or_public()","initialize_virtual_classroom_lesson()","initialize_word_and_specific_tag()","input()","input()","input_height()","input_options()","input_options_and_input_files()","input_width()","inputs()","inspect()","instance()","instance()","invalid?()","is_deletable?()","is_deletable?()","is_descendant_of?()","is_horizontal?()","is_horizontal?()","italian_month()","jsd()","label()","label_at()","last_slide()","leave_edit_mode()","lesson()","lessons()","lessons()","lessons_for_tag()","like()","like()","like_button()","liked?()","link_form()","load_lessons()","load_media_element()","load_preview()","load_slide()","location_association_class()","location_to_s()","locations()","log_folder()","log_folder()","log_folder()","log_folder()","log_folder()","log_folder()","log_folder()","log_folder()","log_folder()","log_folder()","log_folder_name()","log_folder_name()","logged_in?()","logged_upgrade_trial()","logs()","ltrim()","m4a_duration()","m4a_duration=()","m4a_inputs()","m4a_output()","m4a_url()","mailing_lists()","manage_lessons_containing_me()","manipulate_url()","maps()","math_image_item_href()","math_image_item_id()","math_image_path_relative_from_contents_folder()","math_images()","math_images()","math_images=()","math_images_archive_folder_name()","math_images_paths()","math_images_paths()","max_media_column_size()","max_processed_filename_size()","maximum_folder_size_exceeded?()","maximum_media_elements_folder_size_exceeded?()","media()","media=()","media_element()","media_element_item_attributes()","media_element_mime_type()","media_element_path()","media_elements()","media_elements()","media_elements_at()","media_elements_files()","media_elements_folder_size()","media_elements_folder_size_alert()","media_elements_for_tag()","media_validation()","mime_type()","min_duration()","min_duration()","mixed_for_video_editor()","mixed_for_video_editor_image_new_block()","mixed_for_video_editor_video_new_block()","mm_input()","model()","model()","model_id()","modified?()","modify()","mp4_duration()","mp4_duration=()","mp4_inputs()","mp4_output()","mp4_output_path()","mp4_url()","my_copied_lessons()","my_created_elements()","my_created_lessons()","my_liked_lessons()","my_likes_count()","my_linked_lessons_count()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_mailing_list_name()","new_notification()","new_password()","new_password_confirmed()","new_school_level()","new_subject()","new_with_sti_type_inferring()","next_in_playlist()","notification_translation_key()","notification_translation_key()","notifications_visible_block()","notify_changes()","notify_modification()","number_notifications_not_seen()","ogg_duration()","ogg_duration=()","ogg_inputs()","ogg_output()","ogg_url()","original_extension()","original_extension()","original_filename()","original_filename_extension()","original_filename_without_extension()","original_filename_without_extension()","original_filename_without_extension()","output()","output()","output()","output()","output_filename_without_extension()","output_filename_without_extension()","output_folder()","output_folder()","output_folder()","output_options()","output_path()","output_path()","output_path()","output_path()","output_path_without_extension()","output_threads()","output_threads()","output_without_extension()","output_without_extension()","outputs()","outputs()","outputs()","outputs()","outputs()","overwrite()","overwrite()","overwrite()","overwrite!()","own_documents()","own_lessons()","own_mailing_list_groups()","own_media_elements()","package_id()","paddings()","page_items_counter()","page_not_found()","parallel_jobs()","params_with_standard_keys()","params_with_standard_keys()","params_with_standard_keys()","parent_locations()","parse_audio_stream()","parse_video_stream()","password_token!()","path()","pathname_nestings()","paths()","paths()","paths()","paths()","paths()","paths()","percentage()","perform()","perform()","perform()","perform()","perform()","personificated_user()","personificated_user=()","placeholder_url()","placeholder_url()","playlist()","playlist()","playlist_for_viewer()","playlist_full?()","prepare_for_conversion()","prepare_for_conversion()","prepare_lesson_for_js()","prepare_media_element_for_js()","present_parent_id()","prev_editing_image()","prev_in_playlist()","previous()","processed_filename()","processed_original_filename()","processed_original_filename_without_extension()","profile()","public_relative_folder()","public_relative_path()","publish()","publish()","purchase_attributes()","purchase_code()","purchase_full()","purchase_resume()","qa()","qa()","qa()","qa()","quick_upload()","quick_upload_delete()","qv()","qv()","qv()","ratio_value()","reached_the_maximum_of_slides?()","reconfirm()","redirect_or_setup()","redirect_to_dashboard_if_logged_in()","registration()","registration_policies()","reload()","reload()","reload_media()","remove()","remove()","remove_folder()","remove_folder!()","remove_folder!()","remove_folder!()","remove_folder!()","remove_folder!()","remove_folder!()","remove_folder!()","remove_folder!()","remove_folder!()","remove_folder!()","remove_from_admin_quick_uploading_cache()","remove_from_playlist()","remove_from_virtual_classroom()","remove_lesson()","remove_lesson_from_inside()","remove_lesson_from_playlist()","remove_math_images_folder()","remove_old_files()","rename?()","render_js_or_html_index()","render_not_found()","replace_audio()","report_lesson()","report_media_element()","reports()","request_reset_password()","request_upgrade_trial()","reset_filename_token()","reset_password()","reset_password!()","resize_height()","resize_height()","resize_width()","resize_width()","restore_cache()","restore_cache()","restore_lesson_availability()","rtrim()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run!()","saas_pre_authenticate()","sass_config()","save()","save()","save()","save()","save_cache()","save_cache()","save_current_slide()","save_editing_prev()","save_in_admin_quick_uploading_cache()","save_math_images()","save_slide()","save_slide_and_edit()","save_slide_and_exit()","school_levels()","scorm()","scorm_locale()","scorm_school_level()","scorm_slide_title()","search_documents()","search_lessons()","search_lessons()","search_lessons_with_tag()","search_lessons_without_tag()","search_media_elements()","search_media_elements()","search_media_elements_with_tag()","search_media_elements_without_tag()","search_notifications_users()","search_order()","search_purchases()","search_tags()","search_users()","seconds_to_time()","secure_compare()","see_my_lesson()","seek()","seen()","select_lessons()","select_lessons_new_block()","select_with_selected()","select_without_selected()","send_link()","send_link()","send_notifications()","send_reset_password()","send_to()","send_upgrade_trial()","set_converted_to_true()","set_creation_mode()","set_locale()","set_size()","set_status()","set_status()","set_status()","set_width_and_height()","shellescaped_text()","shellescaped_text()","shellescaped_trim()","shortest()","shortest()","show()","similar_durations?()","similar_to?()","size()","size()","size()","size()","size=()","size_and_extension()","skip_authenticate_user_if_token()","slide_content()","slide_filename()","slide_item_id()","slide_path()","slide_title()","sn()","sn()","sn()","sox_input()","sox_output()","sox_pad()","start()","start()","start_frame()","statistics()","status()","status()","status()","stderr_log()","stdout_log()","sti_type_to_s()","stop_if_cover()","stop_if_public()","store_dir()","store_dir()","streams()","strict()","stylesheet_path()","subject_ids=()","subjects()","subjects()","subjects()","subjects_chart()","suggested_lessons()","suggested_media_elements()","super_admin?()","tags()","tags()","tags()","tags=()","tags=()","temp_folder()","temp_folder()","temp_folder()","temp_folder()","temp_path()","temp_path()","temp_path()","temp_path()","text()","text=()","thread_relative_log_folder()","thread_relative_log_folder=()","thread_relative_log_folder_name()","thumb_output_path()","thumb_url()","thumb_url()","thumb_url()","time()","time_difference_single()","time_difference_to_s()","time_difference_to_s()","title=()","title_tag()","tmp_path()","to_a()","to_hash()","to_hash()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_string()","to_string()","toggle_locations()","toggle_publish()","tot_notifications_number()","total_prototype_time()","total_prototype_time()","transition()","trial()","trial?()","trial_to_expiration()","trial_to_expiration_percentage()","try_all()","two_digits_number()","type()","unauthorized()","undo()","undo()","unpublish()","unpublish()","unsupported_format?()","update()","update()","update()","update()","update()","update()","update_group()","update_location()","update_ok()","update_or_create_tags()","update_or_create_tags()","update_subjects()","update_with_media_elements()","upgrade_trial_link()","upload()","upload_copy_and_job()","upload_or_copy()","upload_or_copy()","uploaded?()","uploaded_filename_without_extension()","uploaded_path_extension()","uploaded_path_extension()","uri_path_and_query()","url()","url()","url()","url()","url()","url()","url_by_url_type()","url_by_url_type()","used_in_private_lessons()","used_in_private_lessons()","used_in_your_lessons?()","valid?()","valid?()","valid_password?()","validate_accounts_number_for_purchase()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_associations()","validate_availability()","validate_availability()","validate_availability()","validate_codes()","validate_copied_not_modified()","validate_copied_not_modified_and_public()","validate_cover()","validate_dates()","validate_email()","validate_email()","validate_email()","validate_email_not_changed()","validate_image_properties()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_impossible_changes()","validate_math_images()","validate_math_images_links()","validate_max_number_in_slide()","validate_max_number_slides()","validate_maximum_folder_size()","validate_maximum_media_elements_folder_size()","validate_media_element()","validate_playlist_length()","validate_position()","validate_positions()","validate_public()","validate_publication_date()","validate_seen()","validate_size()","validate_size()","validate_slide_type()","validate_tags_length()","validate_tags_length()","validate_text()","validate_title()","validate_type_in_slide()","validation()","validation()","vbitrate()","vcodec()","vcodec()","vcodec()","version_formats()","version_input_path_keys()","version_input_paths()","version_input_paths?()","vfilters()","vframes()","video()","video?()","video_copy()","video_editor_available()","video_editor_cache()","video_editor_cache!()","video_for_lesson_editor()","video_for_lesson_editor_new_block()","video_stream_duration()","video_streams()","videos_test()","view_path()","virtual_classroom()","virtual_classroom_button()","visive_tags()","visive_tags()","visive_tags()","vmap()","vstreams()","wavs_with_paddings()","webm_duration()","webm_duration=()","webm_inputs()","webm_output()","webm_output_path()","webm_url()","what_is()","width()","width()","width=()","word=()","word_not_changed()","write_asset()","readme"],"longSearchIndex":["admin","admin::dashboardcontroller","admin::documentscontroller","admin::lessonscontroller","admin::mediaelementscontroller","admin::messagescontroller","admin::personificationscontroller","admin::purchasescontroller","admin::reportscontroller","admin::settingscontroller","admin::userscontroller","admincontroller","adminhelper","adminsearchform","applicationcontroller","applicationhelper","audio","audioeditorcontroller","bookmark","buttondestinations","buttons","dashboardcontroller","document","documentuploader","documentscontroller","documentsslide","dumpable","dumpable::nomethoderror","envrelativepath","envrelativepath::classmethods","export","export::assets","export::lesson","export::lesson::archive","export::lesson::archive::assets","export::lesson::ebook","export::lesson::ebook::assets","export::lesson::ebook::view","export::lesson::ebook::view::helper","export::lesson::scorm","export::lesson::scorm::assets","export::lesson::scorm::view","export::lesson::scorm::view::helper","export::lesson::shared","export::lesson::shared::ebookandebookview","export::renderer","export::view","faqscontroller","filenametoken","filenametoken::instancemethods","filters","galleriescontroller","image","imageeditorcontroller","imageuploader","lesson","lessoneditorcontroller","lessonexportcontroller","lessonviewercontroller","lessonscontroller","lessonsmediaelementsshared","like","location","mailinglistaddress","mailinglistgroup","mailinglistscontroller","maintainernotificationsmailer","media","media::audio","media::audio::editing","media::audio::editing::cmd","media::audio::editing::cmd::avconv","media::audio::editing::cmd::concat","media::audio::editing::cmd::conversion","media::audio::editing::cmd::crop","media::audio::editing::cmd::sox","media::audio::editing::composer","media::audio::editing::composer::job","media::audio::editing::concat","media::audio::editing::conversion","media::audio::editing::conversion::job","media::audio::editing::crop","media::audio::editing::parameters","media::audio::uploader","media::audio::uploader::validation","media::cmd","media::cmd::avconv","media::cmd::avprobe","media::error","media::image","media::image::editing","media::image::editing::addtexttoimage","media::image::editing::cmd","media::image::editing::cmd::texttoimage","media::image::editing::crop","media::image::editing::resizetofill","media::intmpdir","media::info","media::logging","media::logging::classmethods","media::logging::instancemethods","media::queue","media::shared","media::shared::instancemethods","media::similardurations","media::uploader","media::video","media::video::editing","media::video::editing::cmd","media::video::editing::cmd::audiostreamtofile","media::video::editing::cmd::avconv","media::video::editing::cmd::concat","media::video::editing::cmd::concat::mp4","media::video::editing::cmd::concat::webm","media::video::editing::cmd::conversion","media::video::editing::cmd::crop","media::video::editing::cmd::extractframe","media::video::editing::cmd::generatetransitionframes","media::video::editing::cmd::imagetovideo","media::video::editing::cmd::m4atowav","media::video::editing::cmd::mergewebmvideostreams","media::video::editing::cmd::replaceaudio","media::video::editing::cmd::transition","media::video::editing::cmd::trimaudiofile","media::video::editing::cmd::videostreamtofile","media::video::editing::composer","media::video::editing::composer::job","media::video::editing::concat","media::video::editing::conversion","media::video::editing::conversion::job","media::video::editing::crop","media::video::editing::imagetovideo","media::video::editing::parameters","media::video::editing::replaceaudio","media::video::editing::texttovideo","media::video::editing::transition","media::video::uploader","media::video::uploader::validation","mediaelement","mediaelement::viewertypes","mediaelementscontroller","mediaelementsslide","notification","notificationscontroller","notificationsjob","notificationstest","prelogincontroller","purchase","report","reportscontroller","schoollevel","searchcontroller","searchorders","slide","slide::mathimages","statistics","statuses","subject","tag","tagging","tagscontroller","threadproc","timeconvert","timeconvert::timeconverter","urltypes","urltypes::instancemethods","user","user::authentication","user::authentication::classmethods","user::authentication::instancemethods","user::confirmation","user::confirmation::classmethods","user::confirmation::instancemethods","user::resetpassword","user::resetpassword::classmethods","user::resetpassword::instancemethods","usermailer","users","users::sessionscontroller","userscontroller","userssubject","valid","valid::validness","video","videoeditorcontroller","virtualclassroomcontroller","virtualclassroomlesson","documentuploader#absolute_store_dir_pathname()","admin::reportscontroller#accept()","report#accept()","user#accept_policies()","slide#accepted_media_element_sti_type()","usermailer#account_confirmation()","media::cmd::avconv#achannels()","media::cmd::avconv#acodec()","media::video::editing::cmd::concat::mp4#acodec()","media::video::editing::cmd::concat::webm#acodec()","media::video::editing::cmd::m4atowav#acodec()","media::video::editing::cmd::replaceaudio#acodec()","applicationhelper#action_html_class()","admin::userscontroller#activate()","lessonscontroller#add()","mediaelementscontroller#add()","virtualclassroomcontroller#add_lesson()","virtualclassroomcontroller#add_lesson_to_playlist()","export::lesson::shared#add_path_entry()","lesson#add_slide()","lessoneditorcontroller#add_slide()","export::lesson::shared#add_string_entry()","export::lesson::ebook#add_template()","image#add_text()","imageeditorcontroller#add_text()","virtualclassroomlesson#add_to_playlist()","lesson#add_to_virtual_classroom()","purchase#address_to_s()","user::admin()","user#admin?()","applicationcontroller#admin_authenticate()","user#admin_quick_uploading_cache()","statistics#all_liked_lessons()","statistics#all_shared_elements()","statistics#all_shared_lessons()","statistics#all_users()","statistics#all_users_like()","slide#allows_document?()","slide#allows_text?()","slide#allows_title?()","media::audio::editing::cmd::conversion#amap()","media::video::editing::cmd::conversion#amap()","media::video::editing::cmd::m4atowav#amap()","location#ancestry_with_me()","media::cmd::avconv#ar()","lessonexportcontroller#archive()","export::lesson::archive::assets#asset_path()","export::lesson::ebook::assets#asset_path()","export::lesson::scorm::assets#asset_path()","export::assets#asset_path_upfolders()","export::assets#assets()","export::lesson::archive::assets#assets()","export::lesson::archive#assets_compiled?()","export::lesson::ebook#assets_compiled?()","export::lesson::scorm#assets_compiled?()","export::lesson::archive#assets_files()","export::lesson::ebook#assets_files()","export::lesson::scorm#assets_files()","media::audio::editing::cmd::conversion#astreams()","media::video::editing::cmd::conversion#astreams()","media::audio::editing::composer#audio()","media::video::editing::composer#audio()","mediaelement#audio?()","media::audio::editing::composer#audio_copy()","user#audio_editor_available()","user#audio_editor_cache()","user#audio_editor_cache!()","galleriescontroller#audio_for_audio_editor()","galleriescontroller#audio_for_audio_editor_new_block()","galleriescontroller#audio_for_lesson_editor()","galleriescontroller#audio_for_lesson_editor_new_block()","galleriescontroller#audio_for_video_editor()","galleriescontroller#audio_for_video_editor_new_block()","media::info#audio_streams()","mediaelementscontroller#audios_test()","applicationcontroller#authenticate()","lesson#available!()","lesson#available?()","image#background_position()","mediaelementsslide#background_position()","mediaelementsslide#background_size()","admin::userscontroller#ban()","applicationcontroller#banned_pre_authenticate()","location::base_label()","user#base_location()","media::uploader#blank?()","user#bookmark()","lesson#bookmarked?()","mediaelement#bookmarked?()","applicationcontroller#browser_not_supported()","lesson#buttons()","mediaelement#buttons()","documentuploader#cache_dir()","imageuploader#cache_dir()","slide::mathimages#cache_folder_images()","media::shared::instancemethods#cannot_destroy_while_converting()","slide#change_position()","virtualclassroomlesson#change_position()","virtualclassroomcontroller#change_position_in_playlist()","lessoneditorcontroller#change_slide_position()","valid::char_for_email?()","subject::chart_colors()","mediaelement#check_and_destroy()","audioeditorcontroller#check_available_for_user()","lessoneditorcontroller#check_available_for_user()","lessonscontroller#check_available_for_user()","videoeditorcontroller#check_available_for_user()","lessoneditorcontroller#check_conversion()","mediaelementscontroller#check_conversion()","tagscontroller#check_presence()","admin::purchasescontroller#check_saas()","media::shared::instancemethods#clean()","user::authentication::instancemethods#clear_password_and_password_confirmation()","media::cmd#cmd()","media::audio::editing::cmd::concat#cmd!()","media::cmd#cmd!()","media::cmd::avconv#cmd!()","media::cmd::avprobe#cmd!()","media::image::editing::addtexttoimage#cmd!()","media::image::editing::cmd::texttoimage#cmd!()","media::video::editing::cmd::audiostreamtofile#cmd!()","media::video::editing::cmd::generatetransitionframes#cmd!()","media::video::editing::cmd::mergewebmvideostreams#cmd!()","media::video::editing::cmd::trimaudiofile#cmd!()","media::video::editing::cmd::videostreamtofile#cmd!()","media::audio::editing::cmd::concat#cmd_entry()","media::cmd::avconv#codecs()","media::uploader#column_changed?()","export::assets#compile()","export::assets::compile()","export::assets::compiled?()","export::assets#compiled?()","media::audio::editing::composer#compose()","media::video::editing::composer#compose()","media::audio::editing::composer#compose_audio()","media::video::editing::composer#compose_image()","media::video::editing::composer#compose_text()","media::video::editing::composer#compose_video()","media::shared::instancemethods#composed?()","media::audio::editing::concat#concat()","media::video::editing::concat#concat()","userscontroller#confirm()","user::confirmation::classmethods#confirm!()","user::confirmation::instancemethods#confirmation_token!()","applicationhelper#contact_us_link()","applicationhelper#controller_html_class()","audioeditorcontroller#convert_audio_to_parameters()","applicationcontroller#convert_document_error_messages()","timeconvert::timeconverter#convert_in_chinese()","timeconvert::timeconverter#convert_in_english()","timeconvert::timeconverter#convert_in_italian()","applicationcontroller#convert_lesson_error_messages()","applicationcontroller#convert_media_element_error_messages()","media::audio::editing::parameters#convert_parameters()","media::video::editing::parameters#convert_parameters()","media::audio::editing::conversion#convert_to()","media::video::editing::conversion#convert_to()","media::video::editing::imagetovideo#convert_to()","media::audio::editing::parameters#convert_to_primitive_parameters()","media::video::editing::parameters#convert_to_primitive_parameters()","applicationcontroller#convert_user_error_messages()","videoeditorcontroller#convert_video_to_parameters()","lesson#copy()","lessonscontroller#copy()","media::uploader#copy()","media::audio::editing::concat#copy_first_inputs_to_outputs()","media::video::editing::concat#copy_first_inputs_to_outputs()","slide#copy_math_images()","slide::mathimages#copy_to()","applicationcontroller#correct_integer?()","lesson#cover()","slide#cover?()","export::lesson::ebook::view::helper#cover_image_path()","mediaelement#cover_of?()","media::video::uploader#cover_output_path()","video#cover_url()","admin::mediaelementscontroller#create()","admin::personificationscontroller#create()","admin::purchasescontroller#create()","documentscontroller#create()","export::lesson::archive#create()","export::lesson::ebook#create()","export::lesson::scorm#create()","lessoneditorcontroller#create()","mediaelementscontroller#create()","users::sessionscontroller#create()","userscontroller#create()","mailinglistscontroller#create_address()","galleriescontroller#create_audio()","galleriescontroller#create_document()","documentscontroller#create_fake()","mediaelementscontroller#create_fake()","galleriescontroller#create_fake_document()","galleriescontroller#create_fake_media_element()","mailinglistscontroller#create_group()","galleriescontroller#create_image()","user#create_lesson()","admin::settingscontroller#create_location()","media::audio::editing::composer#create_log_folder()","media::logging::instancemethods#create_log_folder()","media::video::editing::composer#create_log_folder()","lesson#create_or_update_cover()","lesson#create_token()","purchase#create_token()","lesson#create_uuid()","galleriescontroller#create_video()","image#crop()","imageeditorcontroller#crop()","media::video::editing::crop#crop()","image#current_editing_image()","media::queue#current_threads_amount()","applicationcontroller#current_user()","applicationcontroller#current_user!()","applicationcontroller#current_user=()","lesson::dashboard_emptied?()","mediaelement#dashboard_emptied?()","media::error#data()","export::lesson::ebook::view::helper#dc_date()","export::lesson::ebook::view::helper#dcterms_modified()","admin::reportscontroller#decline()","report#decline()","media::cmd::avconv#default_output_options()","export::lesson::scorm::view::helper#default_url_options()","mailinglistscontroller#delete_address()","mailinglistscontroller#delete_group()","admin::settingscontroller#delete_school_level()","lessoneditorcontroller#delete_slide()","admin::settingscontroller#delete_subject()","admin::settingscontroller#delete_tag()","admin::documentscontroller#destroy()","admin::lessonscontroller#destroy()","admin::mediaelementscontroller#destroy()","admin::personificationscontroller#destroy()","admin::userscontroller#destroy()","documentscontroller#destroy()","lessonscontroller#destroy()","mediaelementscontroller#destroy()","notificationscontroller#destroy()","users::sessionscontroller#destroy()","mediaelementscontroller#destroy_fake()","user#destroy_notification_and_reload()","tagging#destroy_orphan_tags()","tag#destroy_taggings()","bookmark#destroy_virtual_classroom()","user#destroy_with_dependencies()","document#destroy_with_notifications()","lesson#destroy_with_notifications()","slide#destroy_with_positions()","mediaelement#disable_lessons_containing_me()","lessonscontroller#dislike()","user#dislike()","export::lesson::shared::ebookandebookview#document_fallback_filename()","export::lesson::shared::ebookandebookview#document_fallbacks_relative_from_content_path()","galleriescontroller#document_for_lesson_editor()","galleriescontroller#document_for_lesson_editor_filter()","galleriescontroller#document_for_lesson_editor_new_block()","export::lesson::shared::ebookandebookview#document_item_fallback_id()","export::lesson::shared::ebookandebookview#document_item_id()","export::lesson::shared#documents_files()","applicationhelper#documents_type_color()","lesson#dont_notify_changes()","lessonscontroller#dont_notify_modification()","media::audio::editing::cmd::crop#duration()","media::info#duration()","media::video::editing::cmd::concat::mp4#duration()","media::video::editing::cmd::concat::webm#duration()","media::video::editing::cmd::crop#duration()","media::video::editing::cmd::replaceaudio#duration()","media::uploader#duration_keys()","media::uploader#durations()","media::uploader#durations?()","lessonexportcontroller#ebook()","mediaelement#ebook_resources_formats()","admin::mediaelementscontroller#edit()","admin::purchasescontroller#edit()","audioeditorcontroller#edit()","imageeditorcontroller#edit()","lessoneditorcontroller#edit()","userscontroller#edit()","videoeditorcontroller#edit()","image#editing_url()","valid::email?()","audioeditorcontroller#empty_cache()","videoeditorcontroller#empty_cache()","audioeditorcontroller#empty_parameters()","videoeditorcontroller#empty_parameters()","user#empty_playlist()","virtualclassroomcontroller#empty_playlist()","user#empty_virtual_classroom()","virtualclassroomcontroller#empty_virtual_classroom()","mediaelement#enable_lessons_containing_me()","dumpable::nomethoderror#encode_with()","user::authentication::instancemethods#encrypt_password()","media::video::editing::cmd::generatetransitionframes#end_frame()","media::video::editing::transition#end_frame_extraction_start_seek()","timeconvert::timeconverter#english_day_suffix()","timeconvert::timeconverter#english_month()","image#enter_edit_mode()","export::lesson::shared#entry()","export::lesson::ebook::assets#env()","export::lesson::scorm::assets#env()","envrelativepath::classmethods#env_relative_path()","envrelativepath::classmethods#env_relative_pathname()","media::audio::uploader::validation#error_message()","media::video::uploader::validation#error_message()","media::audio::uploader::validation#error_message_for_converted_files()","media::video::uploader::validation#error_message_for_converted_files()","media::audio::uploader::validation#error_message_for_file_to_convert()","media::video::uploader::validation#error_message_for_file_to_convert()","dumpable::exception()","media::cmd#exitstatus()","purchase#expired?()","document#extension()","image#extension()","imageuploader#extension_white_list()","mediaelement#extract()","audioeditorcontroller#extract_cache()","videoeditorcontroller#extract_cache()","media::audio::editing::parameters#extract_component()","media::video::editing::conversion#extract_cover()","media::video::uploader#extract_cover()","media::video::editing::transition#extract_end_transition_frame()","audioeditorcontroller#extract_form_parameters()","videoeditorcontroller#extract_form_parameters()","media::video::editing::parameters#extract_image_component()","videoeditorcontroller#extract_single_form_parameter()","media::video::editing::transition#extract_start_transition_frame()","media::video::editing::parameters#extract_text_component()","imageeditorcontroller#extract_textareas_params()","media::video::editing::conversion#extract_thumb()","media::video::uploader#extract_thumb()","media::audio::uploader#extract_versions()","media::uploader#extract_versions()","media::video::uploader#extract_versions()","media::video::editing::parameters#extract_video_component()","subject::extract_with_cathegories()","users::sessionscontroller#failed_authentication_redirect_args()","documentuploader#filename()","imageuploader#filename()","media::uploader#filename()","filenametoken::instancemethods#filename_token()","media::uploader#filename_without_extension()","mediaelement#filetype()","admin::purchasescontroller#fill_locations()","lessonsmediaelementsshared#filter()","admin::messagescontroller#filter_users()","media::video::editing::concat#final_wav()","admin::purchasescontroller#find_locations()","admin::userscontroller#find_locations()","userscontroller#find_locations()","export::lesson::archive#find_or_create()","export::lesson::ebook#find_or_create()","export::lesson::scorm#find_or_create()","documentuploader#folder()","export::assets::folder()","export::assets#folder()","imageuploader#folder()","media::uploader#folder()","slide::mathimages#folder()","slide::mathimages#folder_images()","documentuploader::folder_size()","imageuploader::folder_size()","media::uploader::folder_size()","slide::mathimages#folders_images()","slide#following()","media::uploader#formats()","media::video::editing::cmd::transition#frame_rate()","media::video::editing::cmd::generatetransitionframes#frames_amount()","media::video::editing::cmd::generatetransitionframes#frames_format()","user#full_name()","applicationhelper#full_url()","user#full_virtual_classroom()","location#gender()","user::confirmation::classmethods#generate_confirmation_token()","user::resetpassword::classmethods#generate_password_token()","purchase#generate_token()","valid::validness#get()","valid::get_association()","galleriescontroller#get_audios()","lessoneditorcontroller#get_audios_and_videos_for_reload()","valid::validness#get_class_from_column_name()","galleriescontroller#get_documents()","tag::get_friendly_tags()","location::get_from_chain_params()","admin::userscontroller#get_full_names()","user::get_full_names()","galleriescontroller#get_images()","tag#get_lessons()","virtualclassroomcontroller#get_lessons()","dashboardcontroller#get_lessons_for_dashboard()","tagscontroller#get_list()","applicationcontroller#get_locale()","media::audio::editing::parameters#get_media_element_from_hash()","media::video::editing::parameters#get_media_element_from_hash()","tag#get_media_elements()","dashboardcontroller#get_media_elements_for_dashboard()","notificationscontroller#get_new_block()","documentscontroller#get_own_documents()","lessonscontroller#get_own_lessons()","mediaelementscontroller#get_own_media_elements()","applicationhelper#get_recursive_array_from_params()","searchcontroller#get_result_lessons()","searchcontroller#get_result_lessons_by_specific_tag()","searchcontroller#get_result_media_elements()","searchcontroller#get_result_media_elements_by_specific_tag()","user#get_tags_associated_to_lesson_search()","user#get_tags_associated_to_media_element_search()","tag::get_tags_for_autocomplete()","tag::get_tags_for_item()","galleriescontroller#get_videos()","media::cmd::avconv#global_options()","bookmark#good_bookmarkable_type()","report#good_reportable_type()","tagging#good_taggable_type()","dashboardcontroller#handle_expanded_lessons_in_dashboard()","dashboardcontroller#handle_expanded_media_elements_in_dashboard()","statistics#hard_disk_chart()","notification#has_been_seen()","dumpable::hash()","image#height()","imageuploader#height()","image#height=()","prelogincontroller#home()","document#human_size()","document#icon_title()","document#icon_url()","applicationhelper#ie()","imageuploader#image()","mediaelement#image?()","export::lesson::ebook::view::helper#image_figure_classes()","galleriescontroller#image_for_image_editor()","galleriescontroller#image_for_image_editor_new_block()","galleriescontroller#image_for_lesson_editor()","galleriescontroller#image_for_lesson_editor_new_block()","export::lesson::ebook::view::helper#image_path()","media::video::editing::imagetovideo#image_process()","export::lesson::ebook::view::helper#image_style()","export::lesson::scorm::view::helper#ims_duration()","image#in_edit_mode?()","virtualclassroomlesson#in_playlist?()","media::intmpdir#in_tmp_dir()","lesson#in_virtual_classroom?()","envrelativepath::included()","filenametoken::included()","media::logging::included()","media::shared::included()","urltypes::included()","user::authentication::included()","user::confirmation::included()","user::resetpassword::included()","media::video::editing::concat#increase_rpadding_depending_on_video_overflow()","admin::dashboardcontroller#index()","admin::documentscontroller#index()","admin::lessonscontroller#index()","admin::mediaelementscontroller#index()","admin::purchasescontroller#index()","admin::userscontroller#index()","dashboardcontroller#index()","documentscontroller#index()","faqscontroller#index()","lessoneditorcontroller#index()","lessonviewercontroller#index()","lessonscontroller#index()","mediaelementscontroller#index()","searchcontroller#index()","virtualclassroomcontroller#index()","slide#init_math_images_copy()","media::audio::editing::conversion#init_model()","media::video::editing::conversion#init_model()","bookmark#init_validation()","document#init_validation()","documentsslide#init_validation()","lesson#init_validation()","like#init_validation()","mailinglistaddress#init_validation()","mailinglistgroup#init_validation()","mediaelement#init_validation()","mediaelementsslide#init_validation()","notification#init_validation()","purchase#init_validation()","report#init_validation()","slide#init_validation()","tag#init_validation()","tagging#init_validation()","user#init_validation()","virtualclassroomlesson#init_validation()","lessonexportcontroller#initialize_and_authenticate_for_lesson_export()","audioeditorcontroller#initialize_audio_with_owner_or_public()","applicationcontroller#initialize_document()","lessoneditorcontroller#initialize_documents_slides()","virtualclassroomcontroller#initialize_emails()","applicationcontroller#initialize_general_profile()","imageeditorcontroller#initialize_image_with_owner_and_private()","imageeditorcontroller#initialize_image_with_owner_or_public()","lessoneditorcontroller#initialize_kind()","applicationcontroller#initialize_layout()","applicationcontroller#initialize_lesson()","applicationcontroller#initialize_lesson_destination()","virtualclassroomcontroller#initialize_lesson_for_sending_link()","applicationcontroller#initialize_lesson_with_owner()","lessoneditorcontroller#initialize_lesson_with_owner_and_slide()","applicationcontroller#initialize_lesson_with_owner_or_public()","virtualclassroomcontroller#initialize_loaded_lessons()","applicationcontroller#initialize_location()","mailinglistscontroller#initialize_mailing_list_address()","mailinglistscontroller#initialize_mailing_list_address_with_owner()","mailinglistscontroller#initialize_mailing_list_group()","mailinglistscontroller#initialize_mailing_list_group_with_owner()","applicationcontroller#initialize_media_element()","galleriescontroller#initialize_media_element_creation()","applicationcontroller#initialize_media_element_destination()","applicationcontroller#initialize_media_element_with_owner()","applicationcontroller#initialize_media_element_with_owner_and_private()","applicationcontroller#initialize_media_element_with_owner_or_public()","lesson#initialize_metadata()","notificationscontroller#initialize_notification_offset()","notificationscontroller#initialize_notification_with_owner()","galleriescontroller#initialize_page()","virtualclassroomcontroller#initialize_page()","dashboardcontroller#initialize_pagination()","documentscontroller#initialize_paginator()","lessonscontroller#initialize_paginator()","mediaelementscontroller#initialize_paginator()","virtualclassroomcontroller#initialize_paginator()","searchcontroller#initialize_paginator_and_filters()","searchcontroller#initialize_paginator_and_filters_for_lessons()","searchcontroller#initialize_paginator_and_filters_for_media_elements()","applicationcontroller#initialize_players_counter()","applicationcontroller#initialize_position()","applicationcontroller#initialize_registration_form()","lessoneditorcontroller#initialize_subjects()","applicationcontroller#initialize_subjects_profile()","videoeditorcontroller#initialize_video_with_owner_or_public()","virtualclassroomcontroller#initialize_virtual_classroom_lesson()","searchcontroller#initialize_word_and_specific_tag()","media::video::editing::cmd::trimaudiofile#input()","media::video::editing::imagetovideo#input()","media::video::editing::imagetovideo#input_height()","media::cmd::avconv#input_options()","media::cmd::avconv#input_options_and_input_files()","media::video::editing::imagetovideo#input_width()","media::audio::editing::concat#inputs()","media::uploader#inspect()","export::lesson::ebook::view::instance()","export::lesson::scorm::view::instance()","slide::mathimages#invalid?()","schoollevel#is_deletable?()","subject#is_deletable?()","location#is_descendant_of?()","image#is_horizontal?()","mediaelementsslide#is_horizontal?()","timeconvert::timeconverter#italian_month()","applicationhelper#jsd()","location#label()","location::label_at()","lesson#last_slide()","image#leave_edit_mode()","reportscontroller#lesson()","dashboardcontroller#lessons()","faqscontroller#lessons()","admin::settingscontroller#lessons_for_tag()","lessonscontroller#like()","user#like()","lesson#like_button()","lesson#liked?()","admin::purchasescontroller#link_form()","virtualclassroomcontroller#load_lessons()","admin::mediaelementscontroller#load_media_element()","mediaelementscontroller#load_preview()","lessoneditorcontroller#load_slide()","user::location_association_class()","purchase#location_to_s()","admin::settingscontroller#locations()","media::audio::editing::composer#log_folder()","media::audio::editing::composer::log_folder()","media::audio::editing::conversion#log_folder()","media::audio::editing::conversion::log_folder()","media::logging::classmethods#log_folder()","media::logging::instancemethods#log_folder()","media::video::editing::composer#log_folder()","media::video::editing::composer::log_folder()","media::video::editing::conversion#log_folder()","media::video::editing::conversion::log_folder()","media::audio::editing::composer#log_folder_name()","media::video::editing::composer#log_folder_name()","applicationcontroller#logged_in?()","userscontroller#logged_upgrade_trial()","media::logging::instancemethods#logs()","media::video::editing::cmd::trimaudiofile#ltrim()","audio#m4a_duration()","audio#m4a_duration=()","media::audio::editing::concat#m4a_inputs()","media::audio::editing::concat#m4a_output()","audio#m4a_url()","userscontroller#mailing_lists()","mediaelement#manage_lessons_containing_me()","applicationhelper#manipulate_url()","media::video::editing::cmd::replaceaudio#maps()","export::lesson::ebook::view::helper#math_image_item_href()","export::lesson::ebook::view::helper#math_image_item_id()","export::lesson::shared::ebookandebookview#math_image_path_relative_from_contents_folder()","export::lesson::shared#math_images()","slide#math_images()","slide#math_images=()","export::lesson::ebook::view::helper#math_images_archive_folder_name()","lesson#math_images_paths()","slide#math_images_paths()","mediaelement#max_media_column_size()","media::uploader#max_processed_filename_size()","documentuploader::maximum_folder_size_exceeded?()","media::uploader::maximum_media_elements_folder_size_exceeded?()","media::shared::instancemethods#media()","media::shared::instancemethods#media=()","reportscontroller#media_element()","export::lesson::ebook::view::helper#media_element_item_attributes()","export::lesson::ebook::view::helper#media_element_mime_type()","export::lesson::ebook::view::helper#media_element_path()","dashboardcontroller#media_elements()","faqscontroller#media_elements()","slide#media_elements_at()","export::lesson::shared#media_elements_files()","media::uploader::media_elements_folder_size()","maintainernotificationsmailer#media_elements_folder_size_alert()","admin::settingscontroller#media_elements_for_tag()","media::shared::instancemethods#media_validation()","export::lesson::ebook::view::helper#mime_type()","audio#min_duration()","video#min_duration()","galleriescontroller#mixed_for_video_editor()","galleriescontroller#mixed_for_video_editor_image_new_block()","galleriescontroller#mixed_for_video_editor_video_new_block()","media::image::editing::crop#mm_input()","media::audio::editing::conversion#model()","media::video::editing::conversion#model()","media::uploader#model_id()","media::shared::instancemethods#modified?()","lesson#modify()","video#mp4_duration()","video#mp4_duration=()","media::video::editing::concat#mp4_inputs()","media::video::editing::concat#mp4_output()","media::video::editing::imagetovideo#mp4_output_path()","video#mp4_url()","statistics#my_copied_lessons()","statistics#my_created_elements()","statistics#my_created_lessons()","statistics#my_liked_lessons()","statistics#my_likes_count()","statistics#my_linked_lessons_count()","admin::mediaelementscontroller#new()","admin::purchasescontroller#new()","audioeditorcontroller#new()","dumpable::nomethoderror::new()","export::lesson::archive::new()","export::lesson::ebook::new()","export::lesson::scorm::new()","lessoneditorcontroller#new()","media::audio::editing::cmd::concat::new()","media::audio::editing::cmd::conversion::new()","media::audio::editing::cmd::crop::new()","media::audio::editing::composer::new()","media::audio::editing::concat::new()","media::audio::editing::conversion::new()","media::cmd::avconv::new()","media::cmd::avprobe::new()","media::error::new()","media::image::editing::addtexttoimage::new()","media::image::editing::cmd::texttoimage::new()","media::image::editing::crop::new()","media::image::editing::resizetofill::new()","media::info::new()","media::queue::new()","media::uploader::new()","media::video::editing::cmd::audiostreamtofile::new()","media::video::editing::cmd::concat::new()","media::video::editing::cmd::concat::mp4::new()","media::video::editing::cmd::concat::webm::new()","media::video::editing::cmd::conversion::new()","media::video::editing::cmd::crop::new()","media::video::editing::cmd::extractframe::new()","media::video::editing::cmd::generatetransitionframes::new()","media::video::editing::cmd::imagetovideo::new()","media::video::editing::cmd::m4atowav::new()","media::video::editing::cmd::mergewebmvideostreams::new()","media::video::editing::cmd::replaceaudio::new()","media::video::editing::cmd::transition::new()","media::video::editing::cmd::trimaudiofile::new()","media::video::editing::cmd::videostreamtofile::new()","media::video::editing::composer::new()","media::video::editing::concat::new()","media::video::editing::conversion::new()","media::video::editing::crop::new()","media::video::editing::imagetovideo::new()","media::video::editing::replaceaudio::new()","media::video::editing::texttovideo::new()","media::video::editing::transition::new()","mediaelementscontroller#new()","slide::mathimages::new()","threadproc::new()","videoeditorcontroller#new()","user#new_mailing_list_name()","admin::messagescontroller#new_notification()","usermailer#new_password()","usermailer#new_password_confirmed()","admin::settingscontroller#new_school_level()","admin::settingscontroller#new_subject()","mediaelement#new_with_sti_type_inferring()","virtualclassroomlesson#next_in_playlist()","media::audio::editing::composer#notification_translation_key()","media::video::editing::composer#notification_translation_key()","user#notifications_visible_block()","lesson#notify_changes()","lessonscontroller#notify_modification()","user#number_notifications_not_seen()","audio#ogg_duration()","audio#ogg_duration=()","media::audio::editing::concat#ogg_inputs()","media::audio::editing::concat#ogg_output()","audio#ogg_url()","documentuploader#original_extension()","imageuploader#original_extension()","media::uploader#original_filename()","media::uploader#original_filename_extension()","documentuploader#original_filename_without_extension()","imageuploader#original_filename_without_extension()","media::uploader#original_filename_without_extension()","media::video::editing::cmd::trimaudiofile#output()","media::video::editing::crop#output()","media::video::editing::replaceaudio#output()","media::video::editing::transition#output()","media::audio::editing::conversion#output_filename_without_extension()","media::video::editing::conversion#output_filename_without_extension()","media::audio::editing::conversion#output_folder()","media::uploader#output_folder()","media::video::editing::conversion#output_folder()","media::cmd::avconv#output_options()","media::audio::editing::conversion#output_path()","media::uploader#output_path()","media::video::editing::conversion#output_path()","media::video::editing::imagetovideo#output_path()","media::uploader#output_path_without_extension()","media::cmd::avconv#output_threads()","media::video::editing::cmd::m4atowav#output_threads()","media::audio::editing::composer#output_without_extension()","media::video::editing::composer#output_without_extension()","media::audio::editing::concat#outputs()","media::video::editing::concat#outputs()","media::video::editing::crop#outputs()","media::video::editing::replaceaudio#outputs()","media::video::editing::transition#outputs()","audioeditorcontroller#overwrite()","imageeditorcontroller#overwrite()","videoeditorcontroller#overwrite()","media::shared::instancemethods#overwrite!()","user#own_documents()","user#own_lessons()","user#own_mailing_list_groups()","user#own_media_elements()","export::lesson::ebook::view::helper#package_id()","media::video::editing::concat#paddings()","adminhelper#page_items_counter()","applicationcontroller#page_not_found()","media::queue#parallel_jobs()","audioeditorcontroller#params_with_standard_keys()","imageeditorcontroller#params_with_standard_keys()","videoeditorcontroller#params_with_standard_keys()","user#parent_locations()","media::info#parse_audio_stream()","media::info#parse_video_stream()","user::resetpassword::instancemethods#password_token!()","media::uploader#path()","export::assets#pathname_nestings()","export::assets#paths()","export::lesson::archive::assets#paths()","export::lesson::ebook::assets#paths()","export::lesson::scorm::assets#paths()","imageuploader#paths()","media::uploader#paths()","statistics#percentage()","media::audio::editing::composer::job#perform()","media::audio::editing::conversion::job#perform()","media::video::editing::composer::job#perform()","media::video::editing::conversion::job#perform()","notificationsjob#perform()","applicationcontroller#personificated_user()","applicationcontroller#personificated_user=()","audio#placeholder_url()","video#placeholder_url()","lessonviewercontroller#playlist()","user#playlist()","user#playlist_for_viewer()","user#playlist_full?()","media::audio::editing::conversion#prepare_for_conversion()","media::video::editing::conversion#prepare_for_conversion()","applicationcontroller#prepare_lesson_for_js()","applicationcontroller#prepare_media_element_for_js()","lesson#present_parent_id()","image#prev_editing_image()","virtualclassroomlesson#prev_in_playlist()","slide#previous()","media::uploader#processed_filename()","media::uploader#processed_original_filename()","media::uploader#processed_original_filename_without_extension()","faqscontroller#profile()","media::uploader#public_relative_folder()","media::uploader#public_relative_path()","lesson#publish()","lessonscontroller#publish()","admin::purchasescontroller#purchase_attributes()","prelogincontroller#purchase_code()","usermailer#purchase_full()","usermailer#purchase_resume()","media::cmd::avconv#qa()","media::video::editing::cmd::imagetovideo#qa()","media::video::editing::cmd::replaceaudio#qa()","media::video::editing::cmd::transition#qa()","admin::mediaelementscontroller#quick_upload()","admin::mediaelementscontroller#quick_upload_delete()","media::cmd::avconv#qv()","media::video::editing::cmd::extractframe#qv()","media::video::editing::cmd::m4atowav#qv()","media::image::editing::ratio_value()","lesson#reached_the_maximum_of_slides?()","admin::userscontroller#reconfirm()","lessonexportcontroller#redirect_or_setup()","prelogincontroller#redirect_to_dashboard_if_logged_in()","prelogincontroller#registration()","user#registration_policies()","media::shared::instancemethods#reload()","notificationscontroller#reload()","media::shared::instancemethods#reload_media()","lessonscontroller#remove()","mediaelementscontroller#remove()","slide::mathimages#remove_folder()","documentuploader::remove_folder!()","export::assets::remove_folder!()","export::lesson::archive::remove_folder!()","export::lesson::ebook::remove_folder!()","export::lesson::scorm::remove_folder!()","imageuploader::remove_folder!()","media::audio::editing::conversion::remove_folder!()","media::logging::remove_folder!()","media::uploader::remove_folder!()","media::video::editing::conversion::remove_folder!()","user#remove_from_admin_quick_uploading_cache()","virtualclassroomlesson#remove_from_playlist()","lesson#remove_from_virtual_classroom()","virtualclassroomcontroller#remove_lesson()","virtualclassroomcontroller#remove_lesson_from_inside()","virtualclassroomcontroller#remove_lesson_from_playlist()","slide#remove_math_images_folder()","export::lesson::shared#remove_old_files()","media::uploader#rename?()","applicationcontroller#render_js_or_html_index()","faqscontroller#render_not_found()","media::video::editing::replaceaudio#replace_audio()","user#report_lesson()","user#report_media_element()","admin::messagescontroller#reports()","userscontroller#request_reset_password()","userscontroller#request_upgrade_trial()","filenametoken::instancemethods#reset_filename_token()","userscontroller#reset_password()","user::resetpassword::classmethods#reset_password!()","image#resize_height()","mediaelementsslide#resize_height()","image#resize_width()","mediaelementsslide#resize_width()","audioeditorcontroller#restore_cache()","videoeditorcontroller#restore_cache()","mediaelementsslide#restore_lesson_availability()","media::video::editing::cmd::trimaudiofile#rtrim()","media::audio::editing::composer#run()","media::audio::editing::concat#run()","media::audio::editing::conversion#run()","media::cmd#run()","media::cmd::avprobe#run()","media::image::editing::crop#run()","media::image::editing::resizetofill#run()","media::queue#run()","media::queue::run()","media::video::editing::composer#run()","media::video::editing::concat#run()","media::video::editing::conversion#run()","media::video::editing::crop#run()","media::video::editing::imagetovideo#run()","media::video::editing::replaceaudio#run()","media::video::editing::texttovideo#run()","media::video::editing::transition#run()","media::cmd#run!()","applicationcontroller#saas_pre_authenticate()","export::assets#sass_config()","audioeditorcontroller#save()","imageeditorcontroller#save()","slide::mathimages#save()","videoeditorcontroller#save()","audioeditorcontroller#save_cache()","videoeditorcontroller#save_cache()","lessoneditorcontroller#save_current_slide()","image#save_editing_prev()","user#save_in_admin_quick_uploading_cache()","slide#save_math_images()","lessoneditorcontroller#save_slide()","lessoneditorcontroller#save_slide_and_edit()","lessoneditorcontroller#save_slide_and_exit()","admin::settingscontroller#school_levels()","lessonexportcontroller#scorm()","export::lesson::scorm::view::helper#scorm_locale()","export::lesson::scorm::view::helper#scorm_school_level()","export::lesson::scorm::view::helper#scorm_slide_title()","adminsearchform::search_documents()","adminsearchform::search_lessons()","user#search_lessons()","user#search_lessons_with_tag()","user#search_lessons_without_tag()","adminsearchform::search_media_elements()","user#search_media_elements()","user#search_media_elements_with_tag()","user#search_media_elements_without_tag()","adminsearchform::search_notifications_users()","lessonsmediaelementsshared#search_order()","adminsearchform::search_purchases()","adminsearchform::search_tags()","adminsearchform::search_users()","applicationhelper#seconds_to_time()","user::authentication::classmethods#secure_compare()","usermailer#see_my_lesson()","media::video::editing::cmd::extractframe#seek()","notificationscontroller#seen()","virtualclassroomcontroller#select_lessons()","virtualclassroomcontroller#select_lessons_new_block()","location#select_with_selected()","location#select_without_selected()","admin::purchasescontroller#send_link()","virtualclassroomcontroller#send_link()","admin::messagescontroller#send_notifications()","userscontroller#send_reset_password()","notification::send_to()","userscontroller#send_upgrade_trial()","image#set_converted_to_true()","media::shared::instancemethods#set_creation_mode()","applicationcontroller#set_locale()","document#set_size()","admin::userscontroller#set_status()","lesson#set_status()","mediaelement#set_status()","image#set_width_and_height()","media::image::editing::addtexttoimage#shellescaped_text()","media::image::editing::cmd::texttoimage#shellescaped_text()","media::video::editing::cmd::trimaudiofile#shellescaped_trim()","media::video::editing::cmd::concat::mp4#shortest()","media::video::editing::cmd::concat::webm#shortest()","admin::userscontroller#show()","media::similardurations#similar_durations?()","media::info#similar_to?()","document#size()","image#size()","media::shared::instancemethods#size()","media::uploader#size()","document#size=()","document#size_and_extension()","lessonviewercontroller#skip_authenticate_user_if_token()","export::lesson::ebook::view::helper#slide_content()","export::lesson::shared::ebookandebookview#slide_filename()","export::lesson::shared::ebookandebookview#slide_item_id()","export::lesson::ebook::view::helper#slide_path()","export::lesson::ebook::view::helper#slide_title()","media::cmd::avconv#sn()","media::video::editing::cmd::extractframe#sn()","media::video::editing::cmd::m4atowav#sn()","media::audio::editing::cmd::concat#sox_input()","media::audio::editing::cmd::concat#sox_output()","media::audio::editing::cmd::concat#sox_pad()","media::audio::editing::cmd::crop#start()","media::video::editing::cmd::crop#start()","media::video::editing::cmd::generatetransitionframes#start_frame()","userscontroller#statistics()","lesson#status()","lessonsmediaelementsshared#status()","mediaelement#status()","media::logging::instancemethods#stderr_log()","media::logging::instancemethods#stdout_log()","mediaelement#sti_type_to_s()","slide#stop_if_cover()","mediaelement#stop_if_public()","documentuploader#store_dir()","imageuploader#store_dir()","media::info#streams()","media::cmd::avconv#strict()","export::lesson::ebook::view::helper#stylesheet_path()","user#subject_ids=()","admin::settingscontroller#subjects()","statistics#subjects()","userscontroller#subjects()","statistics#subjects_chart()","user#suggested_lessons()","user#suggested_media_elements()","user#super_admin?()","admin::settingscontroller#tags()","lesson#tags()","mediaelement#tags()","lesson#tags=()","mediaelement#tags=()","media::audio::editing::conversion#temp_folder()","media::audio::editing::conversion::temp_folder()","media::video::editing::conversion#temp_folder()","media::video::editing::conversion::temp_folder()","media::audio::editing::conversion#temp_path()","media::audio::editing::conversion::temp_path()","media::video::editing::conversion#temp_path()","media::video::editing::conversion::temp_path()","slide#text()","slide#text=()","media::logging::instancemethods#thread_relative_log_folder()","media::logging::instancemethods#thread_relative_log_folder=()","media::logging::instancemethods#thread_relative_log_folder_name()","media::video::uploader#thumb_output_path()","audio#thumb_url()","image#thumb_url()","video#thumb_url()","notification#time()","timeconvert::timeconverter#time_difference_single()","timeconvert::time_difference_to_s()","timeconvert::timeconverter#time_difference_to_s()","slide#title=()","applicationhelper#title_tag()","media::intmpdir#tmp_path()","slide::mathimages#to_a()","media::info#to_hash()","media::uploader#to_hash()","location#to_s()","media::cmd#to_s()","media::error#to_s()","media::uploader#to_s()","schoollevel#to_s()","subject#to_s()","tag#to_s()","timeconvert::to_string()","timeconvert::timeconverter#to_string()","userscontroller#toggle_locations()","admin::lessonscontroller#toggle_publish()","user#tot_notifications_number()","media::audio::editing::parameters#total_prototype_time()","media::video::editing::parameters#total_prototype_time()","media::video::editing::transition#transition()","userscontroller#trial()","user#trial?()","user#trial_to_expiration()","user#trial_to_expiration_percentage()","notificationstest::try_all()","applicationhelper#two_digits_number()","document#type()","applicationcontroller#unauthorized()","image#undo()","imageeditorcontroller#undo()","lesson#unpublish()","lessonscontroller#unpublish()","media::audio::editing::cmd::concat#unsupported_format?()","admin::mediaelementscontroller#update()","admin::purchasescontroller#update()","documentscontroller#update()","lessoneditorcontroller#update()","mediaelementscontroller#update()","userscontroller#update()","mailinglistscontroller#update_group()","admin::settingscontroller#update_location()","applicationcontroller#update_ok()","lesson#update_or_create_tags()","mediaelement#update_or_create_tags()","userscontroller#update_subjects()","slide#update_with_media_elements()","userscontroller#upgrade_trial_link()","media::uploader#upload()","media::uploader#upload_copy_and_job()","media::shared::instancemethods#upload_or_copy()","media::uploader#upload_or_copy()","media::shared::instancemethods#uploaded?()","document#uploaded_filename_without_extension()","media::audio::editing::conversion#uploaded_path_extension()","media::video::editing::conversion#uploaded_path_extension()","users::sessionscontroller#uri_path_and_query()","document#url()","export::lesson::archive#url()","export::lesson::ebook#url()","export::lesson::scorm#url()","image#url()","media::uploader#url()","applicationhelper#url_by_url_type()","urltypes::instancemethods#url_by_url_type()","audioeditorcontroller#used_in_private_lessons()","videoeditorcontroller#used_in_private_lessons()","document#used_in_your_lessons?()","media::info#valid?()","slide::mathimages#valid?()","user::authentication::instancemethods#valid_password?()","user#validate_accounts_number_for_purchase()","bookmark#validate_associations()","document#validate_associations()","documentsslide#validate_associations()","lesson#validate_associations()","like#validate_associations()","mailinglistaddress#validate_associations()","mailinglistgroup#validate_associations()","mediaelement#validate_associations()","mediaelementsslide#validate_associations()","notification#validate_associations()","purchase#validate_associations()","report#validate_associations()","slide#validate_associations()","tagging#validate_associations()","user#validate_associations()","virtualclassroomlesson#validate_associations()","bookmark#validate_availability()","like#validate_availability()","virtualclassroomlesson#validate_availability()","purchase#validate_codes()","virtualclassroomlesson#validate_copied_not_modified()","lesson#validate_copied_not_modified_and_public()","slide#validate_cover()","purchase#validate_dates()","mailinglistaddress#validate_email()","purchase#validate_email()","user#validate_email()","user#validate_email_not_changed()","mediaelementsslide#validate_image_properties()","bookmark#validate_impossible_changes()","document#validate_impossible_changes()","documentsslide#validate_impossible_changes()","lesson#validate_impossible_changes()","like#validate_impossible_changes()","mailinglistaddress#validate_impossible_changes()","mailinglistgroup#validate_impossible_changes()","mediaelement#validate_impossible_changes()","mediaelementsslide#validate_impossible_changes()","notification#validate_impossible_changes()","purchase#validate_impossible_changes()","report#validate_impossible_changes()","slide#validate_impossible_changes()","tagging#validate_impossible_changes()","virtualclassroomlesson#validate_impossible_changes()","slide#validate_math_images()","slide#validate_math_images_links()","documentsslide#validate_max_number_in_slide()","slide#validate_max_number_slides()","document#validate_maximum_folder_size()","mediaelement#validate_maximum_media_elements_folder_size()","mediaelementsslide#validate_media_element()","virtualclassroomlesson#validate_playlist_length()","mediaelementsslide#validate_position()","virtualclassroomlesson#validate_positions()","lesson#validate_public()","mediaelement#validate_publication_date()","notification#validate_seen()","document#validate_size()","mediaelement#validate_size()","documentsslide#validate_slide_type()","lesson#validate_tags_length()","mediaelement#validate_tags_length()","slide#validate_text()","slide#validate_title()","mediaelementsslide#validate_type_in_slide()","media::audio::uploader::validation#validation()","media::video::uploader::validation#validation()","media::cmd::avconv#vbitrate()","media::cmd::avconv#vcodec()","media::video::editing::cmd::concat::webm#vcodec()","media::video::editing::cmd::replaceaudio#vcodec()","media::uploader#version_formats()","media::uploader#version_input_path_keys()","media::uploader#version_input_paths()","media::uploader#version_input_paths?()","media::video::editing::cmd::conversion#vfilters()","media::video::editing::cmd::extractframe#vframes()","media::video::editing::composer#video()","mediaelement#video?()","media::video::editing::composer#video_copy()","user#video_editor_available()","user#video_editor_cache()","user#video_editor_cache!()","galleriescontroller#video_for_lesson_editor()","galleriescontroller#video_for_lesson_editor_new_block()","media::video::editing::replaceaudio#video_stream_duration()","media::info#video_streams()","mediaelementscontroller#videos_test()","export::lesson::ebook#view_path()","faqscontroller#virtual_classroom()","lesson#virtual_classroom_button()","lesson#visive_tags()","mediaelement#visive_tags()","tagging::visive_tags()","media::video::editing::cmd::conversion#vmap()","media::video::editing::cmd::conversion#vstreams()","media::video::editing::concat#wavs_with_paddings()","video#webm_duration()","video#webm_duration=()","media::video::editing::concat#webm_inputs()","media::video::editing::concat#webm_output()","media::video::editing::imagetovideo#webm_output_path()","video#webm_url()","prelogincontroller#what_is()","image#width()","imageuploader#width()","image#width=()","tag#word=()","tag#word_not_changed()","export::assets#write_asset()",""],"info":[["Admin","","classes/Admin.html","",""],["Admin::DashboardController","","classes/Admin/DashboardController.html","","<p>Description\n<p>Controller of the Dashboard in the administration section. See\nAdminController.\n<p>Models used …\n"],["Admin::DocumentsController","","classes/Admin/DocumentsController.html","","<p>Description\n<p>Controller of documents in the administration section. See AdminController.\n<p>Models used\n"],["Admin::LessonsController","","classes/Admin/LessonsController.html","","<p>Description\n<p>Controller of lessons in the administration section. See AdminController.\n<p>Models used\n"],["Admin::MediaElementsController","","classes/Admin/MediaElementsController.html","","<p>Description\n<p>Controller of elements in the administration section. See AdminController.\n<p>Models used\n"],["Admin::MessagesController","","classes/Admin/MessagesController.html","","<p>Description\n<p>Controller of notifications and general messages in the administration\nsection. See AdminController …\n"],["Admin::PersonificationsController","","classes/Admin/PersonificationsController.html","",""],["Admin::PurchasesController","","classes/Admin/PurchasesController.html","","<p>Description\n<p>Controller of purchases in the administration section. See AdminController.\n<p>Models used\n"],["Admin::ReportsController","","classes/Admin/ReportsController.html","","<p>Description\n<p>Controller for the actions related to reports in the administration (see\nAdminController). …\n"],["Admin::SettingsController","","classes/Admin/SettingsController.html","","<p>Description\n<p>Controller for minor tables, such as <code>tags</code> and\n<code>subjects</code>. See AdminController\n<p>Models used\n"],["Admin::UsersController","","classes/Admin/UsersController.html","","<p>Description\n<p>Controller for users in the administration section (see AdminController).\n<p>Models used\n"],["AdminController","","classes/AdminController.html","","<p>Description\n<p>Scope controller for the administration section.\n<p>Subcontrollers\n"],["AdminHelper","","classes/AdminHelper.html","","<p>Helper methods for administration section\n"],["AdminSearchForm","","classes/AdminSearchForm.html","","<p>Description\n<p>This class contains the list of search methods used in the\nadministrator.\nUnlike the methods ...\n"],["ApplicationController","","classes/ApplicationController.html","","<p>Description\n<p>It contains the general filters and methods used all over the\napplication&#39;s controllers. …\n"],["ApplicationHelper","","classes/ApplicationHelper.html","","<p>Global helpers\n"],["Audio","","classes/Audio.html","","<p>Description\n<p>This class inherits from MediaElement, and contains the specific methods\nneeded for media …\n"],["AudioEditorController","","classes/AudioEditorController.html","","<p>Description\n<p>Controller for all the actions in the audio editor\n<p>Models used\n"],["Bookmark","","classes/Bookmark.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>bookmarks</code>. A\nbookmark can be associated to …\n"],["ButtonDestinations","","classes/ButtonDestinations.html","","<p>Keywords for different visualizations of lessons and elements\n"],["Buttons","","classes/Buttons.html","","<p>Keywords for buttons\n"],["DashboardController","","classes/DashboardController.html","","<p>Description\n<p>Controller for the dashboard\n<p>Models used\n"],["Document","","classes/Document.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>documents</code>.\n<p>Fields\n"],["DocumentUploader","","classes/DocumentUploader.html","",""],["DocumentsController","","classes/DocumentsController.html","",""],["DocumentsSlide","","classes/DocumentsSlide.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>documents_slides</code>.\n<p>Fields\n"],["Dumpable","","classes/Dumpable.html","","<p>Provides a methods to convert exceptions and hashes to dumpable objects,\nfiltering the associated objects …\n"],["Dumpable::NoMethodError","","classes/Dumpable/NoMethodError.html","","<p>Provides a dumpable version of NoMethodError\n"],["EnvRelativePath","","classes/EnvRelativePath.html","","<p>Provides a way to get the right path for the Rails environment according to\nthis rule:\n<p>if Rails environment …\n"],["EnvRelativePath::ClassMethods","","classes/EnvRelativePath/ClassMethods.html","",""],["Export","","classes/Export.html","",""],["Export::Assets","","classes/Export/Assets.html","","<p>This class implements assets logic for exporting logics. It uses\nSprockets\nadapting some configuration ...\n"],["Export::Lesson","","classes/Export/Lesson.html","",""],["Export::Lesson::Archive","","classes/Export/Lesson/Archive.html","",""],["Export::Lesson::Archive::Assets","","classes/Export/Lesson/Archive/Assets.html","",""],["Export::Lesson::Ebook","","classes/Export/Lesson/Ebook.html","",""],["Export::Lesson::Ebook::Assets","","classes/Export/Lesson/Ebook/Assets.html","",""],["Export::Lesson::Ebook::View","","classes/Export/Lesson/Ebook/View.html","",""],["Export::Lesson::Ebook::View::Helper","","classes/Export/Lesson/Ebook/View/Helper.html","",""],["Export::Lesson::Scorm","","classes/Export/Lesson/Scorm.html","","<p>Export scorms\n"],["Export::Lesson::Scorm::Assets","","classes/Export/Lesson/Scorm/Assets.html","",""],["Export::Lesson::Scorm::View","","classes/Export/Lesson/Scorm/View.html","",""],["Export::Lesson::Scorm::View::Helper","","classes/Export/Lesson/Scorm/View/Helper.html","",""],["Export::Lesson::Shared","","classes/Export/Lesson/Shared.html","",""],["Export::Lesson::Shared::EbookAndEbookView","","classes/Export/Lesson/Shared/EbookAndEbookView.html","",""],["Export::Renderer","","classes/Export/Renderer.html","",""],["Export::View","","classes/Export/View.html","",""],["FaqsController","","classes/FaqsController.html","","<p>Description\n<p>Contains the FAQS, organized into cathegories\n"],["FilenameToken","","classes/FilenameToken.html","","<p>Provides methods for a model which can be used to set a token good to be\nused in a filename which will …\n"],["FilenameToken::InstanceMethods","","classes/FilenameToken/InstanceMethods.html","",""],["Filters","","classes/Filters.html","","<p>Keywords for filters of lessons and elements\n"],["GalleriesController","","classes/GalleriesController.html","","<p>Description\n<p>List of actions to handle all the instances of galleries in the\napplication. Since the gallery …\n"],["Image","","classes/Image.html","","<p>Description\n<p>This class inherits from MediaElement, and contains the specific methods\nneeded for media …\n"],["ImageEditorController","","classes/ImageEditorController.html","","<p>Description\n<p>Actions used in the image editor\n<p>Models used\n"],["ImageUploader","","classes/ImageUploader.html","",""],["Lesson","","classes/Lesson.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>lessons</code>.\n<p>Fields\n"],["LessonEditorController","","classes/LessonEditorController.html","","<p>Description\n<p>Actions for lesson editor.\n<p>Models used\n"],["LessonExportController","","classes/LessonExportController.html","","<p>Description\n<p>Controller for exporting lessons\n<p>Models used\n"],["LessonViewerController","","classes/LessonViewerController.html","","<p>Description\n<p>Contains the actions used in the lesson viewer (view sinle lessons, or view\nyour whole playlist) …\n"],["LessonsController","","classes/LessonsController.html","","<p>Description\n<p>Controller for all the actions related to lessons and their buttons. The\nonly two action buttons …\n"],["LessonsMediaElementsShared","","classes/LessonsMediaElementsShared.html","","<p>List of common translation methods that call I18n\n"],["Like","","classes/Like.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>likes</code>. A\nrecord of this table represents …\n"],["Location","","classes/Location.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>locations</code>.\nThe class uses single table inheritance …\n"],["MailingListAddress","","classes/MailingListAddress.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>mailing_list_addresses</code>.\n<p>Fields\n"],["MailingListGroup","","classes/MailingListGroup.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>mailing_list_groups</code>.\n<p>Fields\n"],["MailingListsController","","classes/MailingListsController.html","","<p>Description\n<p>Contains the actions to handle mailing lists and addresses. All these\nactions can be called …\n"],["MaintainerNotificationsMailer","","classes/MaintainerNotificationsMailer.html","","<p>Specific mailer for administration\n"],["Media","","classes/Media.html","","<p>Description\n<p>Main module of the media elements management, processing and editing\nimplementation.\n<p>Configuration …\n"],["Media::Audio","","classes/Media/Audio.html","","<p>Module related to the audios processing\n"],["Media::Audio::Editing","","classes/Media/Audio/Editing.html","","<p>Module relative to audio editing\n"],["Media::Audio::Editing::Cmd","","classes/Media/Audio/Editing/Cmd.html","","<p>Ancestor of the audio editing command classes\n"],["Media::Audio::Editing::Cmd::Avconv","","classes/Media/Audio/Editing/Cmd/Avconv.html","","<p>CLI for audio editing using avconv\n"],["Media::Audio::Editing::Cmd::Concat","","classes/Media/Audio/Editing/Cmd/Concat.html","","<p>CLI for Media::Audio::Editing::Concat processings, joins the audios\nproducing one audio output\n"],["Media::Audio::Editing::Cmd::Conversion","","classes/Media/Audio/Editing/Cmd/Conversion.html","","<p>CLI for audio conversions\n"],["Media::Audio::Editing::Cmd::Crop","","classes/Media/Audio/Editing/Cmd/Crop.html","","<p>CLI for audio cropping\n"],["Media::Audio::Editing::Cmd::Sox","","classes/Media/Audio/Editing/Cmd/Sox.html","","<p>CLI for audio editing using Sox\n"],["Media::Audio::Editing::Composer","","classes/Media/Audio/Editing/Composer.html","","<p>Compose the components supplied (audios) in order to create a new audio\nbased on them\n"],["Media::Audio::Editing::Composer::Job","","classes/Media/Audio/Editing/Composer/Job.html","","<p>DelayedJob for composing processings\n"],["Media::Audio::Editing::Concat","","classes/Media/Audio/Editing/Concat.html","","<p>Concatenate an array of audio files producing a new audio as output\n"],["Media::Audio::Editing::Conversion","","classes/Media/Audio/Editing/Conversion.html","","<p>Convert an audio to formats playable by HTML5 capable browsers\n"],["Media::Audio::Editing::Conversion::Job","","classes/Media/Audio/Editing/Conversion/Job.html","","<p>DelayedJob for conversion processings\n"],["Media::Audio::Editing::Crop","","classes/Media/Audio/Editing/Crop.html","","<p>Crop the input audios supplied producing shorter output audios - see\nMedia::Video::Editing::Crop\n"],["Media::Audio::Editing::Parameters","","classes/Media/Audio/Editing/Parameters.html","","<p>Module that contains parameters converter for the audio editor (see Audio,\nAudioEditorController)\n"],["Media::Audio::Uploader","","classes/Media/Audio/Uploader.html","","<p>Video uploading class; descendant of Media::Uploader\n"],["Media::Audio::Uploader::Validation","","classes/Media/Audio/Uploader/Validation.html","","<p>Module containing methods to validate format of an audio\n"],["Media::Cmd","","classes/Media/Cmd.html","","<p>Media::Cmd is an interface for running shell commands using Subexec; it\nsupports logging for <code>stdout</code> and …\n"],["Media::Cmd::Avconv","","classes/Media/Cmd/Avconv.html","",""],["Media::Cmd::Avprobe","","classes/Media/Cmd/Avprobe.html","",""],["Media::Error","","classes/Media/Error.html","","<p>Standard class of media errors. It can take an <code>Hash</code> of objects\nwhich will be logged with the error\n"],["Media::Image","","classes/Media/Image.html","","<p>Module related to the images processing\n"],["Media::Image::Editing","","classes/Media/Image/Editing.html","","<p>Module containing logics for image editing\n"],["Media::Image::Editing::AddTextToImage","","classes/Media/Image/Editing/AddTextToImage.html","","<p>Class that contains the methods for adding multiple texts (see Image,\nImageEditorController)\n"],["Media::Image::Editing::Cmd","","classes/Media/Image/Editing/Cmd.html","","<p>Inherits form the class Media::Cmd, and its methods are overwritten by the\nclasses Media::Image::Editing::AddTextToImage …\n"],["Media::Image::Editing::Cmd::TextToImage","","classes/Media/Image/Editing/Cmd/TextToImage.html","","<p>Class that converts a text into an image, used for Video Editor (see\nVideoEditorController, Media::Video::Editing …\n"],["Media::Image::Editing::Crop","","classes/Media/Image/Editing/Crop.html","","<p>Class containing methods to crop an image\n"],["Media::Image::Editing::ResizeToFill","","classes/Media/Image/Editing/ResizeToFill.html","","<p>Resizes the image to fill the Image Editor\n"],["Media::InTmpDir","","classes/Media/InTmpDir.html","","<p>Provides methods useful dealing with temporary folders:\n<p>Media::InTmpDir#in_tmp_dir takes a block in which …\n"],["Media::Info","","classes/Media/Info.html","","<p>Provides informations about media files parsing the output of\n<code>avprobe</code>\n"],["Media::Logging","","classes/Media/Logging.html","","<p>Provides support for instance- and/or thread-relative logging\n"],["Media::Logging::ClassMethods","","classes/Media/Logging/ClassMethods.html","",""],["Media::Logging::InstanceMethods","","classes/Media/Logging/InstanceMethods.html","",""],["Media::Queue","","classes/Media/Queue.html","",""],["Media::Shared","","classes/Media/Shared.html","","<p>Included in both Audio and Video models\n"],["Media::Shared::InstanceMethods","","classes/Media/Shared/InstanceMethods.html","",""],["Media::SimilarDurations","","classes/Media/SimilarDurations.html","","<p>Provides logic for comparing durations considering\n<code>self.class::DURATION_THRESHOLD</code>\n"],["Media::Uploader","","classes/Media/Uploader.html","","<p>Media uploading abstract class; ancestor of Media::Video::Uploader and\nMedia::Audio::Uploader\n"],["Media::Video","","classes/Media/Video.html","","<p>Module related to the video management\n"],["Media::Video::Editing","","classes/Media/Video/Editing.html","","<p>Module relative to video editing\n"],["Media::Video::Editing::Cmd","","classes/Media/Video/Editing/Cmd.html","","<p>Ancestor of the video editing command classes\n"],["Media::Video::Editing::Cmd::AudioStreamToFile","","classes/Media/Video/Editing/Cmd/AudioStreamToFile.html","","<p>CLI for exporting an audio stream from a video file to an audio file\n"],["Media::Video::Editing::Cmd::Avconv","","classes/Media/Video/Editing/Cmd/Avconv.html","","<p>CLI for video editing using avconv\n"],["Media::Video::Editing::Cmd::Concat","","classes/Media/Video/Editing/Cmd/Concat.html","","<p>CLI for Media::Video::Editing::Concat processings, joins\n<code>video_input</code> with <code>audio_input</code> cutting the output …\n"],["Media::Video::Editing::Cmd::Concat::Mp4","","classes/Media/Video/Editing/Cmd/Concat/Mp4.html","","<p>CLI for Media::Video::Editing::Concat processings, mp4 format - see\nMedia::Video::Editing::Cmd::Concat …\n"],["Media::Video::Editing::Cmd::Concat::Webm","","classes/Media/Video/Editing/Cmd/Concat/Webm.html","","<p>CLI for Media::Video::Editing::Concat processings, webm format - see\nMedia::Video::Editing::Cmd::Concat …\n"],["Media::Video::Editing::Cmd::Conversion","","classes/Media/Video/Editing/Cmd/Conversion.html","","<p>CLI for video conversions\n"],["Media::Video::Editing::Cmd::Crop","","classes/Media/Video/Editing/Cmd/Crop.html","","<p>CLI for video cropping\n"],["Media::Video::Editing::Cmd::ExtractFrame","","classes/Media/Video/Editing/Cmd/ExtractFrame.html","","<p>CLI for exporting a video frame as image (avconv example: <code>avconv -i\ninput.webm -ss 38.70 -frames:v 1</code> …\n"],["Media::Video::Editing::Cmd::GenerateTransitionFrames","","classes/Media/Video/Editing/Cmd/GenerateTransitionFrames.html","","<p>CLI for generating transition frames given a starting frame and an ending\nframe (command line example: …\n"],["Media::Video::Editing::Cmd::ImageToVideo","","classes/Media/Video/Editing/Cmd/ImageToVideo.html","","<p>CLI for converting an image to a video\n"],["Media::Video::Editing::Cmd::M4aToWav","","classes/Media/Video/Editing/Cmd/M4aToWav.html","","<p>CLI for converting a m4a file to wav\n"],["Media::Video::Editing::Cmd::MergeWebmVideoStreams","","classes/Media/Video/Editing/Cmd/MergeWebmVideoStreams.html","","<p>CLI for merging webm video streams\n"],["Media::Video::Editing::Cmd::ReplaceAudio","","classes/Media/Video/Editing/Cmd/ReplaceAudio.html","","<p>CLI for replacing the audio track of a video file\n"],["Media::Video::Editing::Cmd::Transition","","classes/Media/Video/Editing/Cmd/Transition.html","","<p>CLI for creating video transitions from input transition frames (command\nexample: <code>avconv -r 25 -i ../transition-%d.jpg</code> …\n"],["Media::Video::Editing::Cmd::TrimAudioFile","","classes/Media/Video/Editing/Cmd/TrimAudioFile.html","","<p>CLI for trimming an audio file\n"],["Media::Video::Editing::Cmd::VideoStreamToFile","","classes/Media/Video/Editing/Cmd/VideoStreamToFile.html","","<p>CLI for extracting a video track to a video file\n"],["Media::Video::Editing::Composer","","classes/Media/Video/Editing/Composer.html","","<p>Compose the components supplied (videos, text, images) in order to create a\nnew video based on them\n"],["Media::Video::Editing::Composer::Job","","classes/Media/Video/Editing/Composer/Job.html","","<p>DelayedJob for composing processings\n"],["Media::Video::Editing::Concat","","classes/Media/Video/Editing/Concat.html","","<p>Concatenate an array of video files producing a new video as output\n"],["Media::Video::Editing::Conversion","","classes/Media/Video/Editing/Conversion.html","","<p>Convert a video to formats playable by HTML5 capable browsers\n"],["Media::Video::Editing::Conversion::Job","","classes/Media/Video/Editing/Conversion/Job.html","","<p>DelayedJob for conversion processings\n"],["Media::Video::Editing::Crop","","classes/Media/Video/Editing/Crop.html","","<p>Crop the input videos supplied producing shorter output videos\n"],["Media::Video::Editing::ImageToVideo","","classes/Media/Video/Editing/ImageToVideo.html","","<p>Convert the supplied image file to videos of the supplied duration\n"],["Media::Video::Editing::Parameters","","classes/Media/Video/Editing/Parameters.html","","<p>Module that contains parameters converter for the video editor (see Video,\nVideoEditorController)\n"],["Media::Video::Editing::ReplaceAudio","","classes/Media/Video/Editing/ReplaceAudio.html","","<p>Replace the audio of a video file\n"],["Media::Video::Editing::TextToVideo","","classes/Media/Video/Editing/TextToVideo.html","","<p>Convert a text to videos of the supplied duration\n"],["Media::Video::Editing::Transition","","classes/Media/Video/Editing/Transition.html","","<p>Creates a video transition between two videos\n"],["Media::Video::Uploader","","classes/Media/Video/Uploader.html","","<p>Video uploading class; descendant of Media::Uploader\n"],["Media::Video::Uploader::Validation","","classes/Media/Video/Uploader/Validation.html","","<p>Module containing methods for validation of a Video\n"],["MediaElement","","classes/MediaElement.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>media_elements</code>; this model has single table …\n"],["MediaElement::ViewerTypes","","classes/MediaElement/ViewerTypes.html","",""],["MediaElementsController","","classes/MediaElementsController.html","","<p>Description\n<p>Controller for all the actions related to elements and their buttons. All\nover this controller …\n"],["MediaElementsSlide","","classes/MediaElementsSlide.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>media_elements_slides</code>: this table contains …\n"],["Notification","","classes/Notification.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>notifications</code>: this table contains messages …\n"],["NotificationsController","","classes/NotificationsController.html","","<p>Description\n<p>Contains the actions used to handle notifications.\n<p>Models used\n"],["NotificationsJob","","classes/NotificationsJob.html","","<p><code>DelayedJob</code> job which sends the user web notifications\n"],["NotificationsTest","","classes/NotificationsTest.html","","<p>Test notifications in any language\n"],["PreloginController","","classes/PreloginController.html","","<p>Description\n<p>Contains the actions called while the user is not logged in\n<p>Models used\n"],["Purchase","","classes/Purchase.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>purchases</code>.\n<p>Fields\n"],["Report","","classes/Report.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>reports</code>: this\ntable contains reports of inappropriate …\n"],["ReportsController","","classes/ReportsController.html","","<p>Description\n<p>Contains the actions necessary to send a report of inappropriate content\n<p>Models used\n"],["SchoolLevel","","classes/SchoolLevel.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>school_levels</code>.\n<p>Fields\n"],["SearchController","","classes/SearchController.html","","<p>Description\n<p>Controller for the search engine with all its options\n<p>Models used\n"],["SearchOrders","","classes/SearchOrders.html","","<p>Keywords for possible orders in the results of the search engine\n"],["Slide","","classes/Slide.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>slides</code>.\n<p>Fields\n"],["Slide::MathImages","","classes/Slide/MathImages.html","",""],["Statistics","","classes/Statistics.html","","<p>Module of methods that return statistics, used in\nUsersController#statistics, Admin::DashboardController#index …\n"],["Statuses","","classes/Statuses.html","","<p>Keywords for statuses of lessons and elements; with the word\n<code>item</code> below we refere to both lessons and …\n"],["Subject","","classes/Subject.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>subjects</code>.\n<p>Fields\n"],["Tag","","classes/Tag.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>tags</code>.\n<p>Fields\n"],["Tagging","","classes/Tagging.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>taggings</code>. A\ntagging is an instance of a tag …\n"],["TagsController","","classes/TagsController.html","","<p>Description\n<p>Contains the actions used in autocomplete\n<p>Models used\n"],["ThreadProc","","classes/ThreadProc.html","",""],["TimeConvert","","classes/TimeConvert.html","","<p>Module containing functions used to convert the time visualization\naccording to the time format in different …\n"],["TimeConvert::TimeConverter","","classes/TimeConvert/TimeConverter.html","","<p>Subclass used to encapsulate the models of TimeConvert\n"],["UrlTypes","","classes/UrlTypes.html","",""],["UrlTypes::InstanceMethods","","classes/UrlTypes/InstanceMethods.html","",""],["User","","classes/User.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table <code>users</code>.\n<p>Fields\n"],["User::Authentication","","classes/User/Authentication.html","","<p>Provides the User authentication logic\n"],["User::Authentication::ClassMethods","","classes/User/Authentication/ClassMethods.html","",""],["User::Authentication::InstanceMethods","","classes/User/Authentication/InstanceMethods.html","",""],["User::Confirmation","","classes/User/Confirmation.html","","<p>Provides the User confirmation logic\n"],["User::Confirmation::ClassMethods","","classes/User/Confirmation/ClassMethods.html","",""],["User::Confirmation::InstanceMethods","","classes/User/Confirmation/InstanceMethods.html","",""],["User::ResetPassword","","classes/User/ResetPassword.html","","<p>Provides the User logics for resetting the password of a user\n"],["User::ResetPassword::ClassMethods","","classes/User/ResetPassword/ClassMethods.html","","<p>Module containing the class methods\n"],["User::ResetPassword::InstanceMethods","","classes/User/ResetPassword/InstanceMethods.html","","<p>Module containing the instance methods\n"],["UserMailer","","classes/UserMailer.html","","<p>Regular mailer\n"],["Users","","classes/Users.html","",""],["Users::SessionsController","","classes/Users/SessionsController.html","","<p>Description\n<p>Controller that handles sessions and login (see UsersController).\n<p>Models used\n"],["UsersController","","classes/UsersController.html","","<p>Description\n<p>Controller for actions related to user&#39;s profile and statistics\n<p>Models used\n"],["UsersSubject","","classes/UsersSubject.html","","<p>Description\n<p>ActiveRecord model associated to the table &#39;users_subjects&#39;: this\ntable is used as …\n"],["Valid","","classes/Valid.html","","<p>Module used to extract the object associated to a standard association\n"],["Valid::Validness","","classes/Valid/Validness.html","","<p>Class used to encapsulate the methods of Valid\n"],["Video","","classes/Video.html","","<p>Description\n<p>This class inherits from MediaElement, and contains the specific methods\nneeded for media …\n"],["VideoEditorController","","classes/VideoEditorController.html","","<p>Description\n<p>Controller for all the actions in the video editor\n<p>Models used\n"],["VirtualClassroomController","","classes/VirtualClassroomController.html","","<p>Description\n<p>Contains all the actions related with the user&#39;s Virtual Classroom\n<p>Models used\n"],["VirtualClassroomLesson","","classes/VirtualClassroomLesson.html","","<p>Description\n<p>ActiveRecord class that corresponds to the table\n<code>virtual_classroom_lessons</code>: the table represents …\n"],["absolute_store_dir_pathname","DocumentUploader","classes/DocumentUploader.html#method-i-absolute_store_dir_pathname","()",""],["accept","Admin::ReportsController","classes/Admin/ReportsController.html#method-i-accept","()","<p>Description\n<p>A report is accepted and thus the associated lesson or element is deleted,\ntogether with the …\n"],["accept","Report","classes/Report.html#method-i-accept","()","<p>Description\n<p>The report is accepted as valid: hence the associated Lesson or\nMediaElement is destroyed, …\n"],["accept_policies","User","classes/User.html#method-i-accept_policies","()","<p>Description\n<p>It accepts all the policies declared in <code>registration_policies</code>.\nExample:\n User.new.accept_policies ...\n"],["accepted_media_element_sti_type","Slide","classes/Slide.html#method-i-accepted_media_element_sti_type","()","<p>Description\n<p>Returns the accepted sti_type for instances of MediaElement contained in\nthis slide through …\n"],["account_confirmation","UserMailer","classes/UserMailer.html#method-i-account_confirmation","(user)","<p>Mail sent to confirm a new user account\n"],["achannels","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-achannels","()",""],["acodec","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-acodec","()",""],["acodec","Media::Video::Editing::Cmd::Concat::Mp4","classes/Media/Video/Editing/Cmd/Concat/Mp4.html#method-i-acodec","()","<p>audio codec\n"],["acodec","Media::Video::Editing::Cmd::Concat::Webm","classes/Media/Video/Editing/Cmd/Concat/Webm.html#method-i-acodec","()","<p>audio codec\n"],["acodec","Media::Video::Editing::Cmd::M4aToWav","classes/Media/Video/Editing/Cmd/M4aToWav.html#method-i-acodec","()","<p>Audio codec\n"],["acodec","Media::Video::Editing::Cmd::ReplaceAudio","classes/Media/Video/Editing/Cmd/ReplaceAudio.html#method-i-acodec","()","<p>Audio codec\n"],["action_html_class","ApplicationHelper","classes/ApplicationHelper.html#method-i-action_html_class","()","<p>Gets the html class to scope css (action).\n"],["activate","Admin::UsersController","classes/Admin/UsersController.html#method-i-activate","()","<p>Description\n<p>Sets the field <code>active</code> of User to <code>true</code> (used only\nin Admin::UsersController#show)\n<p>Mode\n"],["add","LessonsController","classes/LessonsController.html#method-i-add","()","<p>Description\n<p>Adds a link of this lesson to your section.\n* <em>found</em>: reloads the\nlesson in compact mode\n* ...\n"],["add","MediaElementsController","classes/MediaElementsController.html#method-i-add","()","<p>Description\n<p>Adds a link of this element to your section.\n* <em>found</em>: reloads the\nelement in compact mode ...\n"],["add_lesson","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-add_lesson","()","<p>Description\n<p>Creates a link of this lesson into your Virtual Classroom. List of possible\ngraphical effects …\n"],["add_lesson_to_playlist","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-add_lesson_to_playlist","()","<p>Description\n<p>Adds a lesson to your playlist\n<p>Mode\n"],["add_path_entry","Export::Lesson::Shared","classes/Export/Lesson/Shared.html#method-i-add_path_entry","(archive, path, entry_path)",""],["add_slide","Lesson","classes/Lesson.html#method-i-add_slide","(kind, position)","<p>Description\n<p>Adds a slide of a specific type. Used in LessonEditorController#add_slide\n<p>Args\n"],["add_slide","LessonEditorController","classes/LessonEditorController.html#method-i-add_slide","()","<p>Description\n<p>Action that adds a new slide to the lesson\n<p>Mode\n"],["add_string_entry","Export::Lesson::Shared","classes/Export/Lesson/Shared.html#method-i-add_string_entry","(archive, string, entry_path)",""],["add_template","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-i-add_template","(archive, locals, archive_entry_path, view_path_relative_from_template_folder = nil)",""],["add_text","Image","classes/Image.html#method-i-add_text","(texts)","<p>Description\n<p>Adds multiple texts in the temporary image. Used in\nImageEditorController#add_text\n<p>Arguments …\n"],["add_text","ImageEditorController","classes/ImageEditorController.html#method-i-add_text","()","<p>Description\n<p>Adds texts to the image\n<p>Mode\n"],["add_to_playlist","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-add_to_playlist","()","<p>Description\n<p>Adds a lesson to the playlist. Used in\nVirtualClassroomController#add_lesson_to_playlist. …\n"],["add_to_virtual_classroom","Lesson","classes/Lesson.html#method-i-add_to_virtual_classroom","(an_user_id)","<p>Description\n<p>Creates a record of VirtualClassroomLesson for this lesson. First it checks\nwhether the record …\n"],["address_to_s","Purchase","classes/Purchase.html#method-i-address_to_s","()","<p>Description\n<p>Used in the front end, it returns a resume of the address depending on the\nfield filled up …\n"],["admin","User","classes/User.html#method-c-admin","()","<p>Description\n<p>It returns an instance of the only super administrator\n<p>Returns\n"],["admin?","User","classes/User.html#method-i-admin-3F","()","<p>Description\n<p>It checks if the user is administrator or not (i.e., if the user is allowed\nto enter in the …\n"],["admin_authenticate","ApplicationController","classes/ApplicationController.html#method-i-admin_authenticate","()","<p>Authenticates the user, and it must be admin (see User#admin?)\n"],["admin_quick_uploading_cache","User","classes/User.html#method-i-admin_quick_uploading_cache","()","<p>Description\n<p>Extracts the quick uploadin cache (used in\nAdmin::MediaElementsController#new)\n<p>Returns\n"],["all_liked_lessons","Statistics","classes/Statistics.html#method-i-all_liked_lessons","(first_n)","<p>The first n lessons liked by users in all the application\n"],["all_shared_elements","Statistics","classes/Statistics.html#method-i-all_shared_elements","()","<p>The number of shared media elements in the application\n"],["all_shared_lessons","Statistics","classes/Statistics.html#method-i-all_shared_lessons","()","<p>The number of shared lessons in the application\n"],["all_users","Statistics","classes/Statistics.html#method-i-all_users","()","<p>The number of users in the application\n"],["all_users_like","Statistics","classes/Statistics.html#method-i-all_users_like","(first_n)","<p>The first n users who received more likes\n"],["allows_document?","Slide","classes/Slide.html#method-i-allows_document-3F","()","<p>Description\n<p>Checks if the <code>kind</code> of this slide allows an attached document\n(see DocumentsSlide).\n<p>Returns …\n"],["allows_text?","Slide","classes/Slide.html#method-i-allows_text-3F","()","<p>Description\n<p>Checks if the <code>kind</code> of this slide allows a text (used in the\nvalidations of this model).\n<p>Returns …\n"],["allows_title?","Slide","classes/Slide.html#method-i-allows_title-3F","()","<p>Description\n<p>Checks if the <code>kind</code> of this slide allows a title (used in the\nvalidations of this model).\n<p>Returns …\n"],["amap","Media::Audio::Editing::Cmd::Conversion","classes/Media/Audio/Editing/Cmd/Conversion.html#method-i-amap","()","<p>input audios filtering\n"],["amap","Media::Video::Editing::Cmd::Conversion","classes/Media/Video/Editing/Cmd/Conversion.html#method-i-amap","()","<p>input audios filtering\n"],["amap","Media::Video::Editing::Cmd::M4aToWav","classes/Media/Video/Editing/Cmd/M4aToWav.html#method-i-amap","()","<p>Audio map\n"],["ancestry_with_me","Location","classes/Location.html#method-i-ancestry_with_me","()","<p>Description\n<p>Returns the field <code>ancestry</code>, adding to its beginning the id of\nthe current location\n<p>Returns …\n"],["ar","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-ar","()",""],["archive","LessonExportController","classes/LessonExportController.html#method-i-archive","()","<p>Description\n<p>Exports the lesson in format HTML\n<p>Mode\n"],["asset_path","Export::Lesson::Archive::Assets","classes/Export/Lesson/Archive/Assets.html#method-i-asset_path","(source, options = {})",""],["asset_path","Export::Lesson::Ebook::Assets","classes/Export/Lesson/Ebook/Assets.html#method-i-asset_path","(source, options = {})",""],["asset_path","Export::Lesson::Scorm::Assets","classes/Export/Lesson/Scorm/Assets.html#method-i-asset_path","(source, options = {})",""],["asset_path_upfolders","Export::Assets","classes/Export/Assets.html#method-i-asset_path_upfolders","()",""],["assets","Export::Assets","classes/Export/Assets.html#method-i-assets","()","<p>Adapted from sprockets-rails-2.0.1/lib/sprockets/railtie.rb, the relevant\nparts\n"],["assets","Export::Lesson::Archive::Assets","classes/Export/Lesson/Archive/Assets.html#method-i-assets","()",""],["assets_compiled?","Export::Lesson::Archive","classes/Export/Lesson/Archive.html#method-i-assets_compiled-3F","()",""],["assets_compiled?","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-i-assets_compiled-3F","()",""],["assets_compiled?","Export::Lesson::Scorm","classes/Export/Lesson/Scorm.html#method-i-assets_compiled-3F","()","<p>Returns true or false, checking if the assets are compiled or not\n"],["assets_files","Export::Lesson::Archive","classes/Export/Lesson/Archive.html#method-i-assets_files","()",""],["assets_files","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-i-assets_files","()",""],["assets_files","Export::Lesson::Scorm","classes/Export/Lesson/Scorm.html#method-i-assets_files","()","<p>Asset files\n"],["astreams","Media::Audio::Editing::Cmd::Conversion","classes/Media/Audio/Editing/Cmd/Conversion.html#method-i-astreams","()","<p>input audio streams (not used by the command)\n"],["astreams","Media::Video::Editing::Cmd::Conversion","classes/Media/Video/Editing/Cmd/Conversion.html#method-i-astreams","()","<p>input audio streams (not used by the command)\n"],["audio","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-audio","()","<p>Initial audio instance\n"],["audio","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-audio","()","<p>Audio track instance (<code>nil</code> if <code>params[:id]</code> is not\nprovided)\n"],["audio?","MediaElement","classes/MediaElement.html#method-i-audio-3F","()","<p>Description\n<p>Returns <code>true</code> if the element is of type Audio\n<p>Returns\n"],["audio_copy","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-audio_copy","(input, output)","<p>Audio file copy\n"],["audio_editor_available","User","classes/User.html#method-i-audio_editor_available","()","<p>Description\n<p>Checks if the Audio Editor is available (this is true if there is no Audio\nin conversion at …\n"],["audio_editor_cache","User","classes/User.html#method-i-audio_editor_cache","()","<p>Description\n<p>Returns the current Audio Editor cache for this user\n<p>Returns\n"],["audio_editor_cache!","User","classes/User.html#method-i-audio_editor_cache-21","(cache = nil)","<p>Description\n<p>Saves the Audio Editor cache; if the param is <code>nil</code>, the cache\nis emptied\n<p>Args\n"],["audio_for_audio_editor","GalleriesController","classes/GalleriesController.html#method-i-audio_for_audio_editor","()","<p>Description\n<p>Gets the first block of audios for the audio editor\n<p>Mode\n"],["audio_for_audio_editor_new_block","GalleriesController","classes/GalleriesController.html#method-i-audio_for_audio_editor_new_block","()","<p>Description\n<p>Gets following blocks of audios for the audio editor\n<p>Mode\n"],["audio_for_lesson_editor","GalleriesController","classes/GalleriesController.html#method-i-audio_for_lesson_editor","()","<p>Description\n<p>Gets the first block of audios for the lesson editor\n<p>Mode\n"],["audio_for_lesson_editor_new_block","GalleriesController","classes/GalleriesController.html#method-i-audio_for_lesson_editor_new_block","()","<p>Description\n<p>Gets following blocks of audios for the lesson editor\n<p>Mode\n"],["audio_for_video_editor","GalleriesController","classes/GalleriesController.html#method-i-audio_for_video_editor","()","<p>Description\n<p>Gets the first block of audios for the video editor\n<p>Mode\n"],["audio_for_video_editor_new_block","GalleriesController","classes/GalleriesController.html#method-i-audio_for_video_editor_new_block","()","<p>Description\n<p>Gets following blocks of audios for the video editor\n<p>Mode\n"],["audio_streams","Media::Info","classes/Media/Info.html#method-i-audio_streams","()","<p>Returns an array containing the audio streams infos when the media is\nvalid, <code>nil</code> otherwise\n"],["audios_test","MediaElementsController","classes/MediaElementsController.html#method-i-audios_test","()","<p>Description\n<p>Test useful to check correctness of conversion and cross browser visibility\nof all elements …\n"],["authenticate","ApplicationController","classes/ApplicationController.html#method-i-authenticate","()","<p>Authenticates the user\n"],["available!","Lesson","classes/Lesson.html#method-i-available-21","(type, value=true)","<p>Description\n<p>Sets the value of one of the two metadata (<code>available_video</code> or\n<code>available_audio</code>).\n<p>Args\n"],["available?","Lesson","classes/Lesson.html#method-i-available-3F","(type=nil)","<p>Description\n<p>Checks whether the lesson is available for editing in the Lesson Editor (if\nat least one between …\n"],["background_position","Image","classes/Image.html#method-i-background_position","(kind, alignment)","<p>Description\n<p>Elaborates the CSS background-position property in order to\nposition the\nimage when used as ...\n"],["background_position","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-background_position","()","<p>Description\n<p>Returns media_element.background_position. media_element must be an Image.\n<p>Returns\n"],["background_size","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-background_size","()",""],["ban","Admin::UsersController","classes/Admin/UsersController.html#method-i-ban","()","<p>Description\n<p>Sets the field <code>active</code> of User to <code>false</code> (used only\nin Admin::UsersController#show)\n<p>Mode\n"],["banned_pre_authenticate","ApplicationController","classes/ApplicationController.html#method-i-banned_pre_authenticate","()","<p>Used to check if the user has been banned\n"],["base_label","Location","classes/Location.html#method-c-base_label","(plural=false)","<p>Description\n<p>Returns the label of the lowest category of location\n<p>Args\n"],["base_location","User","classes/User.html#method-i-base_location","()","<p>Description\n<p>Method used in the front end that returns the name of the first Location\nattached to the user …\n"],["blank?","Media::Uploader","classes/Media/Uploader.html#method-i-blank-3F","()","<p>Returns <code>false</code> (a Media::Uploader instance is never\n<code>blank?</code>)\n"],["bookmark","User","classes/User.html#method-i-bookmark","(type, target_id)","<p>Description\n<p>Used to create a Bookmark on a lesson or a media element\n<p>Args\n"],["bookmarked?","Lesson","classes/Lesson.html#method-i-bookmarked-3F","(an_user_id, select=nil)","<p>Description\n<p>Checks if the lesson has a Bookmark for a particular user\n<p>Args\n"],["bookmarked?","MediaElement","classes/MediaElement.html#method-i-bookmarked-3F","(an_user_id, select=nil)","<p>Description\n<p>Checks if the element has a Bookmark for a particular user\n<p>Args\n"],["browser_not_supported","ApplicationController","classes/ApplicationController.html#method-i-browser_not_supported","()",""],["buttons","Lesson","classes/Lesson.html#method-i-buttons","()","<p>Description\n<p>Returns the list of buttons available for the user who wants to see this\nlesson. If the lesson …\n"],["buttons","MediaElement","classes/MediaElement.html#method-i-buttons","()","<p>Description\n<p>Returns the list of buttons available for the user who wants to see this\nelement. If the element …\n"],["cache_dir","DocumentUploader","classes/DocumentUploader.html#method-i-cache_dir","()",""],["cache_dir","ImageUploader","classes/ImageUploader.html#method-i-cache_dir","()",""],["cache_folder_images","Slide::MathImages","classes/Slide/MathImages.html#method-i-cache_folder_images","()",""],["cannot_destroy_while_converting","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-cannot_destroy_while_converting","()","<p>Return <code>true</code> if the instance is set as\n<code>destroyable_even_if_not_converted</code> or if it is not in a\nconversion …\n"],["change_position","Slide","classes/Slide.html#method-i-change_position","(x)","<p>Description\n<p>Changes the position of the slide. If the given position is not valid\n(&lt;= 1, or &gt; number …\n"],["change_position","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-change_position","(x)","<p>Description\n<p>Sets a new position of this lesson inside the playlist. The position must\nbe valid, i.e. it …\n"],["change_position_in_playlist","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-change_position_in_playlist","()","<p>Description\n<p>Moves the lesson into a different position inside the playlist\n<p>Mode\n"],["change_slide_position","LessonEditorController","classes/LessonEditorController.html#method-i-change_slide_position","()","<p>Description\n<p>Action that changes the position of a slide\n<p>Mode\n"],["char_for_email?","Valid","classes/Valid.html#method-c-char_for_email-3F","(i)","<p>White list of allowed characters in email\n"],["chart_colors","Subject","classes/Subject.html#method-c-chart_colors","()","<p>Description\n<p>Used to generate a graph of the distribution of the subjects among the\nlessons in the application. …\n"],["check_and_destroy","MediaElement","classes/MediaElement.html#method-i-check_and_destroy","()","<p>Description\n<p>Substitute for the normal method <code>destroy</code>, which additionally\nadds error messages (necessary …\n"],["check_available_for_user","AudioEditorController","classes/AudioEditorController.html#method-i-check_available_for_user","()","<p>Checks if the audio editor is available for the user (see\nUser#audio_editor_available)\n"],["check_available_for_user","LessonEditorController","classes/LessonEditorController.html#method-i-check_available_for_user","()","<p>Checks if the lesson editor is not locked for the user\n"],["check_available_for_user","LessonsController","classes/LessonsController.html#method-i-check_available_for_user","()","<p>Checks if the lesson is available (it doesn&#39;t contain any audio or\nvideo in conversion)\n"],["check_available_for_user","VideoEditorController","classes/VideoEditorController.html#method-i-check_available_for_user","()","<p>Checks if the video editor is available for the user (see\nUser#video_editor_available)\n"],["check_conversion","LessonEditorController","classes/LessonEditorController.html#method-i-check_conversion","()","<p>Description\n<p>Reloads videos and audios in the galleries if they are in conversion\n<p>Mode\n"],["check_conversion","MediaElementsController","classes/MediaElementsController.html#method-i-check_conversion","()","<p>Description\n<p>Reloads the element if it&#39;s in conversion\n<p>Mode\n"],["check_presence","TagsController","classes/TagsController.html#method-i-check_presence","()","<p>Description\n<p>Checks if a specific tag is present in the database (if yes, the tag box\ngets colored)\n<p>Mode …\n"],["check_saas","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-check_saas","()","<p>Filter that checks if this section is enabled\n"],["clean","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-clean","()","<p>Clean the media folder\n"],["clear_password_and_password_confirmation","User::Authentication::InstanceMethods","classes/User/Authentication/InstanceMethods.html#method-i-clear_password_and_password_confirmation","()","<p>Clears <code>password</code> and <code>password_confirmation</code>\nattributes\n"],["cmd","Media::Cmd","classes/Media/Cmd.html#method-i-cmd","()","<p>the <code>@cmd</code> instance variable (sets it calling Media::Cmd#cmd! if\nnot yet set)\n"],["cmd!","Media::Audio::Editing::Cmd::Concat","classes/Media/Audio/Editing/Cmd/Concat.html#method-i-cmd-21","()","<p>Command string\n"],["cmd!","Media::Cmd","classes/Media/Cmd.html#method-i-cmd-21","()","<p>The command string\n"],["cmd!","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-cmd-21","()",""],["cmd!","Media::Cmd::Avprobe","classes/Media/Cmd/Avprobe.html#method-i-cmd-21","()",""],["cmd!","Media::Image::Editing::AddTextToImage","classes/Media/Image/Editing/AddTextToImage.html#method-i-cmd-21","()","<p>Overwrites the method Media::Cmd#cmd! for this specific task\n"],["cmd!","Media::Image::Editing::Cmd::TextToImage","classes/Media/Image/Editing/Cmd/TextToImage.html#method-i-cmd-21","()","<p>Command used in MiniMagick\n"],["cmd!","Media::Video::Editing::Cmd::AudioStreamToFile","classes/Media/Video/Editing/Cmd/AudioStreamToFile.html#method-i-cmd-21","()",""],["cmd!","Media::Video::Editing::Cmd::GenerateTransitionFrames","classes/Media/Video/Editing/Cmd/GenerateTransitionFrames.html#method-i-cmd-21","()","<p>Command string\n"],["cmd!","Media::Video::Editing::Cmd::MergeWebmVideoStreams","classes/Media/Video/Editing/Cmd/MergeWebmVideoStreams.html#method-i-cmd-21","()","<p>Command string\n"],["cmd!","Media::Video::Editing::Cmd::TrimAudioFile","classes/Media/Video/Editing/Cmd/TrimAudioFile.html#method-i-cmd-21","()","<p>Command string\n"],["cmd!","Media::Video::Editing::Cmd::VideoStreamToFile","classes/Media/Video/Editing/Cmd/VideoStreamToFile.html#method-i-cmd-21","()","<p>Command string\n"],["cmd_entry","Media::Audio::Editing::Cmd::Concat","classes/Media/Audio/Editing/Cmd/Concat.html#method-i-cmd_entry","(input, output, audios_with_paddings_length, paddings, i)","<p>Sub-command for each input entry; if the input format is not supported by\nSox, uses avconv in order to …\n"],["codecs","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-codecs","()",""],["column_changed?","Media::Uploader","classes/Media/Uploader.html#method-i-column_changed-3F","()","<p>Whether the value of the attribute of the instance is changed\n"],["compile","Export::Assets","classes/Export/Assets.html#method-i-compile","()",""],["compile","Export::Assets","classes/Export/Assets.html#method-c-compile","()",""],["compiled?","Export::Assets","classes/Export/Assets.html#method-c-compiled-3F","()",""],["compiled?","Export::Assets","classes/Export/Assets.html#method-i-compiled-3F","()",""],["compose","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-compose","()","<p>Composing of a single component\n"],["compose","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-compose","()","<p>Composing of a single component\n"],["compose_audio","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-compose_audio","(audio_id, from, to, i)","<p>Audio component composing\n"],["compose_image","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-compose_image","(image_id, duration, i)","<p>Image component composing\n"],["compose_text","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-compose_text","(text, duration, color, background_color, i)","<p>Text component composing\n"],["compose_video","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-compose_video","(video_id, from, to, i)","<p>Video component composing\n"],["composed?","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-composed-3F","()","<p>Returns <code>true</code> if the model was created with a composing action,\notherwise <code>false</code>\n"],["concat","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-concat","(format)","<p>Concatenation processing (per format)\n"],["concat","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-concat","(mp4_inputs_infos, paddings)","<p>Concatenation core processing\n<p>Logic\n<p>If there is at least one audio streamse c&#39;è almeno uno stream audio: …\n"],["confirm","UsersController","classes/UsersController.html#method-i-confirm","()","<p>Description\n<p>Confirms a profile using the link with token received by e-mail by the user\n<p>Mode\n"],["confirm!","User::Confirmation::ClassMethods","classes/User/Confirmation/ClassMethods.html#method-i-confirm-21","(token)","<p>Searches for a user with a confirmation_token equals to the token arg; if\nfound confirms it\n<p>Returns\n<p>The …\n"],["confirmation_token!","User::Confirmation::InstanceMethods","classes/User/Confirmation/InstanceMethods.html#method-i-confirmation_token-21","()","<p>If the user is confirmed deletes the confirmation_token attribute; sets it\notherwise\n"],["contact_us_link","ApplicationHelper","classes/ApplicationHelper.html#method-i-contact_us_link","()",""],["controller_html_class","ApplicationHelper","classes/ApplicationHelper.html#method-i-controller_html_class","()","<p>Gets the html class to scope css (controller).\n"],["convert_audio_to_parameters","AudioEditorController","classes/AudioEditorController.html#method-i-convert_audio_to_parameters","()","<p>Converts a single audio in a cache in the format of\nMedia::Audio::Editing::Parameters\n"],["convert_document_error_messages","ApplicationController","classes/ApplicationController.html#method-i-convert_document_error_messages","(errors)","<p>Used for errors of a document.\n"],["convert_in_chinese","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-convert_in_chinese","(a_time)","<p>Convert a time according to standard chinese format\n"],["convert_in_english","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-convert_in_english","(a_time)","<p>Convert a time according to standard english format\n"],["convert_in_italian","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-convert_in_italian","(a_time)","<p>Convert a time according to standard italian format\n"],["convert_lesson_error_messages","ApplicationController","classes/ApplicationController.html#method-i-convert_lesson_error_messages","(errors)","<p>Used for errors of a lesson.\n"],["convert_media_element_error_messages","ApplicationController","classes/ApplicationController.html#method-i-convert_media_element_error_messages","(errors)","<p>Used for errors of a media element.\n"],["convert_parameters","Media::Audio::Editing::Parameters","classes/Media/Audio/Editing/Parameters.html#method-i-convert_parameters","(hash, user_id)","<p>Description\n<p>Validates and converts the parameters. See the code for further details\nabout the validations …\n"],["convert_parameters","Media::Video::Editing::Parameters","classes/Media/Video/Editing/Parameters.html#method-i-convert_parameters","(hash, user_id)","<p>Description\n<p>Validates and converts the parameters. See the code for further details\nabout the validations …\n"],["convert_to","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-convert_to","(format)","<p>Manages the conversion processing\n"],["convert_to","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-convert_to","(format)","<p>Manages the conversion processing\n"],["convert_to","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-convert_to","(processed_image_path, format)","<p>Format-relative processing\n"],["convert_to_primitive_parameters","Media::Audio::Editing::Parameters","classes/Media/Audio/Editing/Parameters.html#method-i-convert_to_primitive_parameters","(hash, user_id)","<p>This method uses Media::Audio::Editing::Parameters#convert_parameters to\nvalidate the parameters, and …\n"],["convert_to_primitive_parameters","Media::Video::Editing::Parameters","classes/Media/Video/Editing/Parameters.html#method-i-convert_to_primitive_parameters","(hash, user_id)","<p>This method uses Media::Video::Editing::Parameters#convert_parameters to\nvalidate the parameters, and …\n"],["convert_user_error_messages","ApplicationController","classes/ApplicationController.html#method-i-convert_user_error_messages","(errors)","<p>Used for errors of a user.\n"],["convert_video_to_parameters","VideoEditorController","classes/VideoEditorController.html#method-i-convert_video_to_parameters","()","<p>Converts a single video in a cache in the format of\nMedia::Video::Editing::Parameters\n"],["copy","Lesson","classes/Lesson.html#method-i-copy","(an_user_id)","<p>Description\n<p>Creates a copy of the lesson for a particular user. First, it checks if\nthat user is allowed …\n"],["copy","LessonsController","classes/LessonsController.html#method-i-copy","()","<p>Description\n<p>Creates a copy of this lesson, and opens a popup asking you if you want to\nedit immediately …\n"],["copy","Media::Uploader","classes/Media/Uploader.html#method-i-copy","()","<p>Executes the copy process\n"],["copy_first_inputs_to_outputs","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-copy_first_inputs_to_outputs","()","<p>Edge case management: when there is just one inputs hash we just copy the\ninputs to their respective …\n"],["copy_first_inputs_to_outputs","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-copy_first_inputs_to_outputs","()","<p>Edge case management: when there is just one inputs hash we just copy the\ninputs to their respective …\n"],["copy_math_images","Slide","classes/Slide.html#method-i-copy_math_images","()","<p>Copies the math images\n"],["copy_to","Slide::MathImages","classes/Slide/MathImages.html#method-i-copy_to","(copy_model_id)",""],["correct_integer?","ApplicationController","classes/ApplicationController.html#method-i-correct_integer-3F","(x)","<p>Used in ApplicationController#initialize_lesson and similar methods, to\ncheck if the id passed as parameter …\n"],["cover","Lesson","classes/Lesson.html#method-i-cover","()","<p>Description\n<p>Returns the cover slide of the lesson.\n<p>Returns\n"],["cover?","Slide","classes/Slide.html#method-i-cover-3F","()","<p>Description\n<p>Checks if the slide is of kind &#39;cover&#39;\n<p>Returns\n"],["cover_image_path","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-cover_image_path","(cover_slide)",""],["cover_of?","MediaElement","classes/MediaElement.html#method-i-cover_of-3F","(lesson)","<p>Description\n<p>Checks if the it is the <code>lesson</code> argument cover\n<p>Returns\n"],["cover_output_path","Media::Video::Uploader","classes/Media/Video/Uploader.html#method-i-cover_output_path","()","<p>Cover file output path\n"],["cover_url","Video","classes/Video.html#method-i-cover_url","(url_type = nil)","<p>Description\n<p>Returns the url of the image used anywhere it&#39;s necessary the cover of\nthe video with …\n"],["create","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-create","()","<p>Description\n<p>Submits one of the multiple upload temporary files and creates a new\nelement\n<p>Mode\n"],["create","Admin::PersonificationsController","classes/Admin/PersonificationsController.html#method-i-create","()",""],["create","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-create","()","<p>Description\n<p>Action to create a new purchase\n<p>Mode\n"],["create","DocumentsController","classes/DocumentsController.html#method-i-create","()","<p>Description\n<p>Action that calls the uploader and creates the new document\n<p>Mode\n"],["create","Export::Lesson::Archive","classes/Export/Lesson/Archive.html#method-i-create","()",""],["create","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-i-create","()",""],["create","Export::Lesson::Scorm","classes/Export/Lesson/Scorm.html#method-i-create","()","<p>Creates the scorm package\n"],["create","LessonEditorController","classes/LessonEditorController.html#method-i-create","()","<p>Description\n<p>Action that creates a new lesson\n<p>Mode\n"],["create","MediaElementsController","classes/MediaElementsController.html#method-i-create","()","<p>Description\n<p>Action that calls the uploader, casts the type, and creates the new element\n<p>Mode\n"],["create","Users::SessionsController","classes/Users/SessionsController.html#method-i-create","()","<p>Description\n<p>Create a new user session\n<p>Mode\n"],["create","UsersController","classes/UsersController.html#method-i-create","()","<p>Description\n<p>Creates a profile which is not confirmed yet\n<p>Mode\n"],["create_address","MailingListsController","classes/MailingListsController.html#method-i-create_address","()","<p>Description\n<p>Creates a new address inside a given group\n<p>Mode\n"],["create_audio","GalleriesController","classes/GalleriesController.html#method-i-create_audio","()","<p>Description\n<p>Action that calls the uploader from inside Lesson Editor, and creates the\nnew audio.\n<p>Mode\n"],["create_document","GalleriesController","classes/GalleriesController.html#method-i-create_document","()","<p>Description\n<p>Action that calls the uploader from inside Lesson Editor, and creates the\nnew document.\n<p>Mode …\n"],["create_fake","DocumentsController","classes/DocumentsController.html#method-i-create_fake","()","<p>Description\n<p>This action checks for errors without setting the attachment on the new\ndocument\n<p>Mode\n"],["create_fake","MediaElementsController","classes/MediaElementsController.html#method-i-create_fake","()","<p>Description\n<p>This action checks for errors without setting the media on the new element\n<p>Mode\n"],["create_fake_document","GalleriesController","classes/GalleriesController.html#method-i-create_fake_document","()","<p>Description\n<p>This action checks for errors without setting the attachment on the new\ndocument\n<p>Mode\n"],["create_fake_media_element","GalleriesController","classes/GalleriesController.html#method-i-create_fake_media_element","()","<p>Description\n<p>This action checks for errors without setting the media on the new element\n<p>Mode\n"],["create_group","MailingListsController","classes/MailingListsController.html#method-i-create_group","()","<p>Description\n<p>Creates a new group\n<p>Mode\n"],["create_image","GalleriesController","classes/GalleriesController.html#method-i-create_image","()","<p>Description\n<p>Action that calls the uploader from inside Lesson Editor, and creates the\nnew image.\n<p>Mode\n"],["create_lesson","User","classes/User.html#method-i-create_lesson","(title, description, subject_id, tags)","<p>Description\n<p>Creates a lesson belonging to the user (used in\nLessonEditorController#create)\n<p>Args\n"],["create_location","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-create_location","()","<p>Description\n<p>Creates a new location\n<p>Mode\n"],["create_log_folder","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-create_log_folder","()","<p>Create the log folder\n"],["create_log_folder","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-create_log_folder","(folder_name = nil)","<p>Create the instance log folder (calling\nMedia::Logging::InstanceMethods#log_folder)\n<p>Args\n<p><em>folder_name</em>: it …\n"],["create_log_folder","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-create_log_folder","()","<p>Create the log folder\n"],["create_or_update_cover","Lesson","classes/Lesson.html#method-i-create_or_update_cover","()","<p>Callback that creates or updates the cover after save\n"],["create_token","Lesson","classes/Lesson.html#method-i-create_token","()","<p>Callback that creates a random secure token and sets is as the\n<code>token</code> of the lesson\n"],["create_token","Purchase","classes/Purchase.html#method-i-create_token","()","<p>Callback that creates a random secure token and sets is as the\n<code>token</code> of the purchase\n"],["create_uuid","Lesson","classes/Lesson.html#method-i-create_uuid","()","<p>Create UUIDv4; IMPORTANT, this callback could be skipped, since the same\nuuid is automatically created …\n"],["create_video","GalleriesController","classes/GalleriesController.html#method-i-create_video","()","<p>Description\n<p>Action that calls the uploader from inside Lesson Editor, and creates the\nnew video.\n<p>Mode\n"],["crop","Image","classes/Image.html#method-i-crop","(x1, y1, x2, y2)","<p>Description\n<p>Crops the temporary image. Used in ImageEditorController#crop\n<p>Arguments\n"],["crop","ImageEditorController","classes/ImageEditorController.html#method-i-crop","()","<p>Description\n<p>Crops the image\n<p>Mode\n"],["crop","Media::Video::Editing::Crop","classes/Media/Video/Editing/Crop.html#method-i-crop","(format)","<p>Format-relative crop processing\n"],["current_editing_image","Image","classes/Image.html#method-i-current_editing_image","()","<p>Description\n<p>Returns the path of the current step conserved in image editor.\n<p>Returns\n"],["current_threads_amount","Media::Queue","classes/Media/Queue.html#method-i-current_threads_amount","()",""],["current_user","ApplicationController","classes/ApplicationController.html#method-i-current_user","()","<p>Returns the logged user\n"],["current_user!","ApplicationController","classes/ApplicationController.html#method-i-current_user-21","()","<p>Returns the logged user without checking for @current_user truthy\n"],["current_user=","ApplicationController","classes/ApplicationController.html#method-i-current_user-3D","(user)","<p>Setter method for the attribute current_user\n"],["dashboard_emptied?","Lesson","classes/Lesson.html#method-c-dashboard_emptied-3F","(an_user_id)","<p>Description\n<p>Checks whether the dashboard of a particular user is empty because he\npicked all the suggested …\n"],["dashboard_emptied?","MediaElement","classes/MediaElement.html#method-i-dashboard_emptied-3F","(an_user_id)","<p>Description\n<p>Checks whether the dashboard of a particular user is empty because he\npicked all the suggested …\n"],["data","Media::Error","classes/Media/Error.html#method-i-data","()","<p>Formats <code>@data</code> for the error message\n"],["dc_date","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-dc_date","(lesson)",""],["dcterms_modified","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-dcterms_modified","(lesson)",""],["decline","Admin::ReportsController","classes/Admin/ReportsController.html#method-i-decline","()","<p>Description\n<p>A report is declined and thus the associated lesson or element is\n<em>not</em> deleted; the report …\n"],["decline","Report","classes/Report.html#method-i-decline","()","<p>Description\n<p>The report is not accepted as valid: hence the associated Lesson or\nMediaElement is not destroyed. …\n"],["default_output_options","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-default_output_options","()",""],["default_url_options","Export::Lesson::Scorm::View::Helper","classes/Export/Lesson/Scorm/View/Helper.html#method-i-default_url_options","()",""],["delete_address","MailingListsController","classes/MailingListsController.html#method-i-delete_address","()","<p>Description\n<p>Removes an address inside a group\n<p>Mode\n"],["delete_group","MailingListsController","classes/MailingListsController.html#method-i-delete_group","()","<p>Description\n<p>Removes a group\n<p>Mode\n"],["delete_school_level","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-delete_school_level","()","<p>Description\n<p>Action that deletes a school level; it&#39;s possible to do it only if the\nschool level doesn&#39;t …\n"],["delete_slide","LessonEditorController","classes/LessonEditorController.html#method-i-delete_slide","()","<p>Description\n<p>Action that deletes the current slide\n<p>Mode\n"],["delete_subject","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-delete_subject","()","<p>Description\n<p>Action that deletes a subject; it&#39;s possible to do it only if the\nsubject doesn&#39;t …\n"],["delete_tag","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-delete_tag","()","<p>Description\n<p>Action that deletes a tag; with the cascade destruction, all taggings are\ndestroyed too (in …\n"],["destroy","Admin::DocumentsController","classes/Admin/DocumentsController.html#method-i-destroy","()","<p>Description\n<p>Destroys a document, sending notifications if it&#39;s used in\nsomebody&#39;s lessons.\n<p>Mode …\n"],["destroy","Admin::LessonsController","classes/Admin/LessonsController.html#method-i-destroy","()","<p>Description\n<p>Destroys a lesson without the normal filters\n<p>Mode\n"],["destroy","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-destroy","()","<p>Description\n<p>Destroys an element without the normal filters, from the administrator\n<p>Mode\n"],["destroy","Admin::PersonificationsController","classes/Admin/PersonificationsController.html#method-i-destroy","()",""],["destroy","Admin::UsersController","classes/Admin/UsersController.html#method-i-destroy","()","<p>Description\n<p>Action to destroy a user and remove its contact from the database (see\nUser#destroy_with_dependencies …\n"],["destroy","DocumentsController","classes/DocumentsController.html#method-i-destroy","()","<p>Description\n<p>Deletes definitively a document.\n<p>Mode\n"],["destroy","LessonsController","classes/LessonsController.html#method-i-destroy","()","<p>Description\n<p>Deletes definitively a lesson.\n* <em>found</em>: removes the lesson and\nreloads the whole page\n* <em>compact</em> ...\n"],["destroy","MediaElementsController","classes/MediaElementsController.html#method-i-destroy","()","<p>Description\n<p>Deletes definitively an element.\n* <em>found</em>: removes the element and\nreloads the whole page\n* ...\n"],["destroy","NotificationsController","classes/NotificationsController.html#method-i-destroy","()","<p>Description\n<p>Deletes a notification\n<p>Mode\n"],["destroy","Users::SessionsController","classes/Users/SessionsController.html#method-i-destroy","()","<p>Description\n<p>Destroys a user session\n<p>Mode\n"],["destroy_fake","MediaElementsController","classes/MediaElementsController.html#method-i-destroy_fake","()","<p>Description\n<p>Deletes an element which has not been correctly converted\n<p>Mode\n"],["destroy_notification_and_reload","User","classes/User.html#method-i-destroy_notification_and_reload","(notification_id, offset)","<p>Description\n<p>Destroys a Notification and reloads the current block of notifications\n(used in NotificationsController#destroy …\n"],["destroy_orphan_tags","Tagging","classes/Tagging.html#method-i-destroy_orphan_tags","()","<p>Callback that destroys the attached Tag if it doesn&#39;t have attached\ntaggings anymore. The callback …\n"],["destroy_taggings","Tag","classes/Tag.html#method-i-destroy_taggings","()","<p>Callback that destroys the taggings before the destruction of the present\ntag\n"],["destroy_virtual_classroom","Bookmark","classes/Bookmark.html#method-i-destroy_virtual_classroom","()","<p>Callback that destroys the associated record of VirtualClassroomLesson\n"],["destroy_with_dependencies","User","classes/User.html#method-i-destroy_with_dependencies","()","<p>Description\n<p>Used to destroy a user and remove it from the database: since for safety\nreasons there are …\n"],["destroy_with_notifications","Document","classes/Document.html#method-i-destroy_with_notifications","()","<p>Description\n<p>Destroys the document and sends notifications to the users who had a Lesson\ncontaining it. …\n"],["destroy_with_notifications","Lesson","classes/Lesson.html#method-i-destroy_with_notifications","()","<p>Description\n<p>Destroys the lesson and sends notifications to the users who had a Bookmark\nof it (the bookmarks …\n"],["destroy_with_positions","Slide","classes/Slide.html#method-i-destroy_with_positions","()","<p>Description\n<p>Destroys the slide keeping updated the position of the other slides in the\nsame lesson. It&#39;s …\n"],["disable_lessons_containing_me","MediaElement","classes/MediaElement.html#method-i-disable_lessons_containing_me","()","<p>Description\n<p>Sets <code>metadata</code>.<code>available_video</code> or\n<code>metadata</code>.<code>available_audio</code> to <code>false</code>\n(depending on sti_type …\n"],["dislike","LessonsController","classes/LessonsController.html#method-i-dislike","()","<p>Description\n<p>Removes your &#39;I like it&#39; from the lesson\n* <em>found</em>: reloads\nthe lesson in compact mode ...\n"],["dislike","User","classes/User.html#method-i-dislike","(lesson_id)","<p>Description\n<p>Removes a &#39;I like you&#39; that the user had formerly assigned to a\nLesson\n<p>Args\n"],["document_fallback_filename","Export::Lesson::Shared::EbookAndEbookView","classes/Export/Lesson/Shared/EbookAndEbookView.html#method-i-document_fallback_filename","(document)",""],["document_fallbacks_relative_from_content_path","Export::Lesson::Shared::EbookAndEbookView","classes/Export/Lesson/Shared/EbookAndEbookView.html#method-i-document_fallbacks_relative_from_content_path","(document)",""],["document_for_lesson_editor","GalleriesController","classes/GalleriesController.html#method-i-document_for_lesson_editor","()","<p>Description\n<p>Gets the first block of documents for the lesson editor\n<p>Mode\n"],["document_for_lesson_editor_filter","GalleriesController","classes/GalleriesController.html#method-i-document_for_lesson_editor_filter","()","<p>Description\n<p>Gets documents filtered by word\n<p>Mode\n"],["document_for_lesson_editor_new_block","GalleriesController","classes/GalleriesController.html#method-i-document_for_lesson_editor_new_block","()","<p>Description\n<p>Gets following blocks of documents for the lesson editor\n<p>Mode\n"],["document_item_fallback_id","Export::Lesson::Shared::EbookAndEbookView","classes/Export/Lesson/Shared/EbookAndEbookView.html#method-i-document_item_fallback_id","(document)",""],["document_item_id","Export::Lesson::Shared::EbookAndEbookView","classes/Export/Lesson/Shared/EbookAndEbookView.html#method-i-document_item_id","(document)",""],["documents_files","Export::Lesson::Shared","classes/Export/Lesson/Shared.html#method-i-documents_files","()",""],["documents_type_color","ApplicationHelper","classes/ApplicationHelper.html#method-i-documents_type_color","(document)","<p>Gets the color of description popup into the document gallery\n"],["dont_notify_changes","Lesson","classes/Lesson.html#method-i-dont_notify_changes","()","<p>Description\n<p>Sets <code>notified</code> as <code>true</code> without sending the\nnotification of modifications (see Lesson#notify_changes …\n"],["dont_notify_modification","LessonsController","classes/LessonsController.html#method-i-dont_notify_modification","()","<p>Description\n<p>Doesn&#39;t send any notification and sets the lesson as <em>notified</em>\n(using Lesson#dont_notify_changes …\n"],["duration","Media::Audio::Editing::Cmd::Crop","classes/Media/Audio/Editing/Cmd/Crop.html#method-i-duration","()","<p>Output video duration\n"],["duration","Media::Info","classes/Media/Info.html#method-i-duration","()","<p>Returns the media duration (in seconds) when the media is valid,\n<code>nil</code> otherwise\n"],["duration","Media::Video::Editing::Cmd::Concat::Mp4","classes/Media/Video/Editing/Cmd/Concat/Mp4.html#method-i-duration","()","<p>output duration\n"],["duration","Media::Video::Editing::Cmd::Concat::Webm","classes/Media/Video/Editing/Cmd/Concat/Webm.html#method-i-duration","()","<p>output duration\n"],["duration","Media::Video::Editing::Cmd::Crop","classes/Media/Video/Editing/Cmd/Crop.html#method-i-duration","()","<p>Output video duration\n"],["duration","Media::Video::Editing::Cmd::ReplaceAudio","classes/Media/Video/Editing/Cmd/ReplaceAudio.html#method-i-duration","()","<p>Output duration\n"],["duration_keys","Media::Uploader","classes/Media/Uploader.html#method-i-duration_keys","()","<p>Hash where the keys are the formats and the values are the keys to be used\nin the initializer in order …\n"],["durations","Media::Uploader","classes/Media/Uploader.html#method-i-durations","()","<p>Hash where the keys are the versions and the values are the respective\ninstance variable values\n"],["durations?","Media::Uploader","classes/Media/Uploader.html#method-i-durations-3F","()","<p>Whether the durations have been provided or not\n"],["ebook","LessonExportController","classes/LessonExportController.html#method-i-ebook","()","<p>Description\n<p>Exports the lesson in format EPUB\n<p>Mode\n"],["ebook_resources_formats","MediaElement","classes/MediaElement.html#method-i-ebook_resources_formats","()",""],["edit","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-edit","()","<p>Description\n<p>It opens the page for updating and sharing the private elements loaded by\nthe administrator …\n"],["edit","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-edit","()","<p>Description\n<p>Form to edit a purchase\n<p>Mode\n"],["edit","AudioEditorController","classes/AudioEditorController.html#method-i-edit","()","<p>Description\n<p>Opens the audio editor with only one component, corresponding to a given\naudio\n<p>Mode\n"],["edit","ImageEditorController","classes/ImageEditorController.html#method-i-edit","()","<p>Description\n<p>Opens the image editor with a selected image\n<p>Mode\n"],["edit","LessonEditorController","classes/LessonEditorController.html#method-i-edit","()","<p>Description\n<p>Form to edit general information (title, description, tags, subject) of an\nexisting lesson …\n"],["edit","UsersController","classes/UsersController.html#method-i-edit","()","<p>Description\n<p>Form to edit the general information about your profile\n<p>Mode\n"],["edit","VideoEditorController","classes/VideoEditorController.html#method-i-edit","()","<p>Description\n<p>Opens the video editor with only one component, corresponding to a given\nvideo\n<p>Mode\n"],["editing_url","Image","classes/Image.html#method-i-editing_url","()","<p>Description\n<p>Returns the url of the folder where it&#39;s conserved the temporary image\nduring editing. …\n"],["email?","Valid","classes/Valid.html#method-c-email-3F","(email)","<p>Method that validates the format of an e-mail address (used in User and\nMailingListAddress)\n"],["empty_cache","AudioEditorController","classes/AudioEditorController.html#method-i-empty_cache","()","<p>Description\n<p>Empties the cache\n<p>Mode\n"],["empty_cache","VideoEditorController","classes/VideoEditorController.html#method-i-empty_cache","()","<p>Description\n<p>Empties the cache\n<p>Mode\n"],["empty_parameters","AudioEditorController","classes/AudioEditorController.html#method-i-empty_parameters","()","<p>Gets a set of parameters in the format of Media::Audio::Editing::Parameters\nfrom an empty audio editor …\n"],["empty_parameters","VideoEditorController","classes/VideoEditorController.html#method-i-empty_parameters","()","<p>Gets a set of parameters in the format of Media::Video::Editing::Parameters\nfrom an empty video editor …\n"],["empty_playlist","User","classes/User.html#method-i-empty_playlist","()","<p>Description\n<p>Sets <code>position</code> = <code>nil</code> for all the elements of type\nVirtualClassroomLesson associated to the …\n"],["empty_playlist","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-empty_playlist","()","<p>Description\n<p>Empties the playlist and reloads it\n<p>Mode\n"],["empty_virtual_classroom","User","classes/User.html#method-i-empty_virtual_classroom","()","<p>Description\n<p>Deletes all the elements of type VirtualClassroomLesson associated to the\nuser. Used in VirtualClassroomController#empty_virtual_classroom …\n"],["empty_virtual_classroom","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-empty_virtual_classroom","()","<p>Description\n<p>Empties the Virtual Classroom and reloads it\n<p>Mode\n"],["enable_lessons_containing_me","MediaElement","classes/MediaElement.html#method-i-enable_lessons_containing_me","()","<p>Description\n<p>Sets <code>metadata</code>.<code>available_video</code> or\n<code>metadata</code>.<code>available_audio</code> to <code>true</code>\n(depending on sti_type). …\n"],["encode_with","Dumpable::NoMethodError","classes/Dumpable/NoMethodError.html#method-i-encode_with","(coder)",""],["encrypt_password","User::Authentication::InstanceMethods","classes/User/Authentication/InstanceMethods.html#method-i-encrypt_password","()","<p>Encrypts the password using BCrypt algorythm\n"],["end_frame","Media::Video::Editing::Cmd::GenerateTransitionFrames","classes/Media/Video/Editing/Cmd/GenerateTransitionFrames.html#method-i-end_frame","()","<p>End frame image path\n"],["end_frame_extraction_start_seek","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-i-end_frame_extraction_start_seek","(duration)","<p>Start seek of the end frame extraction, related to the video duration\n"],["english_day_suffix","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-english_day_suffix","(x)","<p>Suffix for the english days\n"],["english_month","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-english_month","(x)","<p>English translations for the month\n"],["enter_edit_mode","Image","classes/Image.html#method-i-enter_edit_mode","(user_id)","<p>Description\n<p>The image enters in <em>edit</em> <em>mode</em> for a particular user (who\nis not necessarily the creator of …\n"],["entry","Export::Lesson::Shared","classes/Export/Lesson/Shared.html#method-i-entry","(first_argument, second_argument)",""],["env","Export::Lesson::Ebook::Assets","classes/Export/Lesson/Ebook/Assets.html#method-i-env","()",""],["env","Export::Lesson::Scorm::Assets","classes/Export/Lesson/Scorm/Assets.html#method-i-env","()",""],["env_relative_path","EnvRelativePath::ClassMethods","classes/EnvRelativePath/ClassMethods.html#method-i-env_relative_path","(*paths)","<p>See EnvRelativePath\n"],["env_relative_pathname","EnvRelativePath::ClassMethods","classes/EnvRelativePath/ClassMethods.html#method-i-env_relative_pathname","(*paths)","<p>See EnvRelativePath\n"],["error_message","Media::Audio::Uploader::Validation","classes/Media/Audio/Uploader/Validation.html#method-i-error_message","()","<p>Generates the error message\n"],["error_message","Media::Video::Uploader::Validation","classes/Media/Video/Uploader/Validation.html#method-i-error_message","()","<p>Generates the error message\n"],["error_message_for_converted_files","Media::Audio::Uploader::Validation","classes/Media/Audio/Uploader/Validation.html#method-i-error_message_for_converted_files","()","<p>Generates the error messages for already converted files (invalid filename,\ninvalid extension, etc)\n"],["error_message_for_converted_files","Media::Video::Uploader::Validation","classes/Media/Video/Uploader/Validation.html#method-i-error_message_for_converted_files","()","<p>Error message for already converted files\n"],["error_message_for_file_to_convert","Media::Audio::Uploader::Validation","classes/Media/Audio/Uploader/Validation.html#method-i-error_message_for_file_to_convert","()","<p>Generates the error message for the original file not yet converted (a\npossible problem can be the wrong …\n"],["error_message_for_file_to_convert","Media::Video::Uploader::Validation","classes/Media/Video/Uploader/Validation.html#method-i-error_message_for_file_to_convert","()","<p>Error messages for an original file not yet converted\n"],["exception","Dumpable","classes/Dumpable.html#method-c-exception","(e)","<p>converts an exception to a dumpable one (if it isn&#39;t)\n"],["exitstatus","Media::Cmd","classes/Media/Cmd.html#method-i-exitstatus","()","<p>Returns the exit status of the last execution (<code>nil</code> if not\nexecuted)\n"],["expired?","Purchase","classes/Purchase.html#method-i-expired-3F","()","<p>Description\n<p>Checks if the actual time is greater than expiration_date\n<p>Returns\n"],["extension","Document","classes/Document.html#method-i-extension","()",""],["extension","Image","classes/Image.html#method-i-extension","()","<p>Image file extension (without dot)\n"],["extension_white_list","ImageUploader","classes/ImageUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded.\nFor images\nyou might use something like ...\n"],["extract","MediaElement","classes/MediaElement.html#method-i-extract","(media_element_id, an_user_id, my_sti_type)","<p>Description\n<p>Method used for validation for the usage of an element inside the video or\naudio editor: it&#39;s …\n"],["extract_cache","AudioEditorController","classes/AudioEditorController.html#method-i-extract_cache","()","<p>Extracts the cache and converts it\n"],["extract_cache","VideoEditorController","classes/VideoEditorController.html#method-i-extract_cache","()","<p>Extracts the cache and converts it\n"],["extract_component","Media::Audio::Editing::Parameters","classes/Media/Audio/Editing/Parameters.html#method-i-extract_component","(component, user_id)","<p>Using Media::Audio::Editing::Parameters#get_media_element_from_hash, it\nvalidates that the audio exists …\n"],["extract_cover","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-extract_cover","(input, output, duration)","<p>Generates the cover version\n"],["extract_cover","Media::Video::Uploader","classes/Media/Video/Uploader.html#method-i-extract_cover","(input, output, duration)","<p>Generate the additional cover versions\n"],["extract_end_transition_frame","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-i-extract_end_transition_frame","(output_path)","<p>Extract the end transition frame returning the path, raising an exception\nif the frame couldn&#39;t be …\n"],["extract_form_parameters","AudioEditorController","classes/AudioEditorController.html#method-i-extract_form_parameters","()","<p>Extracts parameters from the form, and converts them into the format of\nMedia::Audio::Editing::Parameters …\n"],["extract_form_parameters","VideoEditorController","classes/VideoEditorController.html#method-i-extract_form_parameters","()",""],["extract_image_component","Media::Video::Editing::Parameters","classes/Media/Video/Editing/Parameters.html#method-i-extract_image_component","(component, user_id)","<p>Using Media::Video::Editing::Parameters#get_media_element_from_hash, it\nvalidates that the image exists …\n"],["extract_single_form_parameter","VideoEditorController","classes/VideoEditorController.html#method-i-extract_single_form_parameter","(p, value)","<p>Extracts parameters from the form, and converts them into the format of\nMedia::Video::Editing::Parameters …\n"],["extract_start_transition_frame","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-i-extract_start_transition_frame","(output_path)","<p>Extract the start transition frame returning the path, raising an exception\nif the frame couldn&#39;t …\n"],["extract_text_component","Media::Video::Editing::Parameters","classes/Media/Video/Editing/Parameters.html#method-i-extract_text_component","(component)","<p>It validates that <code>content</code>, <code>colors</code> and\n<code>duration</code> are all correct\n"],["extract_textareas_params","ImageEditorController","classes/ImageEditorController.html#method-i-extract_textareas_params","(params)","<p>Extracts the params of the textareas in the image\n"],["extract_thumb","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-extract_thumb","(input, output, width, height)","<p>Generates the thumb version\n"],["extract_thumb","Media::Video::Uploader","classes/Media/Video/Uploader.html#method-i-extract_thumb","(input, output, width, height)","<p>Generate the additional thumb versions\n"],["extract_versions","Media::Audio::Uploader","classes/Media/Audio/Uploader.html#method-i-extract_versions","(infos)","<p>Since audio media don&#39;t have versions, it does nothing\n"],["extract_versions","Media::Uploader","classes/Media/Uploader.html#method-i-extract_versions","(infos)","<p>Implemented by the descendant classes in order to extract the versions\nneeded (used by Media::Uploader.copy …\n"],["extract_versions","Media::Video::Uploader","classes/Media/Video/Uploader.html#method-i-extract_versions","(infos)","<p>Generate the additional versions; it copies the files if their input paths\nhave been provided before …\n"],["extract_video_component","Media::Video::Editing::Parameters","classes/Media/Video/Editing/Parameters.html#method-i-extract_video_component","(component, user_id)","<p>Using Media::Video::Editing::Parameters#get_media_element_from_hash, it\nvalidates that the video exists …\n"],["extract_with_cathegories","Subject","classes/Subject.html#method-c-extract_with_cathegories","()","<p>Description\n<p>Used to assign a cathegory to each subject\n"],["failed_authentication_redirect_args","Users::SessionsController","classes/Users/SessionsController.html#method-i-failed_authentication_redirect_args","(path_params, error)","<p>Extracts the arguments of the url to be redirected to in case of failed\nauthentication\n"],["filename","DocumentUploader","classes/DocumentUploader.html#method-i-filename","()","<p>Override the filename of the uploaded files:\nAvoid using model.id or\nversion_name here, see uploader/store.rb ...\n"],["filename","ImageUploader","classes/ImageUploader.html#method-i-filename","()","<p>Override the filename of the uploaded files:\nAvoid using model.id or\nversion_name here, see uploader/store.rb ...\n"],["filename","Media::Uploader","classes/Media/Uploader.html#method-i-filename","(format)","<p>Filename of the media relative to the supplied format\n"],["filename_token","FilenameToken::InstanceMethods","classes/FilenameToken/InstanceMethods.html#method-i-filename_token","()","<p>Sets/retrieves the <code>@filename_token</code> instance variable\n"],["filename_without_extension","Media::Uploader","classes/Media/Uploader.html#method-i-filename_without_extension","()","<p>Filename without the extension (related to the format)\n"],["filetype","MediaElement","classes/MediaElement.html#method-i-filetype","(path)","<p>Description\n<p>It extracts the type of an element according to the same white list used in\nMediaElement#new_with_sti_type_inferring …\n"],["fill_locations","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-fill_locations","()","<p>Description\n<p>It fills the locations in the restriction form, receiving as input an id or\na code\n<p>Mode\n"],["filter","LessonsMediaElementsShared","classes/LessonsMediaElementsShared.html#method-i-filter","(f)","<p>Translation of the filter of a lesson or of an element (see Filters).\nExample of usage:\n &lt;% Filters::LESSONS_SET.each ...\n"],["filter_users","Admin::MessagesController","classes/Admin/MessagesController.html#method-i-filter_users","()","<p>Description\n<p>Ajax action that updates the number of recipients in the multiple\nnotification sender main …\n"],["final_wav","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-final_wav","(mp4_inputs_infos, paddings)","<p>Final wav track file generation\n<p>Logic\n<p>Extracting the m4a from the mp4\n"],["find_locations","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-find_locations","()","<p>Description\n<p>It fills the locations in the restriction form; specific for purchases\n<p>Mode\n"],["find_locations","Admin::UsersController","classes/Admin/UsersController.html#method-i-find_locations","()","<p>Description\n<p>Used for location filling all over the administration section (to be\ndistinguished by UsersController#find_locations …\n"],["find_locations","UsersController","classes/UsersController.html#method-i-find_locations","()","<p>Description\n<p>Necessary to fill the locations list\n<p>Mode\n"],["find_or_create","Export::Lesson::Archive","classes/Export/Lesson/Archive.html#method-i-find_or_create","()",""],["find_or_create","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-i-find_or_create","()",""],["find_or_create","Export::Lesson::Scorm","classes/Export/Lesson/Scorm.html#method-i-find_or_create","()","<p>If there is already an exported scorm for the latest version of this\nlesson, it retrieves it, otherwise …\n"],["folder","DocumentUploader","classes/DocumentUploader.html#method-i-folder","()",""],["folder","Export::Assets","classes/Export/Assets.html#method-c-folder","()",""],["folder","Export::Assets","classes/Export/Assets.html#method-i-folder","()",""],["folder","ImageUploader","classes/ImageUploader.html#method-i-folder","()",""],["folder","Media::Uploader","classes/Media/Uploader.html#method-i-folder","()","<p>Folder of the output path\n"],["folder","Slide::MathImages","classes/Slide/MathImages.html#method-i-folder","(id = model_id)","<p>private\n"],["folder_images","Slide::MathImages","classes/Slide/MathImages.html#method-i-folder_images","()",""],["folder_size","DocumentUploader","classes/DocumentUploader.html#method-c-folder_size","()",""],["folder_size","ImageUploader","classes/ImageUploader.html#method-c-folder_size","()",""],["folder_size","Media::Uploader","classes/Media/Uploader.html#method-c-folder_size","()","<p>Media folder size (descendants)\n"],["folders_images","Slide::MathImages","classes/Slide/MathImages.html#method-i-folders_images","()",""],["following","Slide","classes/Slide.html#method-i-following","()","<p>Description\n<p>Returns the following slide if any\n<p>Returns\n"],["formats","Media::Uploader","classes/Media/Uploader.html#method-i-formats","()","<p>Instance-level alias of +self.class::FORMATS+\n"],["frame_rate","Media::Video::Editing::Cmd::Transition","classes/Media/Video/Editing/Cmd/Transition.html#method-i-frame_rate","()","<p>Frame rate\n"],["frames_amount","Media::Video::Editing::Cmd::GenerateTransitionFrames","classes/Media/Video/Editing/Cmd/GenerateTransitionFrames.html#method-i-frames_amount","()","<p>Frames amount\n"],["frames_format","Media::Video::Editing::Cmd::GenerateTransitionFrames","classes/Media/Video/Editing/Cmd/GenerateTransitionFrames.html#method-i-frames_format","()","<p>Transition frames filename format\n"],["full_name","User","classes/User.html#method-i-full_name","()","<p>Description\n<p>Method used in the front end as a shortcut to show the full name of the\nuser\n<p>Returns\n"],["full_url","ApplicationHelper","classes/ApplicationHelper.html#method-i-full_url","(path)","<p>The parameter <code>path</code> must be an absolute path.\n"],["full_virtual_classroom","User","classes/User.html#method-i-full_virtual_classroom","(page, per_page)","<p>Description\n<p>Returns the list of lessons in the user&#39;s Virtual Classroom (used in\nVirtualClassroomController#index …\n"],["gender","Location","classes/Location.html#method-i-gender","()","<p>Description\n<p>Returns the gender (masculine, feminine) of the location.\n<p>Returns\n"],["generate_confirmation_token","User::Confirmation::ClassMethods","classes/User/Confirmation/ClassMethods.html#method-i-generate_confirmation_token","()","<p>Generate a confirmation token by looping and ensuring does not already\nexist\n"],["generate_password_token","User::ResetPassword::ClassMethods","classes/User/ResetPassword/ClassMethods.html#method-i-generate_password_token","()","<p>Generates the token to reset the password\n"],["generate_token","Purchase","classes/Purchase.html#method-i-generate_token","()","<p>Token generator\n"],["get","Valid::Validness","classes/Valid/Validness.html#method-i-get","(object, column, my_class)","<p>Main method of the class. It extracts from <code>object</code> the record\ncorresponding to <code>column</code>, using <code>class</code> as …\n"],["get_association","Valid","classes/Valid.html#method-c-get_association","(object, column, my_class=nil)","<p>Method that uses Validness to validate and extract the object associated to\na field\n"],["get_audios","GalleriesController","classes/GalleriesController.html#method-i-get_audios","(page)","<p>Gets the audios, using User#own_media_elements with <code>filter</code> =\n<code>audio</code>\n"],["get_audios_and_videos_for_reload","LessonEditorController","classes/LessonEditorController.html#method-i-get_audios_and_videos_for_reload","()","<p>Loads audios and videos, as in GalleriesController\n"],["get_class_from_column_name","Valid::Validness","classes/Valid/Validness.html#method-i-get_class_from_column_name","(x)","<p>Submethod of Validness#get\n"],["get_documents","GalleriesController","classes/GalleriesController.html#method-i-get_documents","(page, word = nil)","<p>Gets the documents, using User#own_documents\n"],["get_friendly_tags","Tag","classes/Tag.html#method-c-get_friendly_tags","(item)","<p>Description\n<p>Used as support for Lesson#tags and MediaElement#tags\n<p>Args\n"],["get_from_chain_params","Location","classes/Location.html#method-c-get_from_chain_params","(params)","<p>Description\n<p>Given a hash of parameters with the names of the categories as keys, this\nmethod returns the …\n"],["get_full_names","Admin::UsersController","classes/Admin/UsersController.html#method-i-get_full_names","()","<p>Description\n<p>Used for autocomplete in the search forms all over the administration\nsection\n<p>Mode\n"],["get_full_names","User","classes/User.html#method-c-get_full_names","(term)","<p>Description\n<p>Used in the autocomplete, in the section of the administrator where\nit&#39;s possible to send …\n"],["get_images","GalleriesController","classes/GalleriesController.html#method-i-get_images","(page)","<p>Gets the images, using User#own_media_elements with <code>filter</code> =\n<code>image</code>\n"],["get_lessons","Tag","classes/Tag.html#method-i-get_lessons","(page)","<p>Description\n<p>Gets the lessons associated to this tag through Tagging. Used in the\nadministrator section …\n"],["get_lessons","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-get_lessons","()","<p>Gets lessons, using User#full_virtual_classroom\n"],["get_lessons_for_dashboard","DashboardController","classes/DashboardController.html#method-i-get_lessons_for_dashboard","()","<p>Gets lessons for dashboard, and checks if there are more lessons to be\nextracted\n"],["get_list","TagsController","classes/TagsController.html#method-i-get_list","()","<p>Description\n<p>Gets the list of the most popular tags that match the inserted keyword\n(paramster <code>term</code>).  …\n"],["get_locale","ApplicationController","classes/ApplicationController.html#method-i-get_locale","()","<p>Gets the current language (see ApplicationController#set_locale)\n"],["get_media_element_from_hash","Media::Audio::Editing::Parameters","classes/Media/Audio/Editing/Parameters.html#method-i-get_media_element_from_hash","(hash, key, user_id, my_sti_type)","<p>Used in Media::Audio::Editing::Parameters#extract_component\n"],["get_media_element_from_hash","Media::Video::Editing::Parameters","classes/Media/Video/Editing/Parameters.html#method-i-get_media_element_from_hash","(hash, key, user_id, my_sti_type)","<p>Used in Media::Video::Editing::Parameters#extract_video_component,\nMedia::Video::Editing::Parameters#extract_image_component …\n"],["get_media_elements","Tag","classes/Tag.html#method-i-get_media_elements","(page)","<p>Description\n<p>Gets the media elements associated to this tag through Tagging. Used in the\nadministrator …\n"],["get_media_elements_for_dashboard","DashboardController","classes/DashboardController.html#method-i-get_media_elements_for_dashboard","()","<p>Gets media elements for dashboard, and checks if there are more media\nelements to be extracted\n"],["get_new_block","NotificationsController","classes/NotificationsController.html#method-i-get_new_block","()","<p>Description\n<p>Pagination with infinite scroll\n<p>Mode\n"],["get_own_documents","DocumentsController","classes/DocumentsController.html#method-i-get_own_documents","()","<p>Gets the documents using User#own_documents\n"],["get_own_lessons","LessonsController","classes/LessonsController.html#method-i-get_own_lessons","()","<p>Gets the lessons using User#own_lessons\n"],["get_own_media_elements","MediaElementsController","classes/MediaElementsController.html#method-i-get_own_media_elements","()","<p>Gets media elements using User#own_media_elements\n"],["get_recursive_array_from_params","ApplicationHelper","classes/ApplicationHelper.html#method-i-get_recursive_array_from_params","(params)","<p>Submethod of #manipulate_url, that takes into consideration nested url\nparameters.\n"],["get_result_lessons","SearchController","classes/SearchController.html#method-i-get_result_lessons","()","<p>Gets lessons using User#search_lessons\n"],["get_result_lessons_by_specific_tag","SearchController","classes/SearchController.html#method-i-get_result_lessons_by_specific_tag","()","<p>Gets lessons by specific tag, using User#search_lessons_with_tag\n"],["get_result_media_elements","SearchController","classes/SearchController.html#method-i-get_result_media_elements","()","<p>Gets media elements using User#search_media_elements\n"],["get_result_media_elements_by_specific_tag","SearchController","classes/SearchController.html#method-i-get_result_media_elements_by_specific_tag","()","<p>Gets media elements by specific tag, using\nUser#search_media_elements_with_tag\n"],["get_tags_associated_to_lesson_search","User","classes/User.html#method-i-get_tags_associated_to_lesson_search","(word, filter, subject_id, school_level_id)","<p>Submethod of User#search_lessons. It returns the first <code>n</code> tags\nassociated to the result of the research, …\n"],["get_tags_associated_to_media_element_search","User","classes/User.html#method-i-get_tags_associated_to_media_element_search","(word, filter)","<p>Submethod of User#search_media_elements. It returns the first\n<code>n</code> tags associated to the result of the …\n"],["get_tags_for_autocomplete","Tag","classes/Tag.html#method-c-get_tags_for_autocomplete","(user, a_word, item)","<p>Description\n<p>Method used in the autocomplete. It extracts the most used 20 tags matching\nthe inserted word. …\n"],["get_tags_for_item","Tag","classes/Tag.html#method-c-get_tags_for_item","(item_id, kind)","<p>Description\n<p>Used as a helper for the tag validations in Lesson and MediaElement\n(it&#39;s used to fill …\n"],["get_videos","GalleriesController","classes/GalleriesController.html#method-i-get_videos","(page)","<p>Gets the videos, using User#own_media_elements with <code>filter</code> =\n<code>video</code>\n"],["global_options","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-global_options","(additional_options = [])",""],["good_bookmarkable_type","Bookmark","classes/Bookmark.html#method-i-good_bookmarkable_type","()","<p>True if <code>bookmarkable_type</code> is in the correct syntax\n"],["good_reportable_type","Report","classes/Report.html#method-i-good_reportable_type","()","<p>Checks if the format of <code>reportable_type</code> is correct\n"],["good_taggable_type","Tagging","classes/Tagging.html#method-i-good_taggable_type","()","<p>Checks that <code>taggable_type</code> is in the correct format\n"],["handle_expanded_lessons_in_dashboard","DashboardController","classes/DashboardController.html#method-i-handle_expanded_lessons_in_dashboard","()","<p>Handles expanded lessons pagination\n"],["handle_expanded_media_elements_in_dashboard","DashboardController","classes/DashboardController.html#method-i-handle_expanded_media_elements_in_dashboard","()","<p>Handles expanded media elements pagination\n"],["hard_disk_chart","Statistics","classes/Statistics.html#method-i-hard_disk_chart","()","<p>Chart representing the size occupation of the folder\n&#39;public/media_elements&#39;\n"],["has_been_seen","Notification","classes/Notification.html#method-i-has_been_seen","()","<p>Description\n<p>Sets <code>seen</code> as <code>true</code>. Used in\nNotificationsController#seen\n"],["hash","Dumpable","classes/Dumpable.html#method-c-hash","(hash)","<p>converts an hash to a dumpable version of it\nXXX It&#39;s recursive thus\nprone to a +stack level too ...\n"],["height","Image","classes/Image.html#method-i-height","()","<p>Description\n<p>Returns the height in pixels.\n<p>Returns\n"],["height","ImageUploader","classes/ImageUploader.html#method-i-height","()",""],["height=","Image","classes/Image.html#method-i-height-3D","(height)","<p>Sets the <code>height</code> in <code>metadata</code>\n"],["home","PreloginController","classes/PreloginController.html#method-i-home","()","<p>Description\n<p>Home page of the application\n<p>Mode\n"],["human_size","Document","classes/Document.html#method-i-human_size","()","<p>Renders the size with mega, giga, etc\n"],["icon_title","Document","classes/Document.html#method-i-icon_title","()","<p>Returns the title associated to the icon\n"],["icon_url","Document","classes/Document.html#method-i-icon_url","(url_type = nil)","<p>Returns the icon, depending on the extension\n"],["ie","ApplicationHelper","classes/ApplicationHelper.html#method-i-ie","(x)","<p>It stands for “interpolation escape”\n"],["image","ImageUploader","classes/ImageUploader.html#method-i-image","()",""],["image?","MediaElement","classes/MediaElement.html#method-i-image-3F","()","<p>Description\n<p>Returns <code>true</code> if the element is of type Image\n<p>Returns\n"],["image_figure_classes","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-image_figure_classes","(image, *classes)",""],["image_for_image_editor","GalleriesController","classes/GalleriesController.html#method-i-image_for_image_editor","()","<p>Description\n<p>Gets the first block of images for the image editor: this is the only\ngallery with its own …\n"],["image_for_image_editor_new_block","GalleriesController","classes/GalleriesController.html#method-i-image_for_image_editor_new_block","()","<p>Description\n<p>Gets following blocks of images for the image editor\n<p>Mode\n"],["image_for_lesson_editor","GalleriesController","classes/GalleriesController.html#method-i-image_for_lesson_editor","()","<p>Description\n<p>Gets the first block of images for the lesson editor\n<p>Mode\n"],["image_for_lesson_editor_new_block","GalleriesController","classes/GalleriesController.html#method-i-image_for_lesson_editor_new_block","()","<p>Description\n<p>Gets following blocks of images for the lesson editor\n<p>Mode\n"],["image_path","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-image_path","(image)",""],["image_process","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-image_process","(processed_image_path)","<p>Processes the image in order to resize it to the default video sizes\n"],["image_style","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-image_style","(image)",""],["ims_duration","Export::Lesson::Scorm::View::Helper","classes/Export/Lesson/Scorm/View/Helper.html#method-i-ims_duration","(media_element, extension)",""],["in_edit_mode?","Image","classes/Image.html#method-i-in_edit_mode-3F","()","<p>Description\n<p>Used to check if the image is in <em>edit</em> <em>mode</em>: the image\nenters in edit mode when the image editor …\n"],["in_playlist?","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-in_playlist-3F","()","<p>Description\n<p>Checks if the lesson is in the playlist (i.e. if the field\n<code>position</code> is not null). Used in …\n"],["in_tmp_dir","Media::InTmpDir","classes/Media/InTmpDir.html#method-i-in_tmp_dir","()","<p>Takes a block in which you can access to a temporary folder path set to\n<code>@tmp_dir</code>. It takes care of clearing …\n"],["in_virtual_classroom?","Lesson","classes/Lesson.html#method-i-in_virtual_classroom-3F","(an_user_id, select=nil)","<p>Description\n<p>Checks if the lesson has a corresponding VirtualClassroomLesson for a\nspecific USer\n<p>Args\n"],["included","EnvRelativePath","classes/EnvRelativePath.html#method-c-included","(receiver)",""],["included","FilenameToken","classes/FilenameToken.html#method-c-included","(receiver)","<p>When included, sets FilenameToken::InstanceMethods#reset_filename_token as\n<code>before_save</code>\n"],["included","Media::Logging","classes/Media/Logging.html#method-c-included","(receiver)","<p>The modules which include this module will include EnvRelativePath too\n"],["included","Media::Shared","classes/Media/Shared.html#method-c-included","(receiver)","<p>Set Media::Shared::InstanceMethods#set_creation_mode as\n<code>before_create</code>, Media::Shared::InstanceMethods#upload_or_copy …\n"],["included","UrlTypes","classes/UrlTypes.html#method-c-included","(receiver)",""],["included","User::Authentication","classes/User/Authentication.html#method-c-included","(receiver)","<p>When included, sets User::Authentication::InstanceMethods#encrypt_password\nas <code>before_save</code> and\nUser::Authentication::InstanceMethods#clear_password_and_password_confirmation\n…\n"],["included","User::Confirmation","classes/User/Confirmation.html#method-c-included","(receiver)","<p>When included, sets User::Confirmation::InstanceMethods#confirmation_token!\nas <code>before_save</code>\n"],["included","User::ResetPassword","classes/User/ResetPassword.html#method-c-included","(receiver)","<p>Initializes the methods\n"],["increase_rpadding_depending_on_video_overflow","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-increase_rpadding_depending_on_video_overflow","(video_info, wav, paddings)","<p>Responsible of the step 3. of the Media::Video::Editing::Concat#final_wav\nlogic\n"],["index","Admin::DashboardController","classes/Admin/DashboardController.html#method-i-index","()","<p>Description\n<p>Action that creates instances of all the main information to be shown in\nthe administration …\n"],["index","Admin::DocumentsController","classes/Admin/DocumentsController.html#method-i-index","()","<p>Description\n<p>Main page of documents in the admin. If params is present, it is used\nAdminSearchForm to perform …\n"],["index","Admin::LessonsController","classes/Admin/LessonsController.html#method-i-index","()","<p>Description\n<p>Main page of the section &#39;lessons&#39; in admin. If params is present,\nit is used AdminSearchForm …\n"],["index","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-index","()","<p>Description\n<p>Main page of elements in the admin. If params is present, it is used\nAdminSearchForm to perform …\n"],["index","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-index","()","<p>Description\n<p>Main page of the section &#39;purchases&#39; in admin. If params is\npresent, it is used AdminSearchForm …\n"],["index","Admin::UsersController","classes/Admin/UsersController.html#method-i-index","()","<p>Description\n<p>Main page with the list of users. If params is present, it is used\nAdminSearchForm to perform …\n"],["index","DashboardController","classes/DashboardController.html#method-i-index","()","<p>Description\n<p>Extracts suggested lessons and elements (see User#suggested_lessons,\nUser#suggested_media_elements …\n"],["index","DocumentsController","classes/DocumentsController.html#method-i-index","()","<p>Description\n<p>Main page of the section &#39;documents&#39;. When it&#39;s called via ajax\nit&#39;s because …\n"],["index","FaqsController","classes/FaqsController.html#method-i-index","()","<p>Index of all the FAQS\n"],["index","LessonEditorController","classes/LessonEditorController.html#method-i-index","()","<p>Description\n<p>Main page of the editor for a specific lesson\n<p>Mode\n"],["index","LessonViewerController","classes/LessonViewerController.html#method-i-index","()","<p>Description\n<p>Index of a single lesson viewer; it&#39;s not necessary to authenticate, if\nin the url is …\n"],["index","LessonsController","classes/LessonsController.html#method-i-index","()","<p>Description\n<p>Main page of the section &#39;lessons&#39;. When it&#39;s called via ajax\nit&#39;s because …\n"],["index","MediaElementsController","classes/MediaElementsController.html#method-i-index","()","<p>Description\n<p>Main page of the section &#39;elements&#39;. When it&#39;s called via ajax\nit&#39;s because …\n"],["index","SearchController","classes/SearchController.html#method-i-index","()","<p>Description\n<p>Search for lessons and elements in the application&#39;s database. There\nare different options: …\n"],["index","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-index","()","<p>Description\n<p>Main page of the section &#39;Virtual Classroom&#39;. When it&#39;s called\nvia ajax it&#39;s …\n"],["init_math_images_copy","Slide","classes/Slide.html#method-i-init_math_images_copy","()","<p>Initializes math images copy\n"],["init_model","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-init_model","()",""],["init_model","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-init_model","()",""],["init_validation","Bookmark","classes/Bookmark.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","Document","classes/Document.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","DocumentsSlide","classes/DocumentsSlide.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","Lesson","classes/Lesson.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association). It&#39;s\ninitialized also the private attribute …\n"],["init_validation","Like","classes/Like.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","MailingListAddress","classes/MailingListAddress.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","MailingListGroup","classes/MailingListGroup.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","MediaElement","classes/MediaElement.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association). It&#39;s\ninitialized also the private attribute …\n"],["init_validation","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","Notification","classes/Notification.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","Purchase","classes/Purchase.html#method-i-init_validation","()","<p>Initializes the objects needed for the validation\n"],["init_validation","Report","classes/Report.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","Slide","classes/Slide.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","Tag","classes/Tag.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","Tagging","classes/Tagging.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","User","classes/User.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["init_validation","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-init_validation","()","<p>Initializes validation objects (see Valid.get_association)\n"],["initialize_and_authenticate_for_lesson_export","LessonExportController","classes/LessonExportController.html#method-i-initialize_and_authenticate_for_lesson_export","()","<p>Authenticates the user and checks the token if he is not authenticated.\nSimilar to the filter in LessonViewerController …\n"],["initialize_audio_with_owner_or_public","AudioEditorController","classes/AudioEditorController.html#method-i-initialize_audio_with_owner_or_public","()","<p>Initializes the given audio, and returns true if current_user owns it or\nit&#39;s public (these are the …\n"],["initialize_document","ApplicationController","classes/ApplicationController.html#method-i-initialize_document","()","<p>Checks if the parameter <code>document_id</code> is correct and a\ncorresponding document exists, and it belongs to …\n"],["initialize_documents_slides","LessonEditorController","classes/LessonEditorController.html#method-i-initialize_documents_slides","()","<p>Initializes the documents attached to the slide\n"],["initialize_emails","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-initialize_emails","()","<p>Initializes the list of the emails, from a mix of single emails and mailing\nlists (see MailingListGroup …\n"],["initialize_general_profile","ApplicationController","classes/ApplicationController.html#method-i-initialize_general_profile","(user_location)","<p>Initializes the local variables for general profile\n"],["initialize_image_with_owner_and_private","ImageEditorController","classes/ImageEditorController.html#method-i-initialize_image_with_owner_and_private","()","<p>Initializes the image, checking that it belongs to the current_user, and\nit&#39;s private (these are …\n"],["initialize_image_with_owner_or_public","ImageEditorController","classes/ImageEditorController.html#method-i-initialize_image_with_owner_or_public","()","<p>Initializes the image, checking that it belongs to the current_user, or\nit&#39;s public (these are the …\n"],["initialize_kind","LessonEditorController","classes/LessonEditorController.html#method-i-initialize_kind","()","<p>Initializes the kind of a new slide, taking it from the url parameters\n"],["initialize_layout","ApplicationController","classes/ApplicationController.html#method-i-initialize_layout","()","<p>Initializes all the objects which are necessary in the main sections (for\ninstance, anything related …\n"],["initialize_lesson","ApplicationController","classes/ApplicationController.html#method-i-initialize_lesson","()","<p>Checks if the parameter <code>lesson_id</code> is correct and a\ncorresponding lesson exists\n"],["initialize_lesson_destination","ApplicationController","classes/ApplicationController.html#method-i-initialize_lesson_destination","()","<p>Initializes the attribute <code>destination</code> for the lesson, and\nchecks if it&#39;s correct (see ButtonDestinations …\n"],["initialize_lesson_for_sending_link","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-initialize_lesson_for_sending_link","()","<p>Initializes the lesson and checks that it&#39;s in the Virtual Classroom\n"],["initialize_lesson_with_owner","ApplicationController","classes/ApplicationController.html#method-i-initialize_lesson_with_owner","()","<p>Uses ApplicationController#initialize_lesson and additionally checks if the\nlogged user owns the lesson …\n"],["initialize_lesson_with_owner_and_slide","LessonEditorController","classes/LessonEditorController.html#method-i-initialize_lesson_with_owner_and_slide","()","<p>Calls ApplicationController#initialize_lesson_with_owner, and additionally\nchecks if the slide corresponds …\n"],["initialize_lesson_with_owner_or_public","ApplicationController","classes/ApplicationController.html#method-i-initialize_lesson_with_owner_or_public","()","<p>Uses ApplicationController#initialize_lesson and additionally checks if the\nlogged user owns the lesson …\n"],["initialize_loaded_lessons","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-initialize_loaded_lessons","()","<p>Initializes the lessons just loaded in the multiple loader\n"],["initialize_location","ApplicationController","classes/ApplicationController.html#method-i-initialize_location","()","<p>Initializes the attribute called <code>where</code> with the name of the\ncontroller who called the action\n"],["initialize_mailing_list_address","MailingListsController","classes/MailingListsController.html#method-i-initialize_mailing_list_address","()","<p>Initializes mailing list address\n"],["initialize_mailing_list_address_with_owner","MailingListsController","classes/MailingListsController.html#method-i-initialize_mailing_list_address_with_owner","()","<p>Initializes mailing list address and checks that current_user is the owner\nof the corresponding group …\n"],["initialize_mailing_list_group","MailingListsController","classes/MailingListsController.html#method-i-initialize_mailing_list_group","()","<p>Initializes mailing list group\n"],["initialize_mailing_list_group_with_owner","MailingListsController","classes/MailingListsController.html#method-i-initialize_mailing_list_group_with_owner","()","<p>Initializes mailing list group and checks that current_user is the owner\n"],["initialize_media_element","ApplicationController","classes/ApplicationController.html#method-i-initialize_media_element","()","<p>Checks if the parameter <code>media_element_id</code> is correct and a\ncorresponding element exists\n"],["initialize_media_element_creation","GalleriesController","classes/GalleriesController.html#method-i-initialize_media_element_creation","()","<p>Common operations in media element initialization.\n"],["initialize_media_element_destination","ApplicationController","classes/ApplicationController.html#method-i-initialize_media_element_destination","()","<p>Initializes the attribute <code>destination</code> for the element, and\nchecks if it&#39;s correct (see ButtonDestinations …\n"],["initialize_media_element_with_owner","ApplicationController","classes/ApplicationController.html#method-i-initialize_media_element_with_owner","()","<p>Uses ApplicationController#initialize_media_element and returns true if\nadditionally the logged user …\n"],["initialize_media_element_with_owner_and_private","ApplicationController","classes/ApplicationController.html#method-i-initialize_media_element_with_owner_and_private","()","<p>Uses ApplicationController#initialize_media_element_with_owner and returns\ntrue if additionally the element …\n"],["initialize_media_element_with_owner_or_public","ApplicationController","classes/ApplicationController.html#method-i-initialize_media_element_with_owner_or_public","()","<p>Uses ApplicationController#initialize_media_element and returns true if\nadditionally the logged user …\n"],["initialize_metadata","Lesson","classes/Lesson.html#method-i-initialize_metadata","()","<p>Initialize metadata\n"],["initialize_notification_offset","NotificationsController","classes/NotificationsController.html#method-i-initialize_notification_offset","()","<p>Initializes the notifications offset\n"],["initialize_notification_with_owner","NotificationsController","classes/NotificationsController.html#method-i-initialize_notification_with_owner","()","<p>Checks if the owner of the notification is correct\n"],["initialize_page","GalleriesController","classes/GalleriesController.html#method-i-initialize_page","()","<p>Initializes the parameter <code>page</code> used in all the actions getting\nnew blocks in the gallery\n"],["initialize_page","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-initialize_page","()","<p>Initializes the page parameter\n"],["initialize_pagination","DashboardController","classes/DashboardController.html#method-i-initialize_pagination","()","<p>Initializes all the parameters of pagination\n"],["initialize_paginator","DocumentsController","classes/DocumentsController.html#method-i-initialize_paginator","()","<p>Initializes pagination parameters and filters\n"],["initialize_paginator","LessonsController","classes/LessonsController.html#method-i-initialize_paginator","()","<p>Initializes pagination parameters and filters\n"],["initialize_paginator","MediaElementsController","classes/MediaElementsController.html#method-i-initialize_paginator","()","<p>Initializes pagination parameters and filters\n"],["initialize_paginator","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-initialize_paginator","()","<p>Initializes paginator parameters\n"],["initialize_paginator_and_filters","SearchController","classes/SearchController.html#method-i-initialize_paginator_and_filters","()","<p>Initializes paginator and filters - generic method\n"],["initialize_paginator_and_filters_for_lessons","SearchController","classes/SearchController.html#method-i-initialize_paginator_and_filters_for_lessons","()","<p>Called from SearchController#initialize_paginator_and_filters, it contains\nspecific parameters for lessons …\n"],["initialize_paginator_and_filters_for_media_elements","SearchController","classes/SearchController.html#method-i-initialize_paginator_and_filters_for_media_elements","()","<p>Called from SearchController#initialize_paginator_and_filters, it contains\nspecific parameters for elements …\n"],["initialize_players_counter","ApplicationController","classes/ApplicationController.html#method-i-initialize_players_counter","()","<p>Initializes an incremental unique HTML identifier for all the instances of\naudio and video players (necessary …\n"],["initialize_position","ApplicationController","classes/ApplicationController.html#method-i-initialize_position","()","<p>Initializes the attribute <code>position</code> extracting it from\n<code>params</code>\n"],["initialize_registration_form","ApplicationController","classes/ApplicationController.html#method-i-initialize_registration_form","(subject_ids=[])","<p>Initializes the registration_form\n"],["initialize_subjects","LessonEditorController","classes/LessonEditorController.html#method-i-initialize_subjects","()","<p>Initializes the subjects\n"],["initialize_subjects_profile","ApplicationController","classes/ApplicationController.html#method-i-initialize_subjects_profile","(with_users_subjects)","<p>Initializes the local variables for updating subjects in the profile\n"],["initialize_video_with_owner_or_public","VideoEditorController","classes/VideoEditorController.html#method-i-initialize_video_with_owner_or_public","()","<p>Initializes the given video, and returns true if current_user owns it or\nit&#39;s public (these are the …\n"],["initialize_virtual_classroom_lesson","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-initialize_virtual_classroom_lesson","()","<p>Initializes a lesson for the Virtual Classroom (checks that it&#39;s\nincluded in the section &#39;lessons&#39; …\n"],["initialize_word_and_specific_tag","SearchController","classes/SearchController.html#method-i-initialize_word_and_specific_tag","()","<p>Extracts the parameters <code>tag_id</code> and <code>word</code>\n"],["input","Media::Video::Editing::Cmd::TrimAudioFile","classes/Media/Video/Editing/Cmd/TrimAudioFile.html#method-i-input","()","<p>input file path\n"],["input","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-input","()","<p>+MiniMagick::Image+ instance of the input image file\n"],["input_height","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-input_height","()","<p>Input image height\n"],["input_options","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-input_options","(additional_options = [])",""],["input_options_and_input_files","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-input_options_and_input_files","()",""],["input_width","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-input_width","()","<p>Input image width\n"],["inputs","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-inputs","()","<p>Inputs per format\n"],["inspect","Media::Uploader","classes/Media/Uploader.html#method-i-inspect","()",""],["instance","Export::Lesson::Ebook::View","classes/Export/Lesson/Ebook/View.html#method-c-instance","()",""],["instance","Export::Lesson::Scorm::View","classes/Export/Lesson/Scorm/View.html#method-c-instance","()",""],["invalid?","Slide::MathImages","classes/Slide/MathImages.html#method-i-invalid-3F","()",""],["is_deletable?","SchoolLevel","classes/SchoolLevel.html#method-i-is_deletable-3F","()","<p>Description\n<p>A school level is deletable if it has no associated lessons or users. Used\nin the administrator …\n"],["is_deletable?","Subject","classes/Subject.html#method-i-is_deletable-3F","()","<p>Description\n<p>A subject is deletable if it has no associated lessons or users. Used in\nthe administrator …\n"],["is_descendant_of?","Location","classes/Location.html#method-i-is_descendant_of-3F","(ancestor)","<p>Description\n<p>Checks if the current location is a descendant of a given one\n<p>Parameters\n"],["is_horizontal?","Image","classes/Image.html#method-i-is_horizontal-3F","(kind)","<p>Used to give an orientation on images\n"],["is_horizontal?","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-is_horizontal-3F","(kind = nil)","<p>Description\n<p>Method to check that it&#39;s horizontal\n<p>Args\n"],["italian_month","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-italian_month","(x)","<p>Italian translation for the month\n"],["jsd","ApplicationHelper","classes/ApplicationHelper.html#method-i-jsd","(object)",""],["label","Location","classes/Location.html#method-i-label","()","<p>Description\n<p>Used in the frontend, to extract the label of the location&#39;s category\n(translated with …\n"],["label_at","Location","classes/Location.html#method-c-label_at","(index, plural=false)","<p>Description\n<p>Returns the label of a chosen category\n<p>Args\n"],["last_slide","Lesson","classes/Lesson.html#method-i-last_slide","()","<p>Gets the last slide of this lesson\n"],["leave_edit_mode","Image","classes/Image.html#method-i-leave_edit_mode","(user_id)","<p>Description\n<p>The image leaves the <em>edit</em> <em>mode</em> for a particular user.\nUsed in ImageEditorController#edit. …\n"],["lesson","ReportsController","classes/ReportsController.html#method-i-lesson","()","<p>Description\n<p>Reports a lesson\n<p>Mode\n"],["lessons","DashboardController","classes/DashboardController.html#method-i-lessons","()","<p>Description\n<p>Expands or compresses lessons. This url is supposed to be called in\n&#39;expand&#39; mode …\n"],["lessons","FaqsController","classes/FaqsController.html#method-i-lessons","()","<p>A FAQ about lessons\n"],["lessons_for_tag","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-lessons_for_tag","()","<p>Description\n<p>&#39;Show&#39; action for all the lessons associated to a given tag\n<p>Mode\n"],["like","LessonsController","classes/LessonsController.html#method-i-like","()","<p>Description\n<p>Records a &#39;I like it&#39; on the lesson\n* <em>found</em>: reloads the\nlesson in compact mode\n* ...\n"],["like","User","classes/User.html#method-i-like","(lesson_id)","<p>Description\n<p>Saves a &#39;I like you&#39; for a Lesson\n<p>Args\n"],["like_button","Lesson","classes/Lesson.html#method-i-like_button","()","<p>Extracts the corresponding button depending on the fact that the lesson is\nliked by the user or not\n"],["liked?","Lesson","classes/Lesson.html#method-i-liked-3F","(an_user_id, select=nil)","<p>Description\n<p>Checks if there is a record of Like for a particular User\n<p>Args\n"],["link_form","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-link_form","()","<p>Description\n<p>Form to send to a list of emails the instructions to use the purchase code\n<p>Mode\n"],["load_lessons","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-load_lessons","()","<p>Description\n<p>From the list initialized in VirtualClassroomController#select_lessons,\nload lessons into …\n"],["load_media_element","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-load_media_element","()","<p>Description\n<p>Loads an element in the administrator (so the server is not charged too\nmuch)\n<p>Mode\n"],["load_preview","MediaElementsController","classes/MediaElementsController.html#method-i-load_preview","()","<p>Description\n<p>Loads the preview of the element (to be shown inside a special popup)\n<p>Mode\n"],["load_slide","LessonEditorController","classes/LessonEditorController.html#method-i-load_slide","()","<p>Description\n<p>Action that loads via Ajax a new slide\n<p>Mode\n"],["location_association_class","User","classes/User.html#method-c-location_association_class","()","<p>Description\n<p>Returns the class of the last Location class (the one that must be attached\nto a user). The …\n"],["location_to_s","Purchase","classes/Purchase.html#method-i-location_to_s","()","<p>Description\n<p>Method used in the front end that returns the resume of the location\n<p>Returns\n"],["locations","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-locations","()","<p>Description\n<p>&#39;Show&#39; action for locations\n<p>Mode\n"],["log_folder","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-log_folder","(*folders)","<p>Instance-relative log folder\n"],["log_folder","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-c-log_folder","()","<p>Composing processings main log folder\n"],["log_folder","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-log_folder","(_ = nil)","<p>Model-relative log folder path (the argument is ignored, it is specified\njust for ancestor method compatibility) …\n"],["log_folder","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-c-log_folder","()","<p>Log files folder path\n"],["log_folder","Media::Logging::ClassMethods","classes/Media/Logging/ClassMethods.html#method-i-log_folder","(folder_name = nil)","<p>Returns the class log folder which will contain the instances log\nfolders.\nThe naming of the folder is ...\n"],["log_folder","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-log_folder","(folder_name = nil)","<p>instance-/thread-relative/custom named log folder which will be located\ninside the class log folder\n"],["log_folder","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-log_folder","(*folders)","<p>Instance-relative log folder\n"],["log_folder","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-c-log_folder","()","<p>Composing processings main log folder\n"],["log_folder","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-log_folder","(_ = nil)","<p>Model-relative log folder path (the argument is ignored, it is specified\njust for ancestor method compatibility) …\n"],["log_folder","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-c-log_folder","()","<p>Log files folder path\n"],["log_folder_name","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-log_folder_name","()","<p>Instance-model-thread relative log folder\n"],["log_folder_name","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-log_folder_name","()","<p>Instance-model-thread relative log folder\n"],["logged_in?","ApplicationController","classes/ApplicationController.html#method-i-logged_in-3F","()","<p>Checks if there is a logged user\n"],["logged_upgrade_trial","UsersController","classes/UsersController.html#method-i-logged_upgrade_trial","()","<p>Description\n<p>Sends to the user an email containing the upgrade trial token\n<p>Mode\n"],["logs","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-logs","(prefix = nil)","<p>stdout and stderr logs ready for be passed to a Media::Cmd#run;\n<code>prefix</code> will be passed to\nMedia::Logging::InstanceMethods#stdout_log …\n"],["ltrim","Media::Video::Editing::Cmd::TrimAudioFile","classes/Media/Video/Editing/Cmd/TrimAudioFile.html#method-i-ltrim","()","<p>left trim\n"],["m4a_duration","Audio","classes/Audio.html#method-i-m4a_duration","()","<p>Description\n<p>Returns the float duration in seconds of the m4a track;\n<p>Returns\n"],["m4a_duration=","Audio","classes/Audio.html#method-i-m4a_duration-3D","(m4a_duration)","<p>Description\n<p>Sets the float duration in seconds of the m4a track;\n<p>Args\n"],["m4a_inputs","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-m4a_inputs","()","<p>array of m4a inputs\n"],["m4a_output","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-m4a_output","()","<p>m4a output filename\n"],["m4a_url","Audio","classes/Audio.html#method-i-m4a_url","(url_type = nil)","<p>Description\n<p>Returns the url for the audio in format <code>m4a</code>\n<p>Returns\n"],["mailing_lists","UsersController","classes/UsersController.html#method-i-mailing_lists","()","<p>Description\n<p>Manage your mailing lists and addresses (see MailingListsController)\n<p>Mode\n"],["manage_lessons_containing_me","MediaElement","classes/MediaElement.html#method-i-manage_lessons_containing_me","(value)","<p>Used as a submethod of MediaElement#disable_lessons_containing_me and\nMediaElement#enable_lessons_containing_me …\n"],["manipulate_url","ApplicationHelper","classes/ApplicationHelper.html#method-i-manipulate_url","(options = {})","<p>Manipulates the url, adding or removing parameters.\n"],["maps","Media::Video::Editing::Cmd::ReplaceAudio","classes/Media/Video/Editing/Cmd/ReplaceAudio.html#method-i-maps","()","<p>Video and audio maps\n"],["math_image_item_href","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-math_image_item_href","(math_image)",""],["math_image_item_id","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-math_image_item_id","(i)",""],["math_image_path_relative_from_contents_folder","Export::Lesson::Shared::EbookAndEbookView","classes/Export/Lesson/Shared/EbookAndEbookView.html#method-i-math_image_path_relative_from_contents_folder","(math_image_filename)",""],["math_images","Export::Lesson::Shared","classes/Export/Lesson/Shared.html#method-i-math_images","()",""],["math_images","Slide","classes/Slide.html#method-i-math_images","()","<p>Getter for math images\n"],["math_images=","Slide","classes/Slide.html#method-i-math_images-3D","(math_images)","<p>Setter for math images\n"],["math_images_archive_folder_name","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-math_images_archive_folder_name","()",""],["math_images_paths","Lesson","classes/Lesson.html#method-i-math_images_paths","(modality = nil)","<p>Returns the math images related to the slides of the lesson. If\n<code>modality</code> is <code>:full_path</code> it returns the …\n"],["math_images_paths","Slide","classes/Slide.html#method-i-math_images_paths","(modality = nil)","<p>Returns the math images related to this slide. If <code>modality</code> is\n<code>:full_path</code> it returns the absolute path, …\n"],["max_media_column_size","MediaElement","classes/MediaElement.html#method-i-max_media_column_size","()",""],["max_processed_filename_size","Media::Uploader","classes/Media/Uploader.html#method-i-max_processed_filename_size","(suffix)",""],["maximum_folder_size_exceeded?","DocumentUploader","classes/DocumentUploader.html#method-c-maximum_folder_size_exceeded-3F","()","<p>Whether the media folder size exceeds the maximum size or not\n"],["maximum_media_elements_folder_size_exceeded?","Media::Uploader","classes/Media/Uploader.html#method-c-maximum_media_elements_folder_size_exceeded-3F","()","<p>Whether the media folder size exceeds the maximum size or not\n"],["media","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-media","()","<p>Media attribute getter; returns the media instance associated if present\n(either an instance of Media::Video::Uploader …\n"],["media=","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-media-3D","(media)","<p>Media attribute setter; passes the supplied value to the relative class\nuploader\n"],["media_element","ReportsController","classes/ReportsController.html#method-i-media_element","()","<p>Description\n<p>Reports an element\n<p>Mode\n"],["media_element_item_attributes","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-media_element_item_attributes","(media_element, lesson, format)",""],["media_element_mime_type","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-media_element_mime_type","(path)",""],["media_element_path","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-media_element_path","(media_element, format = nil)",""],["media_elements","DashboardController","classes/DashboardController.html#method-i-media_elements","()","<p>Description\n<p>Expands or compresses media elements. This url is supposed to be called in\n&#39;expand&#39; …\n"],["media_elements","FaqsController","classes/FaqsController.html#method-i-media_elements","()","<p>A FAQ about media elements\n"],["media_elements_at","Slide","classes/Slide.html#method-i-media_elements_at","()","<p>Description\n<p>Extracts the media elements optimizing the number of queries\n<p>Returns\n"],["media_elements_files","Export::Lesson::Shared","classes/Export/Lesson/Shared.html#method-i-media_elements_files","(options = {})",""],["media_elements_folder_size","Media::Uploader","classes/Media/Uploader.html#method-c-media_elements_folder_size","()","<p>Media folder size\n"],["media_elements_folder_size_alert","MaintainerNotificationsMailer","classes/MaintainerNotificationsMailer.html#method-i-media_elements_folder_size_alert","(current_media_elements_folder_size, maximum_media_elements_folder_size)","<p>It sends an email if the media elements hard disk is getting full\n"],["media_elements_for_tag","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-media_elements_for_tag","()","<p>Description\n<p>&#39;Show&#39; action for all the elements associated to a given tag\n<p>Mode\n"],["media_validation","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-media_validation","()","<p>Execute the media validation\n"],["mime_type","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-mime_type","(path)",""],["min_duration","Audio","classes/Audio.html#method-i-min_duration","()","<p>Description\n<p>Returns the lower integer approximation of the minimum between\n<code>ogg_duration</code> and <code>m4a_duration</code> …\n"],["min_duration","Video","classes/Video.html#method-i-min_duration","()","<p>Description\n<p>Returns the lower integer approximation of the minimum between\n<code>webm_duration</code> and <code>mp4_duration</code> …\n"],["mixed_for_video_editor","GalleriesController","classes/GalleriesController.html#method-i-mixed_for_video_editor","()","<p>Description\n<p>Gets the first block of videos and images for the video editor\n<p>Mode\n"],["mixed_for_video_editor_image_new_block","GalleriesController","classes/GalleriesController.html#method-i-mixed_for_video_editor_image_new_block","()","<p>Description\n<p>Gets following blocks of images for the video editor\n<p>Mode\n"],["mixed_for_video_editor_video_new_block","GalleriesController","classes/GalleriesController.html#method-i-mixed_for_video_editor_video_new_block","()","<p>Description\n<p>Gets following blocks of videos for the video editor\n<p>Mode\n"],["mm_input","Media::Image::Editing::Crop","classes/Media/Image/Editing/Crop.html#method-i-mm_input","()",""],["model","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-model","()","<p>Model to be converted\n"],["model","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-model","()","<p>Model to be converted\n"],["model_id","Media::Uploader","classes/Media/Uploader.html#method-i-model_id","()","<p>id of the model instance\n"],["modified?","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-modified-3F","()","<p>Returns <code>true</code> if the model has already been modified at least\none time, otherwise <code>false</code>\n"],["modify","Lesson","classes/Lesson.html#method-i-modify","()","<p>Description\n<p>A method that sets all the fields that must be updated at any time the\nlesson or one of its …\n"],["mp4_duration","Video","classes/Video.html#method-i-mp4_duration","()","<p>Description\n<p>Returns the float duration in seconds of the mp4 track;\n<p>Returns\n"],["mp4_duration=","Video","classes/Video.html#method-i-mp4_duration-3D","(mp4_duration)","<p>Description\n<p>Sets the float duration in seconds of the mp4 track;\n<p>Args\n"],["mp4_inputs","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-mp4_inputs","()","<p>array of mp4 inputs\n"],["mp4_output","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-mp4_output","()","<p>mp4 output filename\n"],["mp4_output_path","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-mp4_output_path","()","<p>MP4 output path\n"],["mp4_url","Video","classes/Video.html#method-i-mp4_url","(url_type = nil)","<p>Description\n<p>Returns the url for the video in format <code>mp4</code>\n<p>Returns\n"],["my_copied_lessons","Statistics","classes/Statistics.html#method-i-my_copied_lessons","()","<p>Lessons created by the current user, and copied by other users\n"],["my_created_elements","Statistics","classes/Statistics.html#method-i-my_created_elements","()","<p>Media Elements loaded or created by the current user (including the public\nones, that might not be anymore …\n"],["my_created_lessons","Statistics","classes/Statistics.html#method-i-my_created_lessons","()","<p>Lessons created by the current user (not including the lessons he copied\nand still not modified)\n"],["my_liked_lessons","Statistics","classes/Statistics.html#method-i-my_liked_lessons","(first_n)","<p>The first n lessons of the current user, ordered by the number of likes\nreceived\n"],["my_likes_count","Statistics","classes/Statistics.html#method-i-my_likes_count","()","<p>The total amount of likes received by lessons created by the current user\n"],["my_linked_lessons_count","Statistics","classes/Statistics.html#method-i-my_linked_lessons_count","()","<p>Number of bookmarks on my lessons\n"],["new","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-new","()","<p>Description\n<p>It opens the page for multiple loading of elements\n<p>Mode\n"],["new","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-new","()","<p>Description\n<p>Form to create a new purchase\n<p>Mode\n"],["new","AudioEditorController","classes/AudioEditorController.html#method-i-new","()","<p>Description\n<p>Opens the audio editor empty\n<p>Mode\n"],["new","Dumpable::NoMethodError","classes/Dumpable/NoMethodError.html#method-c-new","(e)",""],["new","Export::Lesson::Archive","classes/Export/Lesson/Archive.html#method-c-new","(lesson, index_page)","<p>index_page: String\n"],["new","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-c-new","(lesson)",""],["new","Export::Lesson::Scorm","classes/Export/Lesson/Scorm.html#method-c-new","(lesson, rendered_slides)","<p>Initializer\n"],["new","LessonEditorController","classes/LessonEditorController.html#method-i-new","()","<p>Description\n<p>Form to create a new lesson\n<p>Mode\n"],["new","Media::Audio::Editing::Cmd::Concat","classes/Media/Audio/Editing/Cmd/Concat.html#method-c-new","(audios_with_paddings, output, format = nil)","<p>Instances a new Media::Audio::Editing::Cmd::Concat object\n<p>Arguments\n<p><em>audios_with_paddings</em>: audios with their …\n"],["new","Media::Audio::Editing::Cmd::Conversion","classes/Media/Audio/Editing/Cmd/Conversion.html#method-c-new","(input_file, output_file, format, input_file_info = nil)","<p>Creates a new Media::Audio::Editing::Cmd::Conversion instance\n<p>Arguments\n<p><em>input_file</em>: the path of file to …\n"],["new","Media::Audio::Editing::Cmd::Crop","classes/Media/Audio/Editing/Cmd/Crop.html#method-c-new","(input, output, _start, _duration, format)",""],["new","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-c-new","(params)","<p>Create a new Media::Audio::Editing::Composer instance, which processes\naudio composings. <code>params</code> should …\n"],["new","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-c-new","(inputs, output_without_extension, log_folder = nil)","<p>Creates a new Media::Audio::Editing::Concat instance, which can be used to\nconcatenate various audio …\n"],["new","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-c-new","(uploaded_path, output_path_without_extension, original_filename, model_id)","<p>Create a new Media::Audio::Editing::Conversion instance\n<p>Arguments\n<p><em>uploaded_path</em>: path to the file to be …\n"],["new","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-c-new","(input_files, output_file, format = nil)",""],["new","Media::Cmd::Avprobe","classes/Media/Cmd/Avprobe.html#method-c-new","(input_file)",""],["new","Media::Error","classes/Media/Error.html#method-c-new","(msg, data = {})","<p>Construct a new Exception object, passing a message and optionally debug\ndata\n<p>Args\n<p><em>msg</em>: error message\n"],["new","Media::Image::Editing::AddTextToImage","classes/Media/Image/Editing/AddTextToImage.html#method-c-new","(img, color_hex, font_size, coord_x, coord_y, text_value)","<p>Initializes the instance of this class; img is a mini_magick object\n"],["new","Media::Image::Editing::Cmd::TextToImage","classes/Media/Image/Editing/Cmd/TextToImage.html#method-c-new","(text, output, options = {})","<p>The text can be a File, a Tempfile or a Pathname: if so, its contents will\nbe used as text for the image …\n"],["new","Media::Image::Editing::Crop","classes/Media/Image/Editing/Crop.html#method-c-new","(input, output, x1, y1, x2, y2)","<p>Initializes the crop\n"],["new","Media::Image::Editing::ResizeToFill","classes/Media/Image/Editing/ResizeToFill.html#method-c-new","(input, output, width, height)","<p>Initializer\n"],["new","Media::Info","classes/Media/Info.html#method-c-new","(path, raise_if_invalid = true)","<p>Args\n<p><em>path</em>: path to a media file\n<p><em>raise_if_invalid</em>: if <code>true</code>, raises a Media::Error when\n<code>avprobe</code> doesn&#39;t …\n"],["new","Media::Queue","classes/Media/Queue.html#method-c-new","(*procs, close_connection_before_execution: false)",""],["new","Media::Uploader","classes/Media/Uploader.html#method-c-new","(model, column, value)","<p>Called by the relative model attribute setter and getter\n<p>Args\n<p><em>model</em>: instance to which the media supplied …\n"],["new","Media::Video::Editing::Cmd::AudioStreamToFile","classes/Media/Video/Editing/Cmd/AudioStreamToFile.html#method-c-new","(input, output)",""],["new","Media::Video::Editing::Cmd::Concat","classes/Media/Video/Editing/Cmd/Concat.html#method-c-new","(video_input, audio_input, duration, output, format)","<p>Returns a new descendant class instance depending on <code>format</code>\n"],["new","Media::Video::Editing::Cmd::Concat::Mp4","classes/Media/Video/Editing/Cmd/Concat/Mp4.html#method-c-new","(video_input, audio_input, _duration, output)",""],["new","Media::Video::Editing::Cmd::Concat::Webm","classes/Media/Video/Editing/Cmd/Concat/Webm.html#method-c-new","(video_input, audio_input, _duration, output)",""],["new","Media::Video::Editing::Cmd::Conversion","classes/Media/Video/Editing/Cmd/Conversion.html#method-c-new","(input_file, output_file, format, input_file_info = nil)","<p>Creates a new Media::Video::Editing::Cmd::Conversion instance\n<p>Arguments\n<p><em>input_file</em>: the path of file to …\n"],["new","Media::Video::Editing::Cmd::Crop","classes/Media/Video/Editing/Cmd/Crop.html#method-c-new","(input, output, _start, _duration, format)",""],["new","Media::Video::Editing::Cmd::ExtractFrame","classes/Media/Video/Editing/Cmd/ExtractFrame.html#method-c-new","(input, output, _seek)",""],["new","Media::Video::Editing::Cmd::GenerateTransitionFrames","classes/Media/Video/Editing/Cmd/GenerateTransitionFrames.html#method-c-new","(start_frame, end_frame, frames_format, frames_amount)",""],["new","Media::Video::Editing::Cmd::ImageToVideo","classes/Media/Video/Editing/Cmd/ImageToVideo.html#method-c-new","(input_file, output_file, format, duration)",""],["new","Media::Video::Editing::Cmd::M4aToWav","classes/Media/Video/Editing/Cmd/M4aToWav.html#method-c-new","(input_file, output_file)",""],["new","Media::Video::Editing::Cmd::MergeWebmVideoStreams","classes/Media/Video/Editing/Cmd/MergeWebmVideoStreams.html#method-c-new","(inputs, output)",""],["new","Media::Video::Editing::Cmd::ReplaceAudio","classes/Media/Video/Editing/Cmd/ReplaceAudio.html#method-c-new","(video_input, audio_input, _duration, output, format)",""],["new","Media::Video::Editing::Cmd::Transition","classes/Media/Video/Editing/Cmd/Transition.html#method-c-new","(transitions, output, _frame_rate, format)",""],["new","Media::Video::Editing::Cmd::TrimAudioFile","classes/Media/Video/Editing/Cmd/TrimAudioFile.html#method-c-new","(input, output, ltrim, rtrim)",""],["new","Media::Video::Editing::Cmd::VideoStreamToFile","classes/Media/Video/Editing/Cmd/VideoStreamToFile.html#method-c-new","(input, output)",""],["new","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-c-new","(params)","<p># video components (the components which will be manipulated in order to\nproduce the new video)\n :components ...\n"],["new","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-c-new","(inputs, output_without_extension, log_folder = nil)","<p>Creates a new Media::Video::Editing::Concat instance, which can be used to\nconcatenate various video …\n"],["new","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-c-new","(uploaded_path, output_path_without_extension, original_filename, model_id)","<p>Create a new Media::Video::Editing::Conversion instance\n<p>Arguments\n<p><em>uploaded_path</em>: path to the file to be …\n"],["new","Media::Video::Editing::Crop","classes/Media/Video/Editing/Crop.html#method-c-new","(inputs, output_without_extension, start, duration, log_folder = nil)","<p>Create a new Media::Video::Editing::Crop instance\n<p>Arguments\n<p><em>inputs</em>: hash with the input paths per video …\n"],["new","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-c-new","(input_path, output_without_extension, duration, log_folder = nil)","<p>Create a new Media::Video::Editing::ImageToVideo instance\n<p>Arguments\n<p><em>inputs</em>: hash with the input paths per …\n"],["new","Media::Video::Editing::ReplaceAudio","classes/Media/Video/Editing/ReplaceAudio.html#method-c-new","(video_inputs, audio_inputs, output_without_extension, log_folder = nil)","<p>Create a new Media::Video::Editing::ReplaceAudio instance\n<p>Arguments\n<p><em>video_inputs</em>: hash with the input paths …\n"],["new","Media::Video::Editing::TextToVideo","classes/Media/Video/Editing/TextToVideo.html#method-c-new","(text, output_without_extension, duration, options = {}, log_folder = nil)","<p>Create a new Media::Video::Editing::TextToVideo instance\n<p>Arguments\n<p><em>text</em>: text which will be displayed in …\n"],["new","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-c-new","(start_inputs, end_inputs, output_without_extension, log_folder = nil)","<p>Create a new Media::Video::Editing::Transition instance\n<p>Arguments\n<p><em>start_inputs</em>: hash with the start video …\n"],["new","MediaElementsController","classes/MediaElementsController.html#method-i-new","()","<p>Description\n<p>Opens the general page of the elements editor:\n* the <em>video</em> icon\nredirects to VideoEditorController#new ...\n"],["new","Slide::MathImages","classes/Slide/MathImages.html#method-c-new","(filenames = [], model_id = nil)",""],["new","ThreadProc","classes/ThreadProc.html#method-c-new","(close_connection_before_execution: false, &block)",""],["new","VideoEditorController","classes/VideoEditorController.html#method-i-new","()","<p>Description\n<p>Opens the video editor empty\n<p>Mode\n"],["new_mailing_list_name","User","classes/User.html#method-i-new_mailing_list_name","()","<p>Description\n<p>Creates a temporary unique new name for a MailingListGroup (used in\nMailingListController#create_group …\n"],["new_notification","Admin::MessagesController","classes/Admin/MessagesController.html#method-i-new_notification","()","<p>Description\n<p>Main page of the multiple notification sender\n<p>Mode\n"],["new_password","UserMailer","classes/UserMailer.html#method-i-new_password","(user)","<p>Mail to reset password\n"],["new_password_confirmed","UserMailer","classes/UserMailer.html#method-i-new_password_confirmed","(user, password)","<p>Mail to reset password, part 2\n"],["new_school_level","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-new_school_level","()","<p>Description\n<p>Action that creates a new school level\n<p>Mode\n"],["new_subject","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-new_subject","()","<p>Description\n<p>Action that creates a new subject\n<p>Mode\n"],["new_with_sti_type_inferring","MediaElement","classes/MediaElement.html#method-i-new_with_sti_type_inferring","(attributes = nil, options = {}, &block)","<p>Description\n<p>Alias for the method <code>new</code>, that additionally infers the media\ntype and selects the submodel …\n"],["next_in_playlist","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-next_in_playlist","()","<p>Description\n<p>Returns the next lesson in the playlist\n<p>Returns\n"],["notification_translation_key","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-notification_translation_key","()","<p>Locale key depending of the composing action type\n"],["notification_translation_key","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-notification_translation_key","()","<p>Locale key depending of the composing action type\n"],["notifications_visible_block","User","classes/User.html#method-i-notifications_visible_block","(offset, limit)","<p>Description\n<p>Gets the first visible block of notifications associated to the user (used\nin ApplicationController#initialize_layout …\n"],["notify_changes","Lesson","classes/Lesson.html#method-i-notify_changes","(msg)","<p>Description\n<p>Send a notification (containing the details of modifications) to all the\nusers who have a …\n"],["notify_modification","LessonsController","classes/LessonsController.html#method-i-notify_modification","()","<p>Description\n<p>Sends a notification about the details of the modification and sets the\nlesson as <em>notified</em> …\n"],["number_notifications_not_seen","User","classes/User.html#method-i-number_notifications_not_seen","()","<p>Description\n<p>Gets the total number of notifications not seen by the user (used in\nApplicationController#initialize_layout …\n"],["ogg_duration","Audio","classes/Audio.html#method-i-ogg_duration","()","<p>Description\n<p>Returns the float duration in seconds of the ogg track;\n<p>Returns\n"],["ogg_duration=","Audio","classes/Audio.html#method-i-ogg_duration-3D","(ogg_duration)","<p>Description\n<p>Sets the float duration in seconds of the ogg track;\n<p>Args\n"],["ogg_inputs","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-ogg_inputs","()","<p>array of the ogg inputs\n"],["ogg_output","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-ogg_output","()","<p>ogg output filename\n"],["ogg_url","Audio","classes/Audio.html#method-i-ogg_url","(url_type = nil)","<p>Description\n<p>Returns the url for the audio in format <code>ogg</code>\n<p>Returns\n"],["original_extension","DocumentUploader","classes/DocumentUploader.html#method-i-original_extension","()",""],["original_extension","ImageUploader","classes/ImageUploader.html#method-i-original_extension","()",""],["original_filename","Media::Uploader","classes/Media/Uploader.html#method-i-original_filename","()","<p>Original filename\n"],["original_filename_extension","Media::Uploader","classes/Media/Uploader.html#method-i-original_filename_extension","()","<p>Original filename extension\n"],["original_filename_without_extension","DocumentUploader","classes/DocumentUploader.html#method-i-original_filename_without_extension","()",""],["original_filename_without_extension","ImageUploader","classes/ImageUploader.html#method-i-original_filename_without_extension","()",""],["original_filename_without_extension","Media::Uploader","classes/Media/Uploader.html#method-i-original_filename_without_extension","()","<p>Original filename without the extension\n"],["output","Media::Video::Editing::Cmd::TrimAudioFile","classes/Media/Video/Editing/Cmd/TrimAudioFile.html#method-i-output","()","<p>output file path\n"],["output","Media::Video::Editing::Crop","classes/Media/Video/Editing/Crop.html#method-i-output","(format)","<p>Format-relative output path\n"],["output","Media::Video::Editing::ReplaceAudio","classes/Media/Video/Editing/ReplaceAudio.html#method-i-output","(format)","<p>Format-relative output path\n"],["output","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-i-output","(format)","<p>Format-relative output path\n"],["output_filename_without_extension","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-output_filename_without_extension","()","<p>Output filename without extension\n"],["output_filename_without_extension","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-output_filename_without_extension","()","<p>Output filename without extension\n"],["output_folder","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-output_folder","()","<p>Output folder path\n"],["output_folder","Media::Uploader","classes/Media/Uploader.html#method-i-output_folder","()",""],["output_folder","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-output_folder","()","<p>Output folder path\n"],["output_options","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-output_options","(additional_options = [])",""],["output_path","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-output_path","(format)","<p>Format-relative output path\n"],["output_path","Media::Uploader","classes/Media/Uploader.html#method-i-output_path","(format)","<p>Path where the uploaded/copied file will be written (related to the format)\n"],["output_path","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-output_path","(format)","<p>Format-relative output path\n"],["output_path","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-output_path","(format)","<p>Format-relative output path\n"],["output_path_without_extension","Media::Uploader","classes/Media/Uploader.html#method-i-output_path_without_extension","()","<p>Path where the uploaded/copied file will be written without the extension\n"],["output_threads","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-output_threads","()",""],["output_threads","Media::Video::Editing::Cmd::M4aToWav","classes/Media/Video/Editing/Cmd/M4aToWav.html#method-i-output_threads","()","<p>Output threads amount\n"],["output_without_extension","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-output_without_extension","(i)","<p>Temporary output path without extension\n"],["output_without_extension","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-output_without_extension","(i)","<p>Temporary output path without extension\n"],["outputs","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-outputs","()","<p>outputs per format\n"],["outputs","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-outputs","()","<p>outputs per format\n"],["outputs","Media::Video::Editing::Crop","classes/Media/Video/Editing/Crop.html#method-i-outputs","()","<p>Output paths hash per format\n"],["outputs","Media::Video::Editing::ReplaceAudio","classes/Media/Video/Editing/ReplaceAudio.html#method-i-outputs","()","<p>Output paths hash per format\n"],["outputs","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-i-outputs","()","<p>Output paths hash per format\n"],["overwrite","AudioEditorController","classes/AudioEditorController.html#method-i-overwrite","()","<p>Description\n<p>Saves the work overwriting an existing audio\n<p>Mode\n"],["overwrite","ImageEditorController","classes/ImageEditorController.html#method-i-overwrite","()","<p>Description\n<p>Saves the image overwriting an existing element\n<p>Mode\n"],["overwrite","VideoEditorController","classes/VideoEditorController.html#method-i-overwrite","()","<p>Description\n<p>Saves the work overwriting an existing video\n<p>Mode\n"],["overwrite!","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-overwrite-21","()","<p>Prepare the record for the media overwriting operation\n"],["own_documents","User","classes/User.html#method-i-own_documents","(page, per_page, order_by=SearchOrders::CREATED_AT, word=nil, from_gallery=false)","<p>Description\n<p>Extracts the documents present in the user&#39;s personal section (see\nDocumentsController#index …\n"],["own_lessons","User","classes/User.html#method-i-own_lessons","(page, per_page, filter=Filters::ALL_LESSONS, from_virtual_classroom=false)","<p>Description\n<p>Extracts the lessons present in the user&#39;s personal section (see\nLessonsController#index …\n"],["own_mailing_list_groups","User","classes/User.html#method-i-own_mailing_list_groups","()","<p>Description\n<p>Alternative to the association <code>mailing_list_groups</code>, that sorts\nthe groups by name\n<p>Returns\n"],["own_media_elements","User","classes/User.html#method-i-own_media_elements","(page, per_page, filter=Filters::ALL_MEDIA_ELEMENTS, from_gallery=false)","<p>Description\n<p>Extracts the elements present in the user&#39;s personal section (see\nMediaElementsController#index …\n"],["package_id","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-package_id","()",""],["paddings","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-paddings","(infos)","<p>Calculates the audio tracks paddings in order to have as result an audio\ntrack whose duration equals …\n"],["page_items_counter","AdminHelper","classes/AdminHelper.html#method-i-page_items_counter","(items)","<p>Counter used in pagination\n"],["page_not_found","ApplicationController","classes/ApplicationController.html#method-i-page_not_found","()","<p>In <em>production</em> environment pages with 404 status are catched by the\nweb server, so we don&#39;t make the …\n"],["parallel_jobs","Media::Queue","classes/Media/Queue.html#method-i-parallel_jobs","()",""],["params_with_standard_keys","AudioEditorController","classes/AudioEditorController.html#method-i-params_with_standard_keys","(scope)","<p>Sets the variable params[] with the regular keys like :title, :description,\n:tags\n"],["params_with_standard_keys","ImageEditorController","classes/ImageEditorController.html#method-i-params_with_standard_keys","(scope)","<p>Sets the variable params[] with the regular keys like :title, :description,\n:tags\n"],["params_with_standard_keys","VideoEditorController","classes/VideoEditorController.html#method-i-params_with_standard_keys","(scope)","<p>Sets the variable params[] with the regular keys like :title, :description,\n:tags\n"],["parent_locations","User","classes/User.html#method-i-parent_locations","()","<p>Description\n<p>Used in the front end, it returns a resume of all the parents locations of\nthe user\n<p>Returns …\n"],["parse_audio_stream","Media::Info","classes/Media/Info.html#method-i-parse_audio_stream","(scan_data)","<p>Used by Media::Info#streams, processes the audio streams parsing in order\nto return the infos\n"],["parse_video_stream","Media::Info","classes/Media/Info.html#method-i-parse_video_stream","(scan_data)","<p>Used by Media::Info#streams, processes the video streams parsing in order\nto return the infos\n"],["password_token!","User::ResetPassword::InstanceMethods","classes/User/ResetPassword/InstanceMethods.html#method-i-password_token-21","()","<p>Sets the password token using the automatic generator\n"],["path","Media::Uploader","classes/Media/Uploader.html#method-i-path","(format)","<p>Absolute path of the file, related to the supplied <code>format</code>\n(<code>format</code> required)\n"],["pathname_nestings","Export::Assets","classes/Export/Assets.html#method-i-pathname_nestings","()",""],["paths","Export::Assets","classes/Export/Assets.html#method-i-paths","()",""],["paths","Export::Lesson::Archive::Assets","classes/Export/Lesson/Archive/Assets.html#method-i-paths","()",""],["paths","Export::Lesson::Ebook::Assets","classes/Export/Lesson/Ebook/Assets.html#method-i-paths","()",""],["paths","Export::Lesson::Scorm::Assets","classes/Export/Lesson/Scorm/Assets.html#method-i-paths","()",""],["paths","ImageUploader","classes/ImageUploader.html#method-i-paths","()",""],["paths","Media::Uploader","classes/Media/Uploader.html#method-i-paths","()","<p>Hash where the keys are the supported formats (version formats included)\nand the values the absolute …\n"],["percentage","Statistics","classes/Statistics.html#method-i-percentage","(val, tot)","<p>Submethod for chart percentages\n"],["perform","Media::Audio::Editing::Composer::Job","classes/Media/Audio/Editing/Composer/Job.html#method-i-perform","()",""],["perform","Media::Audio::Editing::Conversion::Job","classes/Media/Audio/Editing/Conversion/Job.html#method-i-perform","()",""],["perform","Media::Video::Editing::Composer::Job","classes/Media/Video/Editing/Composer/Job.html#method-i-perform","()",""],["perform","Media::Video::Editing::Conversion::Job","classes/Media/Video/Editing/Conversion/Job.html#method-i-perform","()",""],["perform","NotificationsJob","classes/NotificationsJob.html#method-i-perform","()",""],["personificated_user","ApplicationController","classes/ApplicationController.html#method-i-personificated_user","()","<p>Returns the personificated user\n"],["personificated_user=","ApplicationController","classes/ApplicationController.html#method-i-personificated_user-3D","(user)","<p>Sets directly @current_user in order to avoid #current_user to check\nsession\n"],["placeholder_url","Audio","classes/Audio.html#method-i-placeholder_url","(type, url_type = nil)","<p>Description\n<p>Returns the url of the placeholder used in case the audio is being\nconverted (an animated …\n"],["placeholder_url","Video","classes/Video.html#method-i-placeholder_url","(type, url_type = nil)","<p>Description\n<p>Returns the url of the placeholder used in case the video is being\nconverted (an animated …\n"],["playlist","LessonViewerController","classes/LessonViewerController.html#method-i-playlist","()","<p>Description\n<p>Index of the playlist viewer\n<p>Mode\n"],["playlist","User","classes/User.html#method-i-playlist","(from_viewer=false)","<p>Description\n<p>Returns the playlist of the user&#39;s Virtual Classroom\n<p>Args\n"],["playlist_for_viewer","User","classes/User.html#method-i-playlist_for_viewer","()","<p>Description\n<p>Gets the playlist for the Lesson Viewer (used in\nLessonViewerController#playlist)\n<p>Returns\n"],["playlist_full?","User","classes/User.html#method-i-playlist_full-3F","()","<p>Description\n<p>Checks if the playlist is full in the user&#39;s Virtual Classroom\n<p>Returns\n"],["prepare_for_conversion","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-prepare_for_conversion","()","<p>Prepares for the conversion processing\n"],["prepare_for_conversion","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-prepare_for_conversion","()","<p>Prepares for the conversion processing\n"],["prepare_lesson_for_js","ApplicationController","classes/ApplicationController.html#method-i-prepare_lesson_for_js","()","<p>Reloads the lesson and sets the status using Lesson#set_status: used for\nAjax actions\n"],["prepare_media_element_for_js","ApplicationController","classes/ApplicationController.html#method-i-prepare_media_element_for_js","()","<p>Reloads the element and sets the status using Lesson#set_status: used for\nAjax actions\n"],["present_parent_id","Lesson","classes/Lesson.html#method-i-present_parent_id","()","<p>Checks if <code>parent_id</code> != <code>nil</code>\n"],["prev_editing_image","Image","classes/Image.html#method-i-prev_editing_image","()","<p>Description\n<p>Returns the path of the previous step conserved in image editor: this\nreplaces the current …\n"],["prev_in_playlist","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-prev_in_playlist","()","<p>Description\n<p>Returns the previous lesson in the playlist\n<p>Returns\n"],["previous","Slide","classes/Slide.html#method-i-previous","()","<p>Description\n<p>Returns the previous slide if any\n<p>Returns\n"],["processed_filename","Media::Uploader","classes/Media/Uploader.html#method-i-processed_filename","(filename, extension = nil)","<p>Returns a new filename adding a token (provided by the model instance),\nadding the extension if provided …\n"],["processed_original_filename","Media::Uploader","classes/Media/Uploader.html#method-i-processed_original_filename","()","<p>Original filename after being processed by Media::Uploader.process\n"],["processed_original_filename_without_extension","Media::Uploader","classes/Media/Uploader.html#method-i-processed_original_filename_without_extension","()","<p>Original filename after being processed by Media::Uploader.process without\nthe extension\n"],["profile","FaqsController","classes/FaqsController.html#method-i-profile","()","<p>A FAQ about user&#39;s profile\n"],["public_relative_folder","Media::Uploader","classes/Media/Uploader.html#method-i-public_relative_folder","()","<p>Folder of the output path relative to the Rails static resources folder (in\norder to be used by URLs …\n"],["public_relative_path","Media::Uploader","classes/Media/Uploader.html#method-i-public_relative_path","(format = nil)","<p>Returns the public relative path related to the supplied format, or without\nextension if format is blank …\n"],["publish","Lesson","classes/Lesson.html#method-i-publish","()","<p>Description\n<p>Sets <code>is_public</code> as <code>true</code> for the lesson and for\neach private MediaElement attached to the lesson …\n"],["publish","LessonsController","classes/LessonsController.html#method-i-publish","()","<p>Description\n<p>Calls Lesson#publish on the lesson.\n* <em>found</em>: reloads the lesson in\ncompact mode\n* <em>compact</em> ...\n"],["purchase_attributes","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-purchase_attributes","()",""],["purchase_code","PreloginController","classes/PreloginController.html#method-i-purchase_code","()","<p>Description\n<p>Matches the purchase code in the sign_up form\n<p>Mode\n"],["purchase_full","UserMailer","classes/UserMailer.html#method-i-purchase_full","(purchase)","<p>Mail sent in case a purchase reached the maximum numberr of users allowed\n"],["purchase_resume","UserMailer","classes/UserMailer.html#method-i-purchase_resume","(emails, purchase, message)","<p>Mail containing the link of a lesson\n"],["qa","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-qa","()",""],["qa","Media::Video::Editing::Cmd::ImageToVideo","classes/Media/Video/Editing/Cmd/ImageToVideo.html#method-i-qa","()","<p>audio quality (not set)\n"],["qa","Media::Video::Editing::Cmd::ReplaceAudio","classes/Media/Video/Editing/Cmd/ReplaceAudio.html#method-i-qa","()","<p>Audio quality\n"],["qa","Media::Video::Editing::Cmd::Transition","classes/Media/Video/Editing/Cmd/Transition.html#method-i-qa","()","<p>Audio quality (not set, unuseful)\n"],["quick_upload","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-quick_upload","()","<p>Description\n<p>Single action of a multiple loading of elements (with a multiple loading\nmany of these actions …\n"],["quick_upload_delete","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-quick_upload_delete","()","<p>Description\n<p>Deletes a temporary file in the multiple uploading section\n<p>Mode\n"],["qv","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-qv","()",""],["qv","Media::Video::Editing::Cmd::ExtractFrame","classes/Media/Video/Editing/Cmd/ExtractFrame.html#method-i-qv","()","<p>Video quality (not set)\n"],["qv","Media::Video::Editing::Cmd::M4aToWav","classes/Media/Video/Editing/Cmd/M4aToWav.html#method-i-qv","()","<p>Video quality (not set, unuseful)\n"],["ratio_value","Media::Image::Editing","classes/Media/Image/Editing.html#method-c-ratio_value","(w, h, value)","<p>Description\n<p>Returns the original value of a coordinate, given the actual value and the\nsize of the image …\n"],["reached_the_maximum_of_slides?","Lesson","classes/Lesson.html#method-i-reached_the_maximum_of_slides-3F","()","<p>Description\n<p>Checks if the maximum number of slides has been reached by this lesson\n(this number is configured …\n"],["reconfirm","Admin::UsersController","classes/Admin/UsersController.html#method-i-reconfirm","()","<p>Description\n<p>Sends again the email confirmation to an unconfirmed user.\n<p>Mode\n"],["redirect_or_setup","LessonExportController","classes/LessonExportController.html#method-i-redirect_or_setup","()","<p>Checks if the lesson is available, i.e. it doesn&#39;t contain audios or\nvideos in conversion. Same filter …\n"],["redirect_to_dashboard_if_logged_in","PreloginController","classes/PreloginController.html#method-i-redirect_to_dashboard_if_logged_in","()","<p>If the user is logged in, redirects to DashboardController#index\n"],["registration","PreloginController","classes/PreloginController.html#method-i-registration","()","<p>Description\n<p>Form to sign in\n<p>Mode\n"],["registration_policies","User","classes/User.html#method-i-registration_policies","()","<p>Description\n<p>Manual attr_reader for the constant REGISTRATION_POLICIES, that contains\nall the policies …\n"],["reload","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-reload","()","<p>Reload the instance taking care of clearing instance variables\n"],["reload","NotificationsController","classes/NotificationsController.html#method-i-reload","()","<p>Description\n<p>Reloads the notifications\n<p>Mode\n"],["reload_media","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-reload_media","()","<p>Clear the <code>@media</code> instance variable\n"],["remove","LessonsController","classes/LessonsController.html#method-i-remove","()","<p>Description\n<p>Removes the link of this lesson from your section.\n* <em>found</em>:\nreloads the lesson in compact ...\n"],["remove","MediaElementsController","classes/MediaElementsController.html#method-i-remove","()","<p>Description\n<p>Removes the link of this element from your section.\n* <em>found</em>:\nreloads the element in compact ...\n"],["remove_folder","Slide::MathImages","classes/Slide/MathImages.html#method-i-remove_folder","(_folder = folder)",""],["remove_folder!","DocumentUploader","classes/DocumentUploader.html#method-c-remove_folder-21","()",""],["remove_folder!","Export::Assets","classes/Export/Assets.html#method-c-remove_folder-21","()",""],["remove_folder!","Export::Lesson::Archive","classes/Export/Lesson/Archive.html#method-c-remove_folder-21","()",""],["remove_folder!","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-c-remove_folder-21","()",""],["remove_folder!","Export::Lesson::Scorm","classes/Export/Lesson/Scorm.html#method-c-remove_folder-21","()","<p>Removes the folder containing extracted scorms\n"],["remove_folder!","ImageUploader","classes/ImageUploader.html#method-c-remove_folder-21","()",""],["remove_folder!","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-c-remove_folder-21","()","<p>Remove the temporary folder\n"],["remove_folder!","Media::Logging","classes/Media/Logging.html#method-c-remove_folder-21","()","<p>Remove the log folder\n"],["remove_folder!","Media::Uploader","classes/Media/Uploader.html#method-c-remove_folder-21","()","<p>Remove media folder (descendants)\n"],["remove_folder!","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-c-remove_folder-21","()","<p>Remove the temporary folder\n"],["remove_from_admin_quick_uploading_cache","User","classes/User.html#method-i-remove_from_admin_quick_uploading_cache","(name)","<p>Description\n<p>Removes a file from the list of multiple uploading of an element (used in\nAdmin::MediaElementsController#quick_upload_delete …\n"],["remove_from_playlist","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-remove_from_playlist","()","<p>Description\n<p>Removes the lesson from the playlist and updates the positions of the other\nlessons. Used …\n"],["remove_from_virtual_classroom","Lesson","classes/Lesson.html#method-i-remove_from_virtual_classroom","(an_user_id)","<p>Description\n<p>Removes the associated record of VirtualClassroomLesson for a particular\nUser, if any. Used …\n"],["remove_lesson","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-remove_lesson","()","<p>Description\n<p>Removes the link of this lesson from your Virtual Classroom. List of\npossible graphical effects …\n"],["remove_lesson_from_inside","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-remove_lesson_from_inside","()","<p>Description\n<p>Removes the lesson from your Virtual Classroom while you are inside the\nVirtual Classroom …\n"],["remove_lesson_from_playlist","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-remove_lesson_from_playlist","()","<p>Description\n<p>Removes a lesson from the playlist\n<p>Mode\n"],["remove_math_images_folder","Slide","classes/Slide.html#method-i-remove_math_images_folder","()","<p>Removes the folder where math images are conserved\n"],["remove_old_files","Export::Lesson::Shared","classes/Export/Lesson/Shared.html#method-i-remove_old_files","()",""],["rename?","Media::Uploader","classes/Media/Uploader.html#method-i-rename-3F","()","<p>Whether the value of the attribute of the instance can be renamed\n"],["render_js_or_html_index","ApplicationController","classes/ApplicationController.html#method-i-render_js_or_html_index","()","<p>Used in all the actions which have double possible rendering (Html + Ajax,\nsee for instance DashboardController#index …\n"],["render_not_found","FaqsController","classes/FaqsController.html#method-i-render_not_found","()","<p>Renders not found page\n"],["replace_audio","Media::Video::Editing::ReplaceAudio","classes/Media/Video/Editing/ReplaceAudio.html#method-i-replace_audio","(format)","<p>Format-relative processing\n"],["report_lesson","User","classes/User.html#method-i-report_lesson","(lesson_id, msg)","<p>Description\n<p>Sends a Report for a Lesson\n<p>Args\n"],["report_media_element","User","classes/User.html#method-i-report_media_element","(media_element_id, msg)","<p>Description\n<p>Sends a Report for a MediaElement\n<p>Args\n"],["reports","Admin::MessagesController","classes/Admin/MessagesController.html#method-i-reports","()","<p>Description\n<p>Main page of the reports (for actions related to reports, see\nAdmin::ReportsController)\n<p>Mode …\n"],["request_reset_password","UsersController","classes/UsersController.html#method-i-request_reset_password","()","<p>Description\n<p>Opens the page where the user writes an email to reset the password\n<p>Mode\n"],["request_upgrade_trial","UsersController","classes/UsersController.html#method-i-request_upgrade_trial","()","<p>Description\n<p>Opens the page where the user writes an email and a purchase code to\nupgrade his trial account …\n"],["reset_filename_token","FilenameToken::InstanceMethods","classes/FilenameToken/InstanceMethods.html#method-i-reset_filename_token","()","<p>Resets the <code>@filename_token</code> instance variable\n"],["reset_password","UsersController","classes/UsersController.html#method-i-reset_password","()","<p>Description\n<p>Checks the token and resets the password; sends to the user an email\ncontaining the new password …\n"],["reset_password!","User::ResetPassword::ClassMethods","classes/User/ResetPassword/ClassMethods.html#method-i-reset_password-21","(token)","<p>Resets the password, together with the password token\n"],["resize_height","Image","classes/Image.html#method-i-resize_height","(kind)","<p>Resizes the height of an image\n"],["resize_height","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-resize_height","(kind = nil)","<p>Description\n<p>Method that resizes height according to the kind\n<p>Args\n"],["resize_width","Image","classes/Image.html#method-i-resize_width","(kind)","<p>Resizes the width of an image\n"],["resize_width","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-resize_width","(kind = nil)","<p>Description\n<p>Method that resizes width according to the kind\n<p>Args\n"],["restore_cache","AudioEditorController","classes/AudioEditorController.html#method-i-restore_cache","()","<p>Description\n<p>Opens the audio editor restoring the cache (if there is no cache, the\nEditor is empty but …\n"],["restore_cache","VideoEditorController","classes/VideoEditorController.html#method-i-restore_cache","()","<p>Description\n<p>Opens the video editor restoring the cache (if there is no cache, the\nEditor is empty but …\n"],["restore_lesson_availability","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-restore_lesson_availability","()","<p>Callback that restores as available = true the associated lesson, if this\ninstance of the element was …\n"],["rtrim","Media::Video::Editing::Cmd::TrimAudioFile","classes/Media/Video/Editing/Cmd/TrimAudioFile.html#method-i-rtrim","()","<p>right trim\n"],["run","Media::Audio::Editing::Composer","classes/Media/Audio/Editing/Composer.html#method-i-run","()","<p>Execute the composing processing; if it works, a success notification will\nbe sent to the user; otherwise …\n"],["run","Media::Audio::Editing::Concat","classes/Media/Audio/Editing/Concat.html#method-i-run","()","<p>Runs the concatenation processing\n"],["run","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-run","()","<p>Execute the conversion processing: it converts the media the output formats\nand sends a notification …\n"],["run","Media::Cmd","classes/Media/Cmd.html#method-i-run","(stdout = :dev_null, stderr = :dev_null)","<p>It runs the supplied command, logging\n<p>Args\n<p><em>stdout</em>: a valid <code>Subexec</code> value for stdout logging; if\n<code>:dev_null</code> …\n"],["run","Media::Cmd::Avprobe","classes/Media/Cmd/Avprobe.html#method-i-run","(stdout = nil, stderr = nil)",""],["run","Media::Image::Editing::Crop","classes/Media/Image/Editing/Crop.html#method-i-run","()","<p>Runs the crop\n"],["run","Media::Image::Editing::ResizeToFill","classes/Media/Image/Editing/ResizeToFill.html#method-i-run","()","<p>Runs the action\n"],["run","Media::Queue","classes/Media/Queue.html#method-i-run","()",""],["run","Media::Queue","classes/Media/Queue.html#method-c-run","(*procs, close_connection_before_execution: false)",""],["run","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-run","()","<p>Execute the composing processing; if it works, a success notification will\nbe sent to the user; otherwise …\n"],["run","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-run","()","<p>Runs the concatenation processing\n"],["run","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-run","()","<p>Execute the conversion processing: it converts the media the output\nformats, creates the other versions …\n"],["run","Media::Video::Editing::Crop","classes/Media/Video/Editing/Crop.html#method-i-run","()","<p>Execute the crop processing returning the output paths\n"],["run","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-run","()","<p>Execute the video creation processing\n"],["run","Media::Video::Editing::ReplaceAudio","classes/Media/Video/Editing/ReplaceAudio.html#method-i-run","()","<p>Execute the video creation processing\n"],["run","Media::Video::Editing::TextToVideo","classes/Media/Video/Editing/TextToVideo.html#method-i-run","()","<p>Execute the video creation processing\n"],["run","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-i-run","()","<p>Execute the transition creation processing\n<p>Logic\n<p>Extract the last frame of the start input\n"],["run!","Media::Cmd","classes/Media/Cmd.html#method-i-run-21","(stdout = :dev_null, stderr = :dev_null)","<p>As Media::Cmd#run, but raises a Media::Error if the command execution fails\n"],["saas_pre_authenticate","ApplicationController","classes/ApplicationController.html#method-i-saas_pre_authenticate","()","<p>Used only if saas authentication mode\n"],["sass_config","Export::Assets","classes/Export/Assets.html#method-i-sass_config","()",""],["save","AudioEditorController","classes/AudioEditorController.html#method-i-save","()","<p>Description\n<p>Saves the work as a new audio\n<p>Mode\n"],["save","ImageEditorController","classes/ImageEditorController.html#method-i-save","()","<p>Description\n<p>Saves the image as a new element\n<p>Mode\n"],["save","Slide::MathImages","classes/Slide/MathImages.html#method-i-save","()",""],["save","VideoEditorController","classes/VideoEditorController.html#method-i-save","()","<p>Description\n<p>Saves the work as a new video\n<p>Mode\n"],["save_cache","AudioEditorController","classes/AudioEditorController.html#method-i-save_cache","()","<p>Description\n<p>Saves the cache\n<p>Mode\n"],["save_cache","VideoEditorController","classes/VideoEditorController.html#method-i-save_cache","()","<p>Description\n<p>Saves the cache\n<p>Mode\n"],["save_current_slide","LessonEditorController","classes/LessonEditorController.html#method-i-save_current_slide","()","<p>Saves the current slide, using Slide#update_with_media_elements\n"],["save_editing_prev","Image","classes/Image.html#method-i-save_editing_prev","()","<p>Description\n<p>Copies the current temporary image into the previous temporary image.\n<p>Returns\n"],["save_in_admin_quick_uploading_cache","User","classes/User.html#method-i-save_in_admin_quick_uploading_cache","(file, title=nil, description=nil, tags=nil)","<p>Description\n<p>Saves a file in the uploading cache (used in\nAdmin::MediaElementsController#quick_upload): …\n"],["save_math_images","Slide","classes/Slide.html#method-i-save_math_images","()","<p>Saves math images\n"],["save_slide","LessonEditorController","classes/LessonEditorController.html#method-i-save_slide","()","<p>Description\n<p>Action that saves the current slide without doing anything else\n<p>Mode\n"],["save_slide_and_edit","LessonEditorController","classes/LessonEditorController.html#method-i-save_slide_and_edit","()","<p>Description\n<p>Action that saves the current slide and redirecting to\nLessonEditorController#edit right after …\n"],["save_slide_and_exit","LessonEditorController","classes/LessonEditorController.html#method-i-save_slide_and_exit","()","<p>Description\n<p>Action that saves the current slide and leaving the editor right after\n<p>Mode\n"],["school_levels","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-school_levels","()","<p>Description\n<p>Main subpage to manage school levels\n<p>Mode\n"],["scorm","LessonExportController","classes/LessonExportController.html#method-i-scorm","()","<p>Description\n<p>Exports the lesson in format SCORM\n<p>Mode\n"],["scorm_locale","Export::Lesson::Scorm::View::Helper","classes/Export/Lesson/Scorm/View/Helper.html#method-i-scorm_locale","()",""],["scorm_school_level","Export::Lesson::Scorm::View::Helper","classes/Export/Lesson/Scorm/View/Helper.html#method-i-scorm_school_level","(school_level)",""],["scorm_slide_title","Export::Lesson::Scorm::View::Helper","classes/Export/Lesson/Scorm/View/Helper.html#method-i-scorm_slide_title","(slide)",""],["search_documents","AdminSearchForm","classes/AdminSearchForm.html#method-c-search_documents","(params)","<p>Description\n<p>Search for documents: used in Admin::DocumentsController\n<p>Args\n"],["search_lessons","AdminSearchForm","classes/AdminSearchForm.html#method-c-search_lessons","(params)","<p>Description\n<p>Search for lessons: used in Admin::LessonsController\n<p>Args\n"],["search_lessons","User","classes/User.html#method-i-search_lessons","(word, page, for_page, order=nil, filter=nil, subject_id=nil, only_tags=nil, school_level_id=nil)","<p>Description\n<p>Global method used to search for lessons (see SearchController#index). Each\nlesson has its …\n"],["search_lessons_with_tag","User","classes/User.html#method-i-search_lessons_with_tag","(word, offset, limit, filter, subject_id, order_by, school_level_id)","<p>Submethod of User.search_lessons: if <code>word</code> is a Fixnum, it\nextracts all the lessons associated to that …\n"],["search_lessons_without_tag","User","classes/User.html#method-i-search_lessons_without_tag","(offset, limit, filter, subject_id, order_by, school_level_id)","<p>Submethod of User#search_lessons. It returns all the lessons in the\ndatabase, filtered by <code>filter</code> (chosen …\n"],["search_media_elements","AdminSearchForm","classes/AdminSearchForm.html#method-c-search_media_elements","(params)","<p>Description\n<p>Search for media elements: used in Admin::MediaElementsController\n<p>Args\n"],["search_media_elements","User","classes/User.html#method-i-search_media_elements","(word, page, for_page, order=nil, filter=nil, only_tags=nil)","<p>Description\n<p>Global method used to search for elements (see SearchController#index).\nEach element has its …\n"],["search_media_elements_with_tag","User","classes/User.html#method-i-search_media_elements_with_tag","(word, offset, limit, filter, order_by)","<p>Submethod of User.search_media_elements: if <code>word</code> is a Fixnum,\nit extracts all the elements associated …\n"],["search_media_elements_without_tag","User","classes/User.html#method-i-search_media_elements_without_tag","(offset, limit, filter, order_by)","<p>Submethod of User#search_media_elements. It returns all the elements in the\ndatabase, filtered by <code>filter</code> …\n"],["search_notifications_users","AdminSearchForm","classes/AdminSearchForm.html#method-c-search_notifications_users","(params, count_only=false)","<p>Description\n<p>Search for users who are going to receive a massive notification: this\nmethod is used to update …\n"],["search_order","LessonsMediaElementsShared","classes/LessonsMediaElementsShared.html#method-i-search_order","(so)","<p>Translation of the search order of a lesson or of an element (see\nSearchOrders). Example of usage:\n &lt;% ...\n"],["search_purchases","AdminSearchForm","classes/AdminSearchForm.html#method-c-search_purchases","(params)","<p>Description\n<p>Search for purchases: used in Admin::PurchasesController\n<p>Args\n"],["search_tags","AdminSearchForm","classes/AdminSearchForm.html#method-c-search_tags","(params)","<p>Description\n<p>Search for tags: used in Admin::SettingsController\n<p>Args\n"],["search_users","AdminSearchForm","classes/AdminSearchForm.html#method-c-search_users","(params)","<p>Description\n<p>Search for users: used in Admin::UsersController\n<p>Args\n"],["seconds_to_time","ApplicationHelper","classes/ApplicationHelper.html#method-i-seconds_to_time","(seconds)","<p>Extracts the time from seconds.\n"],["secure_compare","User::Authentication::ClassMethods","classes/User/Authentication/ClassMethods.html#method-i-secure_compare","(a, b)","<p>Strings comparison time-attacks safe\n<p>Returns\n<p><code>true</code> if the strings match, <code>false</code> otherwise\n"],["see_my_lesson","UserMailer","classes/UserMailer.html#method-i-see_my_lesson","(emails, sender, lesson, message)","<p>Mail containing the link of a lesson\n"],["seek","Media::Video::Editing::Cmd::ExtractFrame","classes/Media/Video/Editing/Cmd/ExtractFrame.html#method-i-seek","()","<p>Frame seek\n"],["seen","NotificationsController","classes/NotificationsController.html#method-i-seen","()","<p>Description\n<p>Sets that the notification has been seen by the user (see\nNotification#has_been_seen)\n<p>Mode …\n"],["select_lessons","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-select_lessons","()","<p>Description\n<p>Opens a window that contains the list of your lessons: you can pick\nmultiple lessons and add …\n"],["select_lessons_new_block","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-select_lessons_new_block","()","<p>Description\n<p>Gets a new block of the list initialized in\nVirtualClassroomController#select_lessons\n<p>Mode …\n"],["select_with_selected","Location","classes/Location.html#method-i-select_with_selected","(stop_before_leaves=false)","<p>Description\n<p>Returns an array of hashes (:selected, which may be either an id or zero if\nno location is …\n"],["select_without_selected","Location","classes/Location.html#method-i-select_without_selected","()","<p>Description\n<p>Returns an array of arrays, starting from the first ancestors until the\ndirect children of …\n"],["send_link","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-send_link","()","<p>Description\n<p>Action to send to a list of emails the instructions to use the purchase\ncode\n<p>Mode\n"],["send_link","VirtualClassroomController","classes/VirtualClassroomController.html#method-i-send_link","()","<p>Description\n<p>Sends a link containing the public url of a lesson to a list of emails (see\nMailingListGroup …\n"],["send_notifications","Admin::MessagesController","classes/Admin/MessagesController.html#method-i-send_notifications","(users_ids, title, message, basement)","<p>Uses Notification.send_to to send multiple messages organizing them in\ndifferent threads\n"],["send_reset_password","UsersController","classes/UsersController.html#method-i-send_reset_password","()","<p>Description\n<p>Sends to the user an email containing the reset password token\n<p>Mode\n"],["send_to","Notification","classes/Notification.html#method-c-send_to","(user_id_or_user_ids, title, message, basement)","<p>Description\n<p>Sends a notification to one or more users\n<p>Args\n"],["send_upgrade_trial","UsersController","classes/UsersController.html#method-i-send_upgrade_trial","()","<p>Description\n<p>Sends to the user an email containing the upgrade trial token\n<p>Mode\n"],["set_converted_to_true","Image","classes/Image.html#method-i-set_converted_to_true","()","<p>Sets <code>converted</code> to true\n"],["set_creation_mode","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-set_creation_mode","()","<p>Set the creation mode\n"],["set_locale","ApplicationController","classes/ApplicationController.html#method-i-set_locale","()","<p>Action that sets the current language of the application\n"],["set_size","Document","classes/Document.html#method-i-set_size","()","<p>Sets the size (callback)\n"],["set_status","Admin::UsersController","classes/Admin/UsersController.html#method-i-set_status","()","<p>Description\n<p>To switch the status of a user form &#39;banned&#39; to &#39;active&#39;\nand viceversa: used …\n"],["set_status","Lesson","classes/Lesson.html#method-i-set_status","(an_user_id, selects={})","<p>Description\n<p>This function fills the attributes is_reportable, status, in_vc and linked\n(the last three …\n"],["set_status","MediaElement","classes/MediaElement.html#method-i-set_status","(an_user_id, selects={})","<p>Description\n<p>This function fills the attributes is_reportable, status and\ninfo_changeable (the last two …\n"],["set_width_and_height","Image","classes/Image.html#method-i-set_width_and_height","()","<p>Sets <code>width</code> and <code>height</code> according to the data\ncontained in <code>media</code>\n"],["shellescaped_text","Media::Image::Editing::AddTextToImage","classes/Media/Image/Editing/AddTextToImage.html#method-i-shellescaped_text","()","<p>Extracts a shellescaped text\n"],["shellescaped_text","Media::Image::Editing::Cmd::TextToImage","classes/Media/Image/Editing/Cmd/TextToImage.html#method-i-shellescaped_text","()","<p>The shellescaped text\n"],["shellescaped_trim","Media::Video::Editing::Cmd::TrimAudioFile","classes/Media/Video/Editing/Cmd/TrimAudioFile.html#method-i-shellescaped_trim","(value)","<p>Shell-escape a trim value\n"],["shortest","Media::Video::Editing::Cmd::Concat::Mp4","classes/Media/Video/Editing/Cmd/Concat/Mp4.html#method-i-shortest","()","<p>cuts the outputs to the shortest stream duration\n"],["shortest","Media::Video::Editing::Cmd::Concat::Webm","classes/Media/Video/Editing/Cmd/Concat/Webm.html#method-i-shortest","()","<p>cuts the outputs to the shortest stream duration\n"],["show","Admin::UsersController","classes/Admin/UsersController.html#method-i-show","()","<p>Description\n<p>&#39;Show&#39; action for a single user. It contains personal statistics.\n<p>Mode\n"],["similar_durations?","Media::SimilarDurations","classes/Media/SimilarDurations.html#method-i-similar_durations-3F","(duration, other_duration)","<p>Compare two duration values, returning <code>true</code> if their\ndifference is lower than the <code>DURATION_THRESHOLD</code> …\n"],["similar_to?","Media::Info","classes/Media/Info.html#method-i-similar_to-3F","(other_infos_hash, ignore_bitrate = false)","<p>Compares two media info hashes (should be retrieved using\nMedia::Info#to_hash), returning <code>true</code> if they …\n"],["size","Document","classes/Document.html#method-i-size","()","<p>Returns the size\n"],["size","Image","classes/Image.html#method-i-size","()","<p>Image file size\n"],["size","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-size","(format)","<p>Media file size\n"],["size","Media::Uploader","classes/Media/Uploader.html#method-i-size","(format)",""],["size=","Document","classes/Document.html#method-i-size-3D","(size)","<p>Sets the size\n"],["size_and_extension","Document","classes/Document.html#method-i-size_and_extension","()","<p>Returns the size and extension in a nice way for the views\n"],["skip_authenticate_user_if_token","LessonViewerController","classes/LessonViewerController.html#method-i-skip_authenticate_user_if_token","()","<p>If the user has the token, it&#39;s not necessary to check that the lesson\nis public\n"],["slide_content","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-slide_content","(slide)",""],["slide_filename","Export::Lesson::Shared::EbookAndEbookView","classes/Export/Lesson/Shared/EbookAndEbookView.html#method-i-slide_filename","(slide)",""],["slide_item_id","Export::Lesson::Shared::EbookAndEbookView","classes/Export/Lesson/Shared/EbookAndEbookView.html#method-i-slide_item_id","(slide)",""],["slide_path","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-slide_path","(slide)",""],["slide_title","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-slide_title","(slide)",""],["sn","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-sn","()",""],["sn","Media::Video::Editing::Cmd::ExtractFrame","classes/Media/Video/Editing/Cmd/ExtractFrame.html#method-i-sn","()","<p>Subtitles disabling (not set, unuseful)\n"],["sn","Media::Video::Editing::Cmd::M4aToWav","classes/Media/Video/Editing/Cmd/M4aToWav.html#method-i-sn","()","<p>Discarding subtitles (not set, unuseful)\n"],["sox_input","Media::Audio::Editing::Cmd::Concat","classes/Media/Audio/Editing/Cmd/Concat.html#method-i-sox_input","(input, i)","<p>Input option for Sox\n"],["sox_output","Media::Audio::Editing::Cmd::Concat","classes/Media/Audio/Editing/Cmd/Concat.html#method-i-sox_output","(output, audios_with_paddings_length, i)","<p>Output option for Sox\n"],["sox_pad","Media::Audio::Editing::Cmd::Concat","classes/Media/Audio/Editing/Cmd/Concat.html#method-i-sox_pad","(paddings)","<p>Pad option for Sox\n"],["start","Media::Audio::Editing::Cmd::Crop","classes/Media/Audio/Editing/Cmd/Crop.html#method-i-start","()","<p>Output video start seek\n"],["start","Media::Video::Editing::Cmd::Crop","classes/Media/Video/Editing/Cmd/Crop.html#method-i-start","()","<p>Output video start seek\n"],["start_frame","Media::Video::Editing::Cmd::GenerateTransitionFrames","classes/Media/Video/Editing/Cmd/GenerateTransitionFrames.html#method-i-start_frame","()","<p>Start frame image path\n"],["statistics","UsersController","classes/UsersController.html#method-i-statistics","()","<p>Description\n<p>Static page with general and personal statistics\n<p>Mode\n"],["status","Lesson","classes/Lesson.html#method-i-status","(with_captions=false)","<p>Description\n<p>Substitute for the attr_reader relative to the attribute\n<code>status</code>.\n<p>Args\n"],["status","LessonsMediaElementsShared","classes/LessonsMediaElementsShared.html#method-i-status","(s)","<p>Translation of the status of a lesson or of an element (see Statuses). For\nan example of usage see Lesson#status …\n"],["status","MediaElement","classes/MediaElement.html#method-i-status","(with_captions=false)","<p>Description\n<p>Substitute for the attr_reader relative to the attribute\n<code>status</code>.\n<p>Args\n"],["stderr_log","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-stderr_log","(prefix = nil)","<p>instance stderr log file; it takes optionally a <code>prefix</code> which\nwill be prefixed to the filename\n"],["stdout_log","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-stdout_log","(prefix = nil)","<p>instance stdout log file; it takes optionally a <code>prefix</code> which\nwill be prefixed to the filename\n"],["sti_type_to_s","MediaElement","classes/MediaElement.html#method-i-sti_type_to_s","()","<p>Description\n<p>Extracts the translation of the <code>sti_type</code> from the translation\nfile\n<p>Returns\n"],["stop_if_cover","Slide","classes/Slide.html#method-i-stop_if_cover","()","<p>Stops the deletion if the slide is of kind &#39;cover&#39;\n"],["stop_if_public","MediaElement","classes/MediaElement.html#method-i-stop_if_public","()","<p>Callback that stops the destruction of a public element; the callback is\nnot fired if destroyable_even_if_public …\n"],["store_dir","DocumentUploader","classes/DocumentUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored.\nThis is a\nsensible default for uploaders ...\n"],["store_dir","ImageUploader","classes/ImageUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored.\nThis is a\nsensible default for uploaders ...\n"],["streams","Media::Info","classes/Media/Info.html#method-i-streams","()","<p>Returns an hash containing the streams infos when the media is valid,\n<code>nil</code> otherwise\n"],["strict","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-strict","()",""],["stylesheet_path","Export::Lesson::Ebook::View::Helper","classes/Export/Lesson/Ebook/View/Helper.html#method-i-stylesheet_path","()",""],["subject_ids=","User","classes/User.html#method-i-subject_ids-3D","(subject_ids)","<p>Description\n<p>Sets the subjects associated to this user (see UsersSubject)\n"],["subjects","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-subjects","()","<p>Description\n<p>Main subpage to manage subjects\n<p>Mode\n"],["subjects","Statistics","classes/Statistics.html#method-i-subjects","()","<p>Descriptions for Statistics#subjects_chart\n"],["subjects","UsersController","classes/UsersController.html#method-i-subjects","()","<p>Description\n<p>Form to edit your list of subjects\n<p>Mode\n"],["subjects_chart","Statistics","classes/Statistics.html#method-i-subjects_chart","()","<p>Chart representing the distribution of subjects among lessons\n"],["suggested_lessons","User","classes/User.html#method-i-suggested_lessons","(n)","<p>Description\n<p>Returns the first n suggested lessons (lessons which are public, not owned\nnor linked by the …\n"],["suggested_media_elements","User","classes/User.html#method-i-suggested_media_elements","(n)","<p>Description\n<p>Returns the first n suggested elements (elements which are public, not\nowned nor linked by …\n"],["super_admin?","User","classes/User.html#method-i-super_admin-3F","()","<p>Description\n<p>Checks if the user is super admin or not (used in User#admin? and\nUser#destroy_with_dependencies …\n"],["tags","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-tags","()","<p>Description\n<p>Main subpage to manage tags. If params is present, it is used\nAdminSearchForm to perform the …\n"],["tags","Lesson","classes/Lesson.html#method-i-tags","()","<p>Description\n<p>Used as (unproper) substitute for the attr_reader relative to the attribute\n<code>tags</code>: it extracts …\n"],["tags","MediaElement","classes/MediaElement.html#method-i-tags","()","<p>Description\n<p>Used as (unproper) substitute for the attr_reader relative to the attribute\n<code>tags</code>: it extracts …\n"],["tags=","Lesson","classes/Lesson.html#method-i-tags-3D","(tags)","<p>Description\n<p>Used as (unproper) substitute for the attribute writer relative to the\nattribute <code>tags</code>: the …\n"],["tags=","MediaElement","classes/MediaElement.html#method-i-tags-3D","(tags)","<p>Description\n<p>Used as (unproper) substitute for the attribute writer relative to the\nattribute <code>tags</code>: the …\n"],["temp_folder","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-temp_folder","()","<p>Temporary folder path\n"],["temp_folder","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-c-temp_folder","(model_id)","<p>Model-relative temporary folder path\n"],["temp_folder","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-temp_folder","()","<p>Temporary folder path\n"],["temp_folder","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-c-temp_folder","(model_id)","<p>Model-relative temporary folder path\n"],["temp_path","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-temp_path","()","<p>Model-relative temporary path\n"],["temp_path","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-c-temp_path","(model_id, original_filename)","<p>Model-relative temporary file path\n"],["temp_path","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-temp_path","()","<p>Model-relative temporary path\n"],["temp_path","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-c-temp_path","(model_id, original_filename)","<p>Model-relative temporary file path\n"],["text","Slide","classes/Slide.html#method-i-text","(options = {})",""],["text=","Slide","classes/Slide.html#method-i-text-3D","(text)","<p>Used to sanitize texts from TinyMCE\n"],["thread_relative_log_folder","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-thread_relative_log_folder","()","<p>thread-relative log folder getter\n"],["thread_relative_log_folder=","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-thread_relative_log_folder-3D","(thread_relative_log_folder)","<p>thread-relative log folder setter\n"],["thread_relative_log_folder_name","Media::Logging::InstanceMethods","classes/Media/Logging/InstanceMethods.html#method-i-thread_relative_log_folder_name","()","<p>thread-relative log folder name\n"],["thumb_output_path","Media::Video::Uploader","classes/Media/Video/Uploader.html#method-i-thumb_output_path","()","<p>Thumb file output path\n"],["thumb_url","Audio","classes/Audio.html#method-i-thumb_url","(url_type = nil)","<p>Description\n<p>Returns the url of the thumb image used in the section “elements” (a\nmusical note …\n"],["thumb_url","Image","classes/Image.html#method-i-thumb_url","()","<p>Description\n<p>Returns the url of the 200x200 thumb of the attached image.\n<p>Returns\n"],["thumb_url","Video","classes/Video.html#method-i-thumb_url","()","<p>Description\n<p>Returns the url of the thumb image used in the section “elements” (the\nmiddle frame …\n"],["time","Notification","classes/Notification.html#method-i-time","()","<p>Description\n<p>Renders the time difference\n"],["time_difference_single","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-time_difference_single","(symbol, seconds, offset)","<p>Gets the correct translation of a time difference\n"],["time_difference_to_s","TimeConvert","classes/TimeConvert.html#method-c-time_difference_to_s","(seconds)",""],["time_difference_to_s","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-time_difference_to_s","(seconds)","<p>Converts seconds into a nice time difference\n"],["title=","Slide","classes/Slide.html#method-i-title-3D","(title)","<p>Used to center vertically the title\n"],["title_tag","ApplicationHelper","classes/ApplicationHelper.html#method-i-title_tag","(slides = nil)","<p>Method to create the title of the html tab.\n"],["tmp_path","Media::InTmpDir","classes/Media/InTmpDir.html#method-i-tmp_path","(path)","<p>Returns the supplied <code>path</code> relative to <code>@tmp_dir</code>\n"],["to_a","Slide::MathImages","classes/Slide/MathImages.html#method-i-to_a","(modality = nil)",""],["to_hash","Media::Info","classes/Media/Info.html#method-i-to_hash","()","<p>Returns an hash with the media infos when the media is valid,\n<code>nil</code> otherwise\n"],["to_hash","Media::Uploader","classes/Media/Uploader.html#method-i-to_hash","()","<p>Hash where the keys are the supported formats (version formats excluded)\nplus a pair key =&gt; value …\n"],["to_s","Location","classes/Location.html#method-i-to_s","()","<p>Description\n<p>Shortcut to return the name of the location\n<p>Returns\n"],["to_s","Media::Cmd","classes/Media/Cmd.html#method-i-to_s","()","<p>alias to Media::Cmd#cmd\n"],["to_s","Media::Error","classes/Media/Error.html#method-i-to_s","()","<p>The error message plus the data informations (taken calling\nMedia::Error#data)\n"],["to_s","Media::Uploader","classes/Media/Uploader.html#method-i-to_s","()","<p>If the attribute is changed and can be renamed returns the processed\nfilename, otherwise returns Media::Uploader#public_relative_path …\n"],["to_s","SchoolLevel","classes/SchoolLevel.html#method-i-to_s","()","<p>Description\n<p>Returns the description of the object\n"],["to_s","Subject","classes/Subject.html#method-i-to_s","()","<p>Description\n<p>Returns the description of the object\n"],["to_s","Tag","classes/Tag.html#method-i-to_s","()","<p>Description\n<p>Returns the word\n"],["to_string","TimeConvert","classes/TimeConvert.html#method-c-to_string","(a_time)","<p>Main method, that calls the class TimeConverter\n"],["to_string","TimeConvert::TimeConverter","classes/TimeConvert/TimeConverter.html#method-i-to_string","(a_time)","<p>Main method that converts a time. The argument must be of type Time\n"],["toggle_locations","UsersController","classes/UsersController.html#method-i-toggle_locations","()","<p>Description\n<p>Toggles locations between active and disabled, in the registration form:\nused in case the …\n"],["toggle_publish","Admin::LessonsController","classes/Admin/LessonsController.html#method-i-toggle_publish","()","<p>Description\n<p>If the lesson is public, it unpublishes it; if it&#39;s private, it\npublishes it\n<p>Mode\n"],["tot_notifications_number","User","classes/User.html#method-i-tot_notifications_number","()","<p>Description\n<p>Gets the total number of notifications associated to the user (used in\nApplicationController#initialize_layout …\n"],["total_prototype_time","Media::Audio::Editing::Parameters","classes/Media/Audio/Editing/Parameters.html#method-i-total_prototype_time","(hash)","<p>This method doesn&#39;t check that the parameters are valid; it takes as\ninput either the basic hash …\n"],["total_prototype_time","Media::Video::Editing::Parameters","classes/Media/Video/Editing/Parameters.html#method-i-total_prototype_time","(hash)","<p>This method doesn&#39;t check that the parameters are valid; it takes as\ninput either the basic hash …\n"],["transition","Media::Video::Editing::Transition","classes/Media/Video/Editing/Transition.html#method-i-transition","(format)","<p>Format-relative processing\n"],["trial","UsersController","classes/UsersController.html#method-i-trial","()","<p>Description\n<p>Section of your profile about trial version handling\n<p>Mode\n"],["trial?","User","classes/User.html#method-i-trial-3F","()","<p>Description\n<p>True if the user is trial\n<p>Returns\n"],["trial_to_expiration","User","classes/User.html#method-i-trial_to_expiration","()","<p>Description\n<p>Returns the seconds missing to the expiration of the trial account\n<p>Returns\n"],["trial_to_expiration_percentage","User","classes/User.html#method-i-trial_to_expiration_percentage","()","<p>Description\n<p>Returns a string representing the percentage of trial expiration\n<p>Returns\n"],["try_all","NotificationsTest","classes/NotificationsTest.html#method-c-try_all","(language, an_user_id)","<p>Method that tries to send all the notifications in a given language\n"],["two_digits_number","ApplicationHelper","classes/ApplicationHelper.html#method-i-two_digits_number","(x)","<p>Renders a two digits number even in the case the number is only one-digit.\n"],["type","Document","classes/Document.html#method-i-type","()","<p>Checks in the list of accepted types\n"],["unauthorized","ApplicationController","classes/ApplicationController.html#method-i-unauthorized","()",""],["undo","Image","classes/Image.html#method-i-undo","()","<p>Description\n<p>Copies the previous temporary image into the current temporary image. Used\nin ImageEditorController#undo …\n"],["undo","ImageEditorController","classes/ImageEditorController.html#method-i-undo","()","<p>Description\n<p>Undoes the last modification to the image\n<p>Mode\n"],["unpublish","Lesson","classes/Lesson.html#method-i-unpublish","()","<p>Description\n<p>Sets <code>is_public</code> as <code>false</code>, deletes all bookmarks\n(see Bookmark) and copies in Virtual Classroom …\n"],["unpublish","LessonsController","classes/LessonsController.html#method-i-unpublish","()","<p>Description\n<p>Calls Lesson#unpublish on the lesson.\n* <em>found</em>: reloads the lesson\nin compact mode\n* <em>compact</em> ...\n"],["unsupported_format?","Media::Audio::Editing::Cmd::Concat","classes/Media/Audio/Editing/Cmd/Concat.html#method-i-unsupported_format-3F","()","<p>Whether the supplied format is supported by Sox or not\n"],["update","Admin::MediaElementsController","classes/Admin/MediaElementsController.html#method-i-update","()","<p>Description\n<p>Updates or publishes a private media element loaded by the administrator\n<p>Mode\n"],["update","Admin::PurchasesController","classes/Admin/PurchasesController.html#method-i-update","()","<p>Description\n<p>Action to update a purchase\n<p>Mode\n"],["update","DocumentsController","classes/DocumentsController.html#method-i-update","()","<p>Description\n<p>Updates the general information of the document (title and description)\n<p>Mode\n"],["update","LessonEditorController","classes/LessonEditorController.html#method-i-update","()","<p>Description\n<p>Action that updates general information (title, description, tags, subject)\nof an existing …\n"],["update","MediaElementsController","classes/MediaElementsController.html#method-i-update","()","<p>Description\n<p>Updates the general information of the element (title, description and\ntags)\n<p>Mode\n"],["update","UsersController","classes/UsersController.html#method-i-update","()","<p>Description\n<p>Updates your profile.\n<p>Mode\n"],["update_group","MailingListsController","classes/MailingListsController.html#method-i-update_group","()","<p>Description\n<p>Updates an existing group (it&#39;s possible to change the name)\n<p>Mode\n"],["update_location","Admin::SettingsController","classes/Admin/SettingsController.html#method-i-update_location","()","<p>Description\n<p>Updates a location\n<p>Mode\n"],["update_ok","ApplicationController","classes/ApplicationController.html#method-i-update_ok","(condition)","<p>Used as a submethod to filters like\nApplicationController#initialize_lesson: this method allows these …\n"],["update_or_create_tags","Lesson","classes/Lesson.html#method-i-update_or_create_tags","()","<p>Callback that updates the taggings associated to the lesson. If the\ncorresponding Tag doesn&#39;t exist …\n"],["update_or_create_tags","MediaElement","classes/MediaElement.html#method-i-update_or_create_tags","()","<p>Callback that updates the taggings associated to the element. If the\ncorresponding Tag doesn&#39;t exist …\n"],["update_subjects","UsersController","classes/UsersController.html#method-i-update_subjects","()","<p>Description\n<p>Updates your subjects.\n<p>Mode\n"],["update_with_media_elements","Slide","classes/Slide.html#method-i-update_with_media_elements","(title, text, media_elements, documents, math_images = nil)","<p>Description\n<p>Method that performs the list of actions related to the update of a\nslide&#39;s content:\n* ...\n"],["upgrade_trial_link","UsersController","classes/UsersController.html#method-i-upgrade_trial_link","()","<p>Function to be overwritten if the upgrade trial path changes\n"],["upload","Media::Uploader","classes/Media/Uploader.html#method-i-upload","()","<p>Executes the upload process\n"],["upload_copy_and_job","Media::Uploader","classes/Media/Uploader.html#method-i-upload_copy_and_job","(conversion_temp_path)","<p>Executes the copy of the uploaded file to the temporary folder and add\nrelated job to the jobs queue …\n"],["upload_or_copy","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-upload_or_copy","()","<p>Execute the media upload/copy operation\n"],["upload_or_copy","Media::Uploader","classes/Media/Uploader.html#method-i-upload_or_copy","()","<p>Start the upload or the copy processing, depending on <code>@value</code>\n"],["uploaded?","Media::Shared::InstanceMethods","classes/Media/Shared/InstanceMethods.html#method-i-uploaded-3F","()","<p>Returns <code>true</code> if the model was created with an upload action,\notherwise <code>false</code>\n"],["uploaded_filename_without_extension","Document","classes/Document.html#method-i-uploaded_filename_without_extension","()","<p>Returns the extension of the attachment after an upload\n"],["uploaded_path_extension","Media::Audio::Editing::Conversion","classes/Media/Audio/Editing/Conversion.html#method-i-uploaded_path_extension","()","<p>Uploaded path extension\n"],["uploaded_path_extension","Media::Video::Editing::Conversion","classes/Media/Video/Editing/Conversion.html#method-i-uploaded_path_extension","()","<p>Uploaded path extension\n"],["uri_path_and_query","Users::SessionsController","classes/Users/SessionsController.html#method-i-uri_path_and_query","(url)","<p>Used to extract the correct url to redirect after a successfull\nauthentication: <code>invalid_components_indexes</code> …\n"],["url","Document","classes/Document.html#method-i-url","(url_type = nil)","<p>Returns the url\n"],["url","Export::Lesson::Archive","classes/Export/Lesson/Archive.html#method-i-url","()",""],["url","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-i-url","()",""],["url","Export::Lesson::Scorm","classes/Export/Lesson/Scorm.html#method-i-url","()","<p>Extracts the url of the new scorm\n"],["url","Image","classes/Image.html#method-i-url","(url_type = nil)","<p>Description\n<p>Returns the url of the attached image.\n<p>Returns\n"],["url","Media::Uploader","classes/Media/Uploader.html#method-i-url","(format = nil)",""],["url_by_url_type","ApplicationHelper","classes/ApplicationHelper.html#method-i-url_by_url_type","(url, url_type)","<p>Url by url type.\n"],["url_by_url_type","UrlTypes::InstanceMethods","classes/UrlTypes/InstanceMethods.html#method-i-url_by_url_type","(url, url_type)",""],["used_in_private_lessons","AudioEditorController","classes/AudioEditorController.html#method-i-used_in_private_lessons","()","<p>Checks if the audio is being used in private lessons\n"],["used_in_private_lessons","VideoEditorController","classes/VideoEditorController.html#method-i-used_in_private_lessons","()","<p>Checks if the video is being used in private lessons\n"],["used_in_your_lessons?","Document","classes/Document.html#method-i-used_in_your_lessons-3F","()","<p>Returns true if the document has been attached to your own lessons\n"],["valid?","Media::Info","classes/Media/Info.html#method-i-valid-3F","()","<p><code>true</code> if the media is valid, <code>false</code> otherwise\n"],["valid?","Slide::MathImages","classes/Slide/MathImages.html#method-i-valid-3F","()",""],["valid_password?","User::Authentication::InstanceMethods","classes/User/Authentication/InstanceMethods.html#method-i-valid_password-3F","(password)","<p>Checks whether a string matches the password hash or not\n<p>Returns\n<p><code>true</code> if the string matches, <code>false</code> otherwise …\n"],["validate_accounts_number_for_purchase","User","classes/User.html#method-i-validate_accounts_number_for_purchase","()","<p>Validates that there are not too many users associated to the same purchase\n"],["validate_associations","Bookmark","classes/Bookmark.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","Document","classes/Document.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","DocumentsSlide","classes/DocumentsSlide.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","Lesson","classes/Lesson.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects; only for\n<code>parent_id</code>, it&#39;s allowed <code>nil</code>, and if …\n"],["validate_associations","Like","classes/Like.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","MailingListAddress","classes/MailingListAddress.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","MailingListGroup","classes/MailingListGroup.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","MediaElement","classes/MediaElement.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","Notification","classes/Notification.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","Purchase","classes/Purchase.html#method-i-validate_associations","()","<p>Validates the presence of associated elements\n"],["validate_associations","Report","classes/Report.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","Slide","classes/Slide.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","Tagging","classes/Tagging.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","User","classes/User.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_associations","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-validate_associations","()","<p>Validates the presence of all the associated objects\n"],["validate_availability","Bookmark","classes/Bookmark.html#method-i-validate_availability","()","<p>For lessons, validates that it doesn&#39;t belong to the user and that\nit&#39;s public\nFor elements, ...\n"],["validate_availability","Like","classes/Like.html#method-i-validate_availability","()","<p>Validates that the liked Lesson is not owned by the liker\n"],["validate_availability","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-validate_availability","()","<p>Validates that the lesson is in the user&#39;s section &#39;lessons&#39;\n"],["validate_codes","Purchase","classes/Purchase.html#method-i-validate_codes","()","<p>Validates that at least one between vat_code and ssn_code is present\n"],["validate_copied_not_modified","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-validate_copied_not_modified","()","<p>It validates that the lesson hasn&#39;t just been copied\n"],["validate_copied_not_modified_and_public","Lesson","classes/Lesson.html#method-i-validate_copied_not_modified_and_public","()","<p>Validates that a lesson just copied can&#39;t be public\n"],["validate_cover","Slide","classes/Slide.html#method-i-validate_cover","()","<p>The cover must have position = 1 and the other slides must have position\n&gt; 1\n"],["validate_dates","Purchase","classes/Purchase.html#method-i-validate_dates","()","<p>Validates the correct format of the dates\n"],["validate_email","MailingListAddress","classes/MailingListAddress.html#method-i-validate_email","()","<p>Validates the correct format of the email (see Valid.email?)\n"],["validate_email","Purchase","classes/Purchase.html#method-i-validate_email","()","<p>Validates the correct format of the email (see Valid.email?)\n"],["validate_email","User","classes/User.html#method-i-validate_email","()","<p>Validates the correct format of the email (see Valid.email?)\n"],["validate_email_not_changed","User","classes/User.html#method-i-validate_email_not_changed","()","<p>If the user is not new, it validates that the email didn&#39;t change\n"],["validate_image_properties","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-validate_image_properties","()","<p>Validates that if the associated element is an image, the fields\n<code>alignment</code> and <code>caption</code> can&#39;t be null; …\n"],["validate_impossible_changes","Bookmark","classes/Bookmark.html#method-i-validate_impossible_changes","()","<p>If not new record, none of the fields can be changed\n"],["validate_impossible_changes","Document","classes/Document.html#method-i-validate_impossible_changes","()","<p>Validates that if the document is not new record the field\n<code>user_id</code> cannot be changed\n"],["validate_impossible_changes","DocumentsSlide","classes/DocumentsSlide.html#method-i-validate_impossible_changes","()","<p>Validates that if the document is not new record the field\n<code>user_id</code> cannot be changed\n"],["validate_impossible_changes","Lesson","classes/Lesson.html#method-i-validate_impossible_changes","()","<p>Validates that if the lesson is not new record the fields\n<code>token</code>, <code>user_id</code>, <code>parent_id</code> cannot be\nchanged …\n"],["validate_impossible_changes","Like","classes/Like.html#method-i-validate_impossible_changes","()","<p>If the like is not a new record, <code>user_id</code> and\n<code>lesson_id</code> cannot be modified\n"],["validate_impossible_changes","MailingListAddress","classes/MailingListAddress.html#method-i-validate_impossible_changes","()","<p>If the group is not a new record, the field <code>group_id</code> can&#39;t\nbe changed\n"],["validate_impossible_changes","MailingListGroup","classes/MailingListGroup.html#method-i-validate_impossible_changes","()","<p>Validates that if the group is new record the field <code>user_id</code>\ncan&#39;t be changed\n"],["validate_impossible_changes","MediaElement","classes/MediaElement.html#method-i-validate_impossible_changes","()","<p>If it&#39;s new record, it validates that <code>is_public</code> must be\nfalse; otherwise, if public it validates …\n"],["validate_impossible_changes","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-validate_impossible_changes","()","<p>If new record, it validates that <code>slide_id</code> can&#39;t be changed\n"],["validate_impossible_changes","Notification","classes/Notification.html#method-i-validate_impossible_changes","()","<p>If not a new record, it validates that no field can be changed\n"],["validate_impossible_changes","Purchase","classes/Purchase.html#method-i-validate_impossible_changes","()","<p>Validates that if the purchase is not new record the field\n<code>accounts_number</code> cannot be changed\n"],["validate_impossible_changes","Report","classes/Report.html#method-i-validate_impossible_changes","()","<p>If the report is not a new record, it validates that no field can be\nchanged\n"],["validate_impossible_changes","Slide","classes/Slide.html#method-i-validate_impossible_changes","()","<p>If the slide is not a new record, <code>lesson_id</code> and\n<code>kind</code> can&#39;t be changed; moreover, if it&#39;s the …\n"],["validate_impossible_changes","Tagging","classes/Tagging.html#method-i-validate_impossible_changes","()","<p>If not a new record, it validates that no field changed\n"],["validate_impossible_changes","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-validate_impossible_changes","()","<p>If the lesson is not anymore a new record, <code>user_id</code> and\n<code>lesson_id</code> can&#39;t be changed\n"],["validate_math_images","Slide","classes/Slide.html#method-i-validate_math_images","()","<p>Validates math images\n"],["validate_math_images_links","Slide","classes/Slide.html#method-i-validate_math_images_links","()","<p>Validates math images links contained inside <code>text</code>. They must\nbe valid in order to create a valid ebook. …\n"],["validate_max_number_in_slide","DocumentsSlide","classes/DocumentsSlide.html#method-i-validate_max_number_in_slide","()","<p>Validates that the slide is not exceeding the maximum number of documents\n"],["validate_max_number_slides","Slide","classes/Slide.html#method-i-validate_max_number_slides","()","<p>Validates that the lesson is not exceeding the maximum number of slides\n"],["validate_maximum_folder_size","Document","classes/Document.html#method-i-validate_maximum_folder_size","()","<p>Validates the sum of the documents folder size to don&#39;t exceed the\nmaximum size available\n"],["validate_maximum_media_elements_folder_size","MediaElement","classes/MediaElement.html#method-i-validate_maximum_media_elements_folder_size","()","<p>Validates the sum of the media elements folder size to don&#39;t exceed the\nmaximum size available\n"],["validate_media_element","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-validate_media_element","()","<p>Validates the availability of the attached element (it must be either\npublic or mine)\n"],["validate_playlist_length","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-validate_playlist_length","()","<p>Validates the length of the playlist (compared to the one configured in\nsettings.yml)\n"],["validate_position","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-validate_position","()","<p>Validates the maximum position according to the type of Slide\n"],["validate_positions","VirtualClassroomLesson","classes/VirtualClassroomLesson.html#method-i-validate_positions","()","<p>Validates that the position can&#39;t be different by <code>nil</code> if\nthe lesson is new record\n"],["validate_public","Lesson","classes/Lesson.html#method-i-validate_public","()","<p>Validates that a new lesson can&#39;t be public\n"],["validate_publication_date","MediaElement","classes/MediaElement.html#method-i-validate_publication_date","()","<p>Validates that <code>publication_date</code> is blank if the element is not\npublic, and that it&#39;s present and …\n"],["validate_seen","Notification","classes/Notification.html#method-i-validate_seen","()","<p>Validates that <code>seen</code> must be false if the notification is a new\nrecord\n"],["validate_size","Document","classes/Document.html#method-i-validate_size","()","<p>Validates the size of the attached file, comparing it to the maximum size\nconfigured in megabytes in …\n"],["validate_size","MediaElement","classes/MediaElement.html#method-i-validate_size","()","<p>Validates the size of the attached file, comparing it to the maximum size\nconfigured in megabytes in …\n"],["validate_slide_type","DocumentsSlide","classes/DocumentsSlide.html#method-i-validate_slide_type","()","<p>Validates that the slide type is coherent with an attached document (it\nmust allow title)\n"],["validate_tags_length","Lesson","classes/Lesson.html#method-i-validate_tags_length","()","<p>Validates that the tags are at least the number configured in settings.yml,\nunless the attribute <code>save_tags</code> …\n"],["validate_tags_length","MediaElement","classes/MediaElement.html#method-i-validate_tags_length","()","<p>Validates that the tags are at least the number configured in settings.yml,\nunless the attribute <code>save_tags</code> …\n"],["validate_text","Slide","classes/Slide.html#method-i-validate_text","()","<p>Validates that if the slide doesn&#39;t allow the <code>text</code>, it\nmust be <code>nil</code>\n"],["validate_title","Slide","classes/Slide.html#method-i-validate_title","()","<p>Validates that if the slide doesn&#39;t allow the <code>title</code>, it\nmust be <code>nil</code>\n"],["validate_type_in_slide","MediaElementsSlide","classes/MediaElementsSlide.html#method-i-validate_type_in_slide","()","<p>It validates the coherence of the type of the attached element with the\ntype of the Slide\n"],["validation","Media::Audio::Uploader::Validation","classes/Media/Audio/Uploader/Validation.html#method-i-validation","()","<p>Method that adds the validation to the normal errors of the model Audio\n"],["validation","Media::Video::Uploader::Validation","classes/Media/Video/Uploader/Validation.html#method-i-validation","()","<p>Adds the new errors to the original model\n"],["vbitrate","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-vbitrate","()",""],["vcodec","Media::Cmd::Avconv","classes/Media/Cmd/Avconv.html#method-i-vcodec","()",""],["vcodec","Media::Video::Editing::Cmd::Concat::Webm","classes/Media/Video/Editing/Cmd/Concat/Webm.html#method-i-vcodec","()","<p>video codec\n"],["vcodec","Media::Video::Editing::Cmd::ReplaceAudio","classes/Media/Video/Editing/Cmd/ReplaceAudio.html#method-i-vcodec","()","<p>Video codec\n"],["version_formats","Media::Uploader","classes/Media/Uploader.html#method-i-version_formats","()","<p>Instance-level alias of +self.class::VERSION_FORMATS+\n"],["version_input_path_keys","Media::Uploader","classes/Media/Uploader.html#method-i-version_input_path_keys","()","<p>Hash where the keys are the versions and the values are the keys to be used\nin the initializer in order …\n"],["version_input_paths","Media::Uploader","classes/Media/Uploader.html#method-i-version_input_paths","()","<p>Hash where the keys are the versions and the values are the respective\ninstance variable values\n"],["version_input_paths?","Media::Uploader","classes/Media/Uploader.html#method-i-version_input_paths-3F","()","<p>Whether the version input paths have been provided or not\n"],["vfilters","Media::Video::Editing::Cmd::Conversion","classes/Media/Video/Editing/Cmd/Conversion.html#method-i-vfilters","()","<p>avconv video filters option (<code>-vf</code>)\n<p>The goal here is to resize the input video keeping the original ratio …\n"],["vframes","Media::Video::Editing::Cmd::ExtractFrame","classes/Media/Video/Editing/Cmd/ExtractFrame.html#method-i-vframes","()","<p>Frames amount (1)\n"],["video","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-video","()","<p>Initial video instance\n"],["video?","MediaElement","classes/MediaElement.html#method-i-video-3F","()","<p>Description\n<p>Returns <code>true</code> if the element is of type Video\n<p>Returns\n"],["video_copy","Media::Video::Editing::Composer","classes/Media/Video/Editing/Composer.html#method-i-video_copy","(input, output)","<p>Video file copy\n"],["video_editor_available","User","classes/User.html#method-i-video_editor_available","()","<p>Description\n<p>Checks if the Video Editor is available (this is true if there is no Video\nin conversion at …\n"],["video_editor_cache","User","classes/User.html#method-i-video_editor_cache","()","<p>Description\n<p>Returns the current Video Editor cache for this user\n<p>Returns\n"],["video_editor_cache!","User","classes/User.html#method-i-video_editor_cache-21","(cache = nil)","<p>Description\n<p>Saves the Video Editor cache; if the param is <code>nil</code>, the cache\nis emptied\n<p>Args\n"],["video_for_lesson_editor","GalleriesController","classes/GalleriesController.html#method-i-video_for_lesson_editor","()","<p>Description\n<p>Gets the first block of videos for the lesson editor\n<p>Mode\n"],["video_for_lesson_editor_new_block","GalleriesController","classes/GalleriesController.html#method-i-video_for_lesson_editor_new_block","()","<p>Description\n<p>Gets following blocks of videos for the lesson editor\n<p>Mode\n"],["video_stream_duration","Media::Video::Editing::ReplaceAudio","classes/Media/Video/Editing/ReplaceAudio.html#method-i-video_stream_duration","(video_input)","<p>Extracts the video tracks from <code>video_input</code> and returns its\nduration\n"],["video_streams","Media::Info","classes/Media/Info.html#method-i-video_streams","()","<p>Returns an array containing the video streams infos when the media is\nvalid, <code>nil</code> otherwise\n"],["videos_test","MediaElementsController","classes/MediaElementsController.html#method-i-videos_test","()","<p>Description\n<p>Test useful to check correctness of conversion and cross browser visibility\nof all elements …\n"],["view_path","Export::Lesson::Ebook","classes/Export/Lesson/Ebook.html#method-i-view_path","(path)",""],["virtual_classroom","FaqsController","classes/FaqsController.html#method-i-virtual_classroom","()","<p>A FAQ about the Virtual Classroom\n"],["virtual_classroom_button","Lesson","classes/Lesson.html#method-i-virtual_classroom_button","()","<p>Extracts the corresponding button depending on the fact that the lesson is\nin the Virtual Classroom or …\n"],["visive_tags","Lesson","classes/Lesson.html#method-i-visive_tags","()","<p>Description\n<p>Returns a string of tags separated by comma and space (“tag1, tag2, tag3”),\nby calling …\n"],["visive_tags","MediaElement","classes/MediaElement.html#method-i-visive_tags","()","<p>Description\n<p>It uses Tagging.visive_tags (see also Lesson#visive_tags)\n"],["visive_tags","Tagging","classes/Tagging.html#method-c-visive_tags","(tags)","<p>Description\n<p>Used as support for Lesson#visive_tags and MediaElement#visive_tags\n<p>Args\n"],["vmap","Media::Video::Editing::Cmd::Conversion","classes/Media/Video/Editing/Cmd/Conversion.html#method-i-vmap","()","<p>input videos filtering\n"],["vstreams","Media::Video::Editing::Cmd::Conversion","classes/Media/Video/Editing/Cmd/Conversion.html#method-i-vstreams","()","<p>input video streams (not used by the command)\n"],["wavs_with_paddings","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-wavs_with_paddings","(mp4_inputs_infos, paddings)","<p>Responsible of the 1., 2., 3., 4. steps of the\nMedia::Video::Editing::Concat#final_wav logic (step 3. …\n"],["webm_duration","Video","classes/Video.html#method-i-webm_duration","()","<p>Description\n<p>Returns the float duration in seconds of the webm track;\n<p>Returns\n"],["webm_duration=","Video","classes/Video.html#method-i-webm_duration-3D","(webm_duration)","<p>Description\n<p>Sets the float duration in seconds of the webm track;\n<p>Args\n"],["webm_inputs","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-webm_inputs","()","<p>array of the webm inputs\n"],["webm_output","Media::Video::Editing::Concat","classes/Media/Video/Editing/Concat.html#method-i-webm_output","()","<p>webm output filename\n"],["webm_output_path","Media::Video::Editing::ImageToVideo","classes/Media/Video/Editing/ImageToVideo.html#method-i-webm_output_path","()","<p>Webm output path\n"],["webm_url","Video","classes/Video.html#method-i-webm_url","(url_type = nil)","<p>Description\n<p>Returns the url for the video in format <code>webm</code>\n<p>Returns\n"],["what_is","PreloginController","classes/PreloginController.html#method-i-what_is","()","<p>Description\n<p>Section of the main page\n<p>Mode\n"],["width","Image","classes/Image.html#method-i-width","()","<p>Description\n<p>Returns the width in pixels.\n<p>Returns\n"],["width","ImageUploader","classes/ImageUploader.html#method-i-width","()",""],["width=","Image","classes/Image.html#method-i-width-3D","(width)","<p>Sets the <code>width</code> in <code>metadata</code>\n"],["word=","Tag","classes/Tag.html#method-i-word-3D","(word)","<p>Description\n<p>Setter method for the field <code>word</code>: it automatically turns the\nword to downcase without initial …\n"],["word_not_changed","Tag","classes/Tag.html#method-i-word_not_changed","()","<p>Validates that if not new record <code>word</code> can&#39;t be changed\n"],["write_asset","Export::Assets","classes/Export/Assets.html#method-i-write_asset","(asset)",""],["README","","files/doc/README_md.html","","<p>DESY - Digital Educational SYstem\n<p>Description\n<p>DESY - Digital Educational SYstem is a web application thought …\n"]]}}