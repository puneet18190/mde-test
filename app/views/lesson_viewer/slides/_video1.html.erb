<%
  url_type ||= nil
  video = slide.media_elements_at
  slide_text_options ||= {}
  slide_text           = slide.text(slide_text_options)
  unless defined? show_documents    then show_documents = true                                 end
  unless defined? media_viewer_type then media_viewer_type = MediaElement::ViewerTypes::CUSTOM end
%>

<div class="slide-content video1 normal-size">
  
  <div class="item title-container">
    <input class="title read-only" type="text" value="<%= slide.title %>" disabled="disabled"/>
  </div>
  
  <div class="item video-container">
    <div class="video read-only">
      <% if video %>
        <% if video.converted? %>
          <%= render :partial => "shared/players/#{media_viewer_type}/video", :locals => {:video => video, :initialize_now => loaded, url_type: url_type, exporting_slide: !loaded} %>
        <% else %>
          <%= image_tag video.placeholder_url(:lesson_viewer_small, url_type), :title => t('titles.not_available.video', :title => video.title) %>
        <% end %>
      <% end %>
    </div>
  </div>
  
  <div class="item text-container read-only">
    <%= slide_text.html_safe if slide_text %>
  </div>
  
  <% if show_documents && slide.documents_slides.present? %>
    <%= render :partial => 'lesson_viewer/documents', :locals => {:documents_slides => slide.documents_slides, :url_type => url_type} %>
  <% end %>
  
</div>
